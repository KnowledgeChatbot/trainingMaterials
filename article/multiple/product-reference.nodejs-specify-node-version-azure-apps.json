{"Title":"指定 Node.js 版本","Description":"了解如何指定 Azure 网站和云服务使用的 Node.js 版本","Content":"# <a name=\"specifying-a-nodejs-version-in-an-azure-application\"></a>在 Azure 应用程序中指定 Node.js 版本\r\n托管 Node.js 应用程序时，你可能希望确保应用程序使用特定版本的 Node.js。 有几种方法可为托管在 Azure 上的应用程序完成此操作。\r\n\r\n## <a name=\"default-versions\"></a>默认版本\r\n由 Azure 提供的 Node.js 版本会不断更新。 除非另行指定，否则使用 `WEBSITE_NODE_DEFAULT_VERSION` 环境变量中指定的默认版本。 若要覆盖此默认值，请遵循本文后续部分中的步骤\r\n\r\n> [!NOTE]\r\n> 如果要在 Azure 云服务（Web 角色或辅助角色）中托管应用程序，并且这是你首次部署应用程序，Azure 将尝试使用你在部署环境中所安装的 Node.js 的版本（如果该版本与 Azure 中提供的默认版本之一相匹配）。\r\n>\r\n>\r\n\r\n## <a name=\"versioning-with-packagejson\"></a>使用 package.json 进行版本控制\r\n可通过将以下内容添加到 **package.json** 文件中来指定要使用的 Node.js 的版本：\r\n\r\n    \"engines\":{\"node\":version}\r\n\r\n其中， *version* 是要使用的特定版本号。 可为版本指定更复杂的条件，例如：\r\n\r\n    \"engines\":{\"node\": \"0.6.22 || 0.8.x\"}\r\n\r\n由于 0.6.22 不是托管环境中提供的版本之一，改为使用 0.8 系列中的最高版本 - 0.8.4。\r\n\r\n## <a name=\"versioning-websites-with-app-settings\"></a>使用应用设置对网站进行版本控制\r\n如果是在网站中托管应用程序，可将环境变量 **WEBSITE_NODE_DEFAULT_VERSION** 设置为所需的版本。\r\n\r\n## <a name=\"versioning-cloud-services-with-powershell\"></a>使用 PowerShell 对云服务进行版本控制\r\n如果在云服务中托管应用程序，并且使用 Microsoft Azure PowerShell 部署该应用程序，则可使用 **Set-AzureServiceProjectRole** PowerShell cmdlet 替代默认的 Node.js 版本。 例如：\r\n\r\n    Set-AzureServiceProjectRole WebRole1 Node 0.8.4\r\n\r\n请注意，上述语句中的参数区分大小写。  通过检查角色的 **package.json** 中的 **engines** 属性，可验证是否已选择正确的 Node.js 版本。\r\n\r\n还可使用 **Get-AzureServiceProjectRoleRuntime** 检索托管为云服务的应用程序可用的 Node.js 版本的列表。  始终确认项目所依赖的 Node.js 版本是否在此列表中。\r\n\r\n## <a name=\"using-a-custom-version-with-azure-websites\"></a>对 Azure 网站使用自定义版本\r\n虽然 Azure 提供了 Node.js 的几个默认版本，但你可能希望使用并非默认提供的版本。 如果应用程序托管为 Azure 网站，则可以使用 **iisnode.yml** 文件完成此操作。 以下步骤演练了对 Azure 网站使用自定义版本的 Node.Js 的过程：\r\n\r\n1. 创建一个新目录，并在该目录中创建 **server.js** 文件。 **server.js** 文件应包含以下内容：\r\n\r\n        var http = require('http');\r\n        http.createServer(function(req,res) {\r\n          res.writeHead(200, {'Content-Type': 'text/html'});\r\n          res.end('Hello from Azure running node version: ' + process.version + '</br>');\r\n        }).listen(process.env.PORT || 3000);\r\n\r\n    这会显示在您浏览网站时使用的 Node.js 版本。\r\n2. 创建一个新网站并记录该网站的名称。 例如，以下命令使用 [Azure 命令行工具] 创建一个名为 **mywebsite**的新 Azure 网站，并为该网站启用 Git 存储库。\r\n\r\n        azure site create mywebsite --git\r\n3. 创建一个名为 **bin** 的新目录，将其作为包含 **server.js** 文件的目录的子目录。\r\n4. 下载要用于应用程序的特定版本 **node.exe**（Windows 版本）。 例如，以下命令使用 **curl** 下载版本 0.8.1：\r\n\r\n        curl -O http://nodejs.org/dist/v0.8.1/node.exe\r\n\r\n    将 **node.exe** 文件保存到先前创建的 **bin** 文件夹中。\r\n5. 在 **server.js** 文件所在的同一目录中创建 **iisnode.yml** 文件，然后将以下内容添加到 **iisnode.yml** 文件中：\r\n\r\n        nodeProcessCommandLine: \"D:\\home\\site\\wwwroot\\bin\\node.exe\"\r\n\r\n    将应用程序发布到 Azure 网站后，项目中的 **node.exe** 文件将位于此路径。\r\n6. 发布应用程序。 例如，由于我在前面创建了一个带 --git 参数的新网站，因此以下命令会将应用程序文件添加到我的本地 Git 存储库，并将它们推送到网站存储库：\r\n\r\n        git add .\r\n        git commit -m \"testing node v0.8.1\"\r\n        git push azure master\r\n\r\n    发布应用程序后，在浏览器中打开该网站。 应看到一则指示“Hello from Azure running node version: v0.8.1”的消息。\r\n\r\n## <a name=\"next-steps\"></a>后续步骤\r\n了解如何指定应用程序使用的 Node.js 版本后，请了解如何[使用模块]、[构建并部署 Node.js 网站](app-service-web/app-service-web-get-started-nodejs.md)以及[如何使用针对 Mac 和 Linux 的 Azure 命令行工具]。\r\n\r\n有关详细信息，请参阅 [Node.js 开发人员中心](/develop/nodejs/)。\r\n\r\n[如何使用针对 Mac 和 Linux 的 Azure 命令行工具]:cli-install-nodejs.md\r\n[Azure 命令行工具]:cli-install-nodejs.md\r\n[使用模块]: nodejs-use-node-modules-azure-apps.md\r\n[build and deploy a Node.js Web Site]: app-service-web/app-service-web-get-started-nodejs.md\r\n\r\n<!--Update_Description: update metadata properties -->  \r\n"}