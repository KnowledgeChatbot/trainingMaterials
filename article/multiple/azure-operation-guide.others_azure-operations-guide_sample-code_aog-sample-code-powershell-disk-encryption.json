{"Title":"使用 PowerShell 脚本为 Windows 虚拟机开启 Azure 磁盘加密功能","Description":"使用 PowerShell 脚本为 Windows 虚拟机开启 Azure 磁盘加密功能","Content":"\r\n# 使用 PowerShell 脚本为 Windows 虚拟机开启 Azure 磁盘加密功能\r\n\r\n本脚本提供了使用 PowerShell 脚本新建 Azure Key Vault 和 Azure AD 应用，并为现有 Windows 虚拟机开启 Azure 磁盘加密功能。\r\n\r\n> [!TIP]\r\n> 只有使用密钥加密密钥 ( KEK ) 配置加密的 VM 才支持已加密 VM 的备份和还原。 \r\n> 未使用 KEK 加密的 VM 不支持。 \r\n\r\n> [!NOTE]\r\n> 目前暂时不支持更新已加密的高级存储 VM 的加密设置。\r\n\r\n创建 Azure 密钥保管库 :\r\n\r\n```PowerShell\r\n$RGName = \"< yourResourcegroup >\"\r\n$Location = \"<China East or China North>\"\r\n$VaultName= \"<yourKeyVaultname>\"\r\n$KeyVault = New-AzureRmKeyVault -VaultName $VaultName -ResourceGroupName $RGName -Location $Location\r\n```\r\n\r\n设置 Azure AD 应用程序 :\r\n\r\n为在 Azure 中正在运行的 VM 上启用加密时，Azure 磁盘加密将生成加密密钥并将其写入 Key Vault。 在 Key Vault 中管理加密密钥需要 Azure AD 身份验证，可以使用基于客户端机密的身份验证或基于客户端证书的 Azure AD 身份验证。请根据实际需要选择下列四种方式之一配置 Azure AD 应用程序。\r\n\r\n1. 创建基于客户端机密的 Azure AD 应用程序 :\r\n    \r\n    ```PowerShell\r\n    $aadClientSecret = \"<yourAadClientSecret>\"\r\n    $azureAdApplication = New-AzureRmADApplication -DisplayName \"<Your Application Display Name>\" -HomePage \"<https://YourApplicationHomePage>\" -IdentifierUris \"<https://YouApplicationUri>\" -Password $aadClientSecret\r\n    $servicePrincipal = New-AzureRmADServicePrincipal –ApplicationId $azureAdApplication.ApplicationId\r\n    ```\r\n\r\n2. 为现有的 Azure AD 应用程序配置客户端机密\r\n\r\n    若要执行以下命令，请获取并使用 [Azure AD PowerShell 模块](https://technet.microsoft.com/zh-cn/library/jj151815.aspx)。\r\n    \r\n    ```PowerShell\r\n    $aadclientSecret = \"<yourAadClientSecret>\"\r\n    $aadClientID = \"<Client ID of your Azure AD application>\"\r\n    Connect-MsolService -AzureEnvironment azurechinacloud\r\n    New-MsolServicePrincipalCredential -AppPrincipalId $aadClientID -Type password -Value $aadclientSecret\r\n    ```\r\n\r\n3. 创建基于证书的 Azure AD 应用程序 :\r\n\r\n    > [!TIP]\r\n    > 请将 `<yourpassword>` 字符串替换为 pfx 证书的安全密码。\r\n\r\n    ```PowerShell\r\n    $Cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate(\"C:\\certificates\\examplecert.pfx\", \"<yourpassword>\")\r\n    $CertValue = [System.Convert]::ToBase64String($Cert.GetRawCertData())\r\n    $azureAdApplication = New-AzureRmADApplication -DisplayName \"<Your Application Display Name>\" -HomePage \"<https://YourApplicationHomePage>\" -IdentifierUris \"<https://YouApplicationUri>\" -CertValue $CertValue -StartDate $Cert.StartDate -EndDate $Cert.EndDate\r\n    $AADClientID = $AzureAdApplication.ApplicationId\r\n    $aadClientCertThumbprint= $cert.Thumbprint\r\n    $servicePrincipal = New-AzureRmADServicePrincipal –ApplicationId $AADClientID\r\n    ```\r\n\r\n4. 为现有的 Azure AD 应用程序配置证书 :\r\n\r\n    若要执行以下命令，请获取并使用 [Azure AD PowerShell 模块](https://technet.microsoft.com/zh-cn/library/jj151815.aspx)。\r\n\r\n    > [!TIP]\r\n    > 请将 `<yourpassword>` 字符串替换为 pfx 证书的安全密码。\r\n\r\n    ```PowerShell\r\n    $Cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate(\"C:\\certificates\\examplecert.pfx\", \"<yourpassword>\")\r\n    $CertValue = [System.Convert]::ToBase64String($Cert.GetRawCertData())\r\n    $aadClientID = \"<Client ID of your Azure AD application>\"\r\n    $aadClientCertThumbprint= $cert.Thumbprint\r\n    Connect-MsolService -AzureEnvironment azurechinacloud\r\n    New-MsolServicePrincipalCredential -AppPrincipalId $aadClientID -Type asymmetric -Value $credValue -Usage verify\r\n    ```\r\n\r\n将 PFX 证书文件上传到 Key Vault, 机密名变量 `$keyVaultSecretName` 的值可以任意设置。 \r\n\r\n> [!NOTE]\r\n> 使用基于客户端机密的身份验证可跳过这一步。  \r\n\r\n> [!TIP]\r\n> 请将 `<yourpassword>` 字符串替换为 pfx 证书的安全密码。\r\n\r\n```PowerShell\r\n$certLocalPath = \"C:\\certificates\\examplecert.pfx\"\r\n$certPassword = \"<yourpassword>\"\r\n$resourceGroupName = \"<yourResourcegroup>\"\r\n$keyVaultName = \"<yourKeyVaultName>\"\r\n$keyVaultSecretName = \"<yourAadCertSecretName>\"\r\n\r\n$fileContentBytes = get-content $certLocalPath -Encoding Byte\r\n$fileContentEncoded = [System.Convert]::ToBase64String($fileContentBytes)\r\n$jsonObject = @\"\r\n{\r\n\"data\": \"$filecontentencoded\",\r\n\"dataType\": \"pfx\",\r\n\"password\": \"$certPassword\"\r\n}\r\n\"@\r\n$jsonObjectBytes = [System.Text.Encoding]::UTF8.GetBytes($jsonObject)\r\n$jsonEncoded = [System.Convert]::ToBase64String($jsonObjectBytes)\r\n$secret = ConvertTo-SecureString -String $jsonEncoded -AsPlainText -Force\r\nSet-AzureKeyVaultSecret -VaultName $keyVaultName -Name $keyVaultSecretName -SecretValue $secret\r\nSet-AzureRmKeyVaultAccessPolicy -VaultName $keyVaultName -ResourceGroupName $resourceGroupName –EnabledForDeployment\r\n```\r\n\r\n将 Key Vault 中的证书部署到现有 VM。\r\n\r\n> [!NOTE]\r\n> 使用基于客户端机密的身份验证可跳过这一步。\r\n\r\n```PowerShell\r\n$resourceGroupName = \"<yourResourcegroup>\"\r\n$keyVaultName = \"<yourKeyVaultName>\"\r\n$keyVaultSecretName = \"<yourAadCertSecretName>\"\r\n$vmName = \"<yourVMName>\"\r\n$certUrl = (Get-AzureKeyVaultSecret -VaultName $keyVaultName -Name $keyVaultSecretName).Id\r\n$sourceVaultId = (Get-AzureRmKeyVault -VaultName $keyVaultName -ResourceGroupName $resourceGroupName).ResourceId\r\n$vm = Get-AzureRmVM -ResourceGroupName $resourceGroupName -Name $vmName\r\n$vm = Add-AzureRmVMSecret -VM $vm -SourceVaultId $sourceVaultId -CertificateStore \"My\" -CertificateUrl $certUrl\r\nUpdate-AzureRmVM -VM $vm -ResourceGroupName $resourceGroupName\r\n```\r\n\r\n为 Azure AD 应用程序设置 Key Vault 访问策略 :\r\n\r\n```PowerShell\r\n$keyVaultName = \"<yourKeyVaultName>\"\r\n$AADClientID = $AzureAdApplication.ApplicationId \r\n$RGName = \"<yourResourceGroup>\"\r\nSet-AzureRmKeyVaultAccessPolicy -VaultName $keyVaultName -ServicePrincipalName $AADClientID -PermissionsToKeys \"WrapKey\" -PermissionsToSecrets \"Set\" -ResourceGroupName $RGName\r\n```\r\n\r\n设置密钥加密密钥（可选）:\r\n\r\n```PowerShell\r\n$KEKName = \"<yourKEKName>\"\r\n$KEK = Add-AzureKeyVaultKey -VaultName $VaultName -Name $KEKName -Destination \"Software\"\r\n$KeyEncryptionKeyUrl = $KEK.Key.kid\r\n```\r\n\r\n设置 Key Vault 权限 :\r\n\r\n```PowerShell\r\n$keyVaultName = \"<yourKeyVaultName>\"\r\n$RGName = \"<yourResourceGroup>\"\r\nSet-AzureRmKeyVaultAccessPolicy -VaultName $keyVaultName -ResourceGroupName $RGName -EnabledForDiskEncryption\r\n```\r\n\r\n为 Azure VM 开启磁盘加密功能\r\n\r\n请根据之前配置的 Azure AD 应用程序和密钥加密密钥的情况选择以下四种方式之一配置 Azure VM 磁盘加密功能。\r\n\r\n1. 使用基于客户端机密的身份验证\r\n\r\n    ```PowerShell\r\n    Set-AzureRmVMDiskEncryptionExtension -ResourceGroupName $rgname -VMName $vmName -AadClientID $aadClientID -AadClientSecret $aadClientSecret -DiskEncryptionKeyVaultUrl $diskEncryptionKeyVaultUrl -DiskEncryptionKeyVaultId $KeyVaultResourceId\r\n    ```\r\n\r\n2. 使用基于客户端机密的身份验证，并使用密钥加密密钥\r\n\r\n    ```PowerShell\r\n    Set-AzureRmVMDiskEncryptionExtension -ResourceGroupName $RGName -VMName $vmName -AadClientID $AADClientID -AadClientSecret $AADClientSecret -DiskEncryptionKeyVaultUrl $DiskEncryptionKeyVaultUrl -DiskEncryptionKeyVaultId $KeyVaultResourceId -KeyEncryptionKeyUrl $KeyEncryptionKeyUrl -KeyEncryptionKeyVaultId $KeyVaultResourceId\r\n    ```\r\n\r\n3. 使用基于证书的身份验证\r\n\r\n    ```PowerShell\r\n    Set-AzureRmVMDiskEncryptionExtension -ResourceGroupName $RGName -VMName $VMName -AadClientID $AADClientID -AadClientCertThumbprint $AADClientCertThumbprint -DiskEncryptionKeyVaultUrl $DiskEncryptionKeyVaultUrl -DiskEncryptionKeyVaultId $KeyVaultResourceId\r\n    ```\r\n\r\n4. 使用基于证书的身份验证，并使用密钥加密密钥\r\n\r\n    ```PowerShell\r\n    Set-AzureRmVMDiskEncryptionExtension -ResourceGroupName $RGName -VMName $VMName -AadClientID $AADClientID -AadClientCertThumbprint $AADClientCertThumbprint -DiskEncryptionKeyVaultUrl $DiskEncryptionKeyVaultUrl -DiskEncryptionKeyVaultId $KeyVaultResourceId -KeyEncryptionKeyUrl $KeyEncryptionKeyUrl -KeyEncryptionKeyVaultId $KeyVaultResourceId\r\n    ```\r\n\r\n查看当前订阅内的VM 磁盘加密状态\r\n\r\n```PowerShell\r\n$osVolEncrypted = {(Get-AzureRmVMDiskEncryptionStatus -ResourceGroupName $_.ResourceGroupName -VMName $_.Name).OsVolumeEncrypted}\r\n$dataVolEncrypted= {(Get-AzureRmVMDiskEncryptionStatus -ResourceGroupName $_.ResourceGroupName -VMName $_.Name).DataVolumesEncrypted}\r\nGet-AzureRmVm | Format-Table @{Label=\"MachineName\"; Expression={$_.Name}}, @{Label=\"OsVolumeEncrypted\"; Expression=$osVolEncrypted}, @{Label=\"DataVolumesEncrypted\"; Expression=$dataVolEncrypted}\r\n```\r\n\r\n## 脚本链接\r\n\r\n[Enforce-DiskEncryptionwithKEK](https://github.com/wacn/AOG-CodeSample/tree/master/PowerShell/Enforce-DiskEncryptionwithKEK.ps1)\r\n"}