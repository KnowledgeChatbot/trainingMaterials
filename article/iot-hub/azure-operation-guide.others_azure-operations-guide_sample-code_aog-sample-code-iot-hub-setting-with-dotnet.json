{"Title":"IoT 中心管理 .NET 示例代码","Description":"IoT 中心管理 .NET 示例代码","Content":"\r\n# IoT 中心管理 .NET 示例代码\r\n\r\n## 注册本机客户端应用程序到 Azure Acitive Directory 中\r\n\r\n1. 登录到 [Azure 管理门户](https://manage.windowsazure.cn/)。\r\n\r\n2. 在左侧的导航栏中单击 “**Active Directory**” 选择要在其中注册应用程序的租户。\r\n\r\n3. 单击 “**应用程序**” 选项卡，然后在底部抽屉中单击 “**添加**”。\r\n\r\n4. 根据提示创建一个新的本机客户端应用程序。\r\n\r\n    - 应用程序的 “**名称**” 是向最终用户描述你的应用程序。\r\n    - “**重定向 URI**” 是 Azure AD 要用来返回令牌响应的方案与字符串组合。输入特定于应用程序的值，例如 http://IoTHubManagementDemo。\r\n\r\n5. 完成注册后，AAD 将为应用分配唯一的客户端标识符。在后面的部分中将会用到此值，因此，请从“**配置**”选项卡复制此值。\r\n\r\n6. 请在“**配置**”选项卡中，找到“**针对其他应用程序的权限**”部分。添加“**Windows Azure Service Management API**”应用程序，在“**委派的权限**”下添加“**Access Azure Service Management**”权限。\r\n\r\n## 添加依赖\r\n\r\n- [Microsoft.Azure.Management.IotHub](https://www.nuget.org/packages/Microsoft.Azure.Management.IotHub/) （所有IoT相关的管理操作）\r\n- [Microsoft.Azure.Management.ResourceManager.Fluent](https://www.nuget.org/packages/Microsoft.Azure.Management.ResourceManager.Fluent/) （用于构建认证信息）\r\n\r\n## 获取认证信息\r\n\r\n对于本机客户端应用程序，AAD 不会为之生成客户端密钥，所以要通过用户登陆来获取认证信息。\r\n\r\n    var adServiceSettings = new ActiveDirectoryServiceSettings\r\n    {\r\n        AuthenticationEndpoint = new Uri(AzureEnvironment.AzureChinaCloud.AuthenticationEndpoint),\r\n        TokenAudience = new Uri(AzureEnvironment.AzureChinaCloud.ResourceManagerEndpoint),\r\n        ValidateAuthority = true\r\n    };\r\n    var adClientSettings = new ActiveDirectoryClientSettings()\r\n    {\r\n        ClientId = nativeClientId,\r\n        ClientRedirectUri = new Uri(redirectUri)\r\n    };\r\n    SynchronizationContext.SetSynchronizationContext(new SynchronizationContext());\r\n    var azureCredential = UserTokenProvider.LoginWithPromptAsync(tenantId, adClientSettings, adServiceSettings).Result;\r\n\r\n## 获取 IoT Hub 配置并更新\r\n\r\n    var iothubClient = new IotHubClient(\r\n    new Uri(\"https://management.chinacloudapi.cn/\"), \r\n    azureCredential, \r\n    new RetryDelegatingHandler());\r\n    iothubClient.SubscriptionId = subscriptionId;\r\n\r\n    var iothubResource = iothubClient.IotHubResource;\r\n\r\n    // get iothub description\r\n    var resourceDescription = iothubResource.Get(rgName, resourceName);\r\n    Console.WriteLine(resourceDescription.Name);\r\n\r\n    // set C2D message default ttl to 2 hours\r\n    resourceDescription.Properties.CloudToDevice.DefaultTtlAsIso8601 = TimeSpan.FromHours(2);\r\n\r\n    try\r\n    { \r\n        // commit the change                 \r\n    iothubResource.CreateOrUpdate(rgName, resourceName, resourceDescription);\r\n        Console.WriteLine(\"Update successfully!\");\r\n    }\r\n    catch (Exception ex)\r\n    {\r\n        Console.WriteLine(ex.Message);\r\n    }\r\n    Console.WriteLine(\"Press ENTER to exit!\");\r\n    Console.ReadLine();            \r\n\r\n## 源代码链接\r\n\r\n[IoTHubManagementDemo](https://github.com/wacn/AOG-CodeSample/tree/master/IotHub/CSharp/IoTHubManagementDemo)"}