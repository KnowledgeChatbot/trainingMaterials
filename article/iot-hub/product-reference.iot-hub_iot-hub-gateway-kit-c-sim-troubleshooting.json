{"Title":"模拟设备和 Azure IoT 网关 - 故障排除","Description":"Intel NUC 网关的故障排除页","Content":"# <a name=\"troubleshooting\"></a>故障排除\r\n\r\n## <a name=\"hardware-issues\"></a>硬件问题\r\n\r\n### <a name=\"ti-sensortag-cannot-be-connected\"></a>无法连接 TI SensorTag\r\n\r\n若要对 SensorTag 连接问题进行故障排除，请使用 [SensorTag 应用](http://processors.wiki.ti.com/index.php/SensorTag_User_Guide#SensorTag_App_user_guide)。\r\n\r\n### <a name=\"have-an-issue-with-intel-nuc\"></a>Intel NUC 出现问题\r\n\r\n若要对启动问题进行故障排除，请参阅 [Troubleshooting No Boot Issues on Intel NUC](http://www.intel.com/content/www/us/en/support/boards-and-kits/000005845.html)（对 Intel NUC 上的无启动问题进行故障排除）。\r\n\r\n若要对操作系统问题进行故障排除，请参阅 [Troubleshooting Operating System Issues on Intel NUC](http://www.intel.com/content/www/us/en/support/boards-and-kits/000006018.html)（对 Intel NUC 上的操作系统问题进行故障排除）。\r\n\r\n若要对其他问题进行故障排除，请参阅 [Blink Codes and Beep Codes for Intel NUC](http://www.intel.com/content/www/us/en/support/boards-and-kits/intel-nuc-boards/000005854.html)（Intel NUC 的闪烁代码和蜂鸣代码）。\r\n\r\n## <a name=\"nodejs-package-issues\"></a>Node.js 包问题\r\n\r\n### <a name=\"no-response-during-gulp-tasks\"></a>在 Gulp 任务期间没有响应\r\n\r\n如果在运行 Gulp 任务时遇到问题，可添加 `--verbose` 选项进行调试。 请尝试使用 `Ctrl + C`终止当前 gulp 任务，并在控制台窗口中运行以下命令，以便查看调试消息。 可以在控制台输出中查看详细的错误消息。\r\n\r\n```bash\r\ngulp --verbose\r\n```\r\n\r\n### <a name=\"device-discovery-issues\"></a>设备发现问题\r\n\r\n有关使用 `discover-sensortag` 命令对常见问题进行故障排除的帮助，请查看 [wiki 页](https://wiki.archlinux.org/index.php/bluetooth#Bluetoothctl)。\r\n\r\n### <a name=\"npm-issues\"></a>npm 问题\r\n\r\n尝试运行以下命令，更新 npm 包：\r\n\r\n```bash\r\nnpm install -g npm\r\n```\r\n\r\n如果问题仍然存在，请在本文末尾留下评论，或者在[示例存储库](https://github.com/azure-samples/iot-hub-c-intel-nuc-gateway-getting-started)中创建一个 GitHub 问题。\r\n\r\n## <a name=\"remote-debugging\"></a>远程调试\r\n\r\n> 以下说明介绍如何调试本教程中使用的 node.js 脚本。\r\n\r\n\r\n### <a name=\"run-the-sample-application-in-debug-mode\"></a>在调试模式下运行示例应用程序\r\n\r\n运行以下命令，在调试模式下运行示例应用程序：\r\n\r\n```bash\r\ngulp run --debug\r\n```\r\n\r\n调试引擎就绪以后，就会在控制台输出中看到 `Debugger listening on port 5858` 。\r\n\r\n### <a name=\"configure-visual-studio-code-to-connect-to-the-remote-device\"></a>将 Visual Studio Code 配置为连接到远程设备\r\n\r\n1. 打开左侧的“调试”面板。\r\n2. 单击绿色的“启动调试”(F5) 按钮。 `launch.json` 文件。\r\n3. 使用以下内容更新 `launch.json` 文件。 将 `[device hostname or IP address]` 替换为实际的设备 IP 地址或主机名。\r\n\r\n   ``` json\r\n   {\r\n     \"version\": \"0.2.0\",\r\n     \"configurations\": [\r\n        {\r\n            \"name\": \"Attach\",\r\n            \"type\": \"node\",\r\n            \"request\": \"attach\",\r\n            \"port\": 5858,\r\n            \"address\": \"[device hostname or IP address]\",\r\n            \"restart\": false,\r\n            \"sourceMaps\": false,\r\n            \"outDir\": null,\r\n            \"localRoot\": \"${workspaceRoot}\",\r\n            \"remoteRoot\": \"~/ble_sample\"\r\n        }\r\n     ]\r\n   }\r\n   ```\r\n\r\n![远程调试配置](./media/iot-hub-gateway-kit-lessons/troubleshooting/remote_debugging_configuration.png)\r\n\r\n### <a name=\"attach-to-the-remote-application\"></a>连接到远程应用程序\r\n\r\n单击绿色的“启动调试”(F5) 按钮以启动调试。\r\n\r\n若要详细了解调试器，请参阅 [JavaScript in VS Code](https://code.visualstudio.com/docs/languages/javascript#_debugging)（VS Code 中的 JavaScript）。\r\n\r\n![调试 BLE 示例](./media/iot-hub-gateway-kit-lessons/troubleshooting/debugging_ble_sample.png)  \r\n\r\n## <a name=\"azure-cli-issues\"></a>Azure CLI 问题\r\n\r\nAzure 命令行接口 (Azure CLI) 是一个预览版本。 若要查找解决方案，可参阅 [Preview Install Guide](https://github.com/Azure/azure-cli/blob/master/doc/preview_install_guide.md)（预览版安装指南）。\r\n\r\n如果使用工具时遇到任何 bug，请在 GitHub 存储库的“问题”部分中记录一个[问题](https://github.com/Azure/azure-cli/issues)。\r\n\r\n如需常见问题的疑难解答帮助，请查看 [自述文件](https://github.com/Azure/azure-cli/blob/master/README.rst)。\r\n\r\n如果遇到“找不到满足需求的版本”，请运行以下命令，将 pip 升级到最新版本。\r\n\r\n```bash\r\npython -m pip install --upgrade pip\r\n```\r\n\r\n## <a name=\"python-installation-issues\"></a>Python 安装问题\r\n\r\n### <a name=\"legacy-installation-issues-macos\"></a>旧安装问题 (macOS)\r\n\r\n安装 pip 时，如果使用 **su** 权限安装的包较旧，则会引发权限错误。 之所以发生此情况是因为未完全卸载以前使用 brew (macOS) 安装的 Python。 以前安装时留下的某些 pip 包是通过根权限创建的，因此会导致权限错误。 删除这些通过根权限安装的包即可解决问题。 通过以下步骤完成该任务：\r\n\r\n1. 转到 `/usr/local/lib/python2.7/site-packages`\r\n2. 列出通过根权限创建的包：`ls -l | grep root`\r\n3. 卸载步骤 2 中的包：`sudo rm -rf {package name}`\r\n4. 重新安装 Python。\r\n\r\n## <a name=\"azure-iot-hub-issues\"></a>Azure IoT 中心问题\r\n\r\n如果已通过 Azure CLI 成功预配 Azure IoT 中心，且需要使用工具管理连接到 IoT 中心的设备，可尝试以下工具。\r\n\r\n### <a name=\"device-explorer\"></a>设备资源管理器\r\n\r\n[设备资源管理器](https://github.com/Azure/azure-iot-sdk-csharp/blob/master/tools/DeviceExplorer) 在 Windows 本地计算机上运行，并连接到 Azure 中的 IoT 中心。 它与以下 [IoT 中心终结点](./iot-hub-devguide.md)进行通信：\r\n\r\n- 设备标识管理，用于预配和管理注册到 IoT 中心的设备。\r\n- 接收设备到云消息，以便监视从设备发送到 IoT 中心的消息。\r\n- 发送云到设备消息，以便将消息从 IoT 中心发送到设备。\r\n\r\n在此工具中配置 IoT 中心连接字符串，以便使用其所有功能。\r\n\r\n### <a name=\"iothub-explorer\"></a>iothub-explorer\r\n\r\n[iothub-explorer](https://github.com/Azure/iothub-explorer) 是一项示例性的多平台 CLI 工具，用于管理设备客户端。可以使用该工具在标识注册表中管理设备、监视从设备到云的消息，以及发送从云到设备的命令。\r\n\r\n若要安装 iothub-explorer 工具的最新（预发行）版本，请运行以下命令：\r\n\r\n```bash\r\nnpm install -g iothub-explorer@latest\r\n```\r\n\r\n若要获取有关所有 iothub-explorer 命令及其参数的其他帮助，请运行以下命令：\r\n\r\n```bash\r\niothub-explorer help\r\n```\r\n\r\n### <a name=\"the-azure-portal\"></a>Azure 门户\r\n\r\n完整的 CLI 体验有助于用户创建和管理其所有 Azure 资源。 可能还需要使用 [Azure 门户](../azure-portal-overview.md)来帮助预配、管理和调试 Azure 资源。\r\n\r\n## <a name=\"azure-storage-issues\"></a>Azure 存储问题\r\n\r\n[Microsoft Azure 存储资源管理器（预览版）](http://storageexplorer.com/)是 Microsoft 提供的一款独立应用，可用于在 Windows、macOS 和 Linux 上处理 Azure 存储数据。 可以使用此工具连接到表并查看其中的数据。 可以使用此工具排查 Azure 存储问题。\r\n\r\n<!--Update_Description:update wording and link references-->"}