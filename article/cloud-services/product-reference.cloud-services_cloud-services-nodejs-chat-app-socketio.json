{"Title":"使用 Socket.io 的 Node.js 应用程序","Description":"了解如何在 Azure 上托管的 node.js 应用程序中使用 socket.io。","Content":"# <a name=\"build-a-nodejs-chat-application-with-socketio-on-an-azure-cloud-service\"></a>在 Azure 云服务中使用 Socket.IO 生成 Node.js 聊天应用程序\r\n\r\nSocket.IO 在 node.js 服务器和客户端之间提供实时通信。 本教程指导如何在 Azure 上托管一个基于 socket.IO 的聊天应用程序。 有关 Socket.IO 的详细信息，请参阅 <http://socket.io/>。\r\n\r\n以下是已完成应用程序的屏幕快照：\r\n\r\n![显示托管在 Azure 上的服务的浏览器窗口][completed-app]  \r\n\r\n## <a name=\"prerequisites\"></a>先决条件\r\n\r\n确保已安装以下产品和版本才能成功完成本文中的示例：\r\n\r\n* 安装 [Visual Studio](https://www.visualstudio.com/en-us/downloads/download-visual-studio-vs.aspx)\r\n* 安装 [Node.js](https://nodejs.org/download/)\r\n* 安装 [Python 2.7.10 版](https://www.python.org/)\r\n\r\n## <a name=\"create-a-cloud-service-project\"></a>创建云服务项目\r\n\r\n以下步骤创建将托管 Socket.IO 应用程序的云服务项目。\r\n\r\n1. 在“开始”菜单或“开始”屏幕中，搜索“Windows PowerShell”。 最后，右键单击“Windows PowerShell”并选择“以管理员身份运行”。\r\n\r\n    ![Azure PowerShell 图标][powershell-menu]\r\n\r\n2. 创建一个名为 c:\\\\node 的目录。 \r\n\r\n    ```\r\n    PS C:\\> md node\r\n    ```\r\n\r\n3. 将目录更改为 c:\\\\node 目录\r\n\r\n    ```\r\n    PS C:\\> cd node\r\n    ```\r\n\r\n4. 输入以下命令，创建一个名为 chatapp 的新解决方案和一个名为 WorkerRole1 的辅助角色：\r\n\r\n    ```\r\n    PS C:\\node> New-AzureServiceProject chatapp\r\n    PS C:\\Node> Add-AzureNodeWorkerRole\r\n    ```\r\n\r\n    会看到以下响应：\r\n\r\n    ![new-azureservice 和 add-azurenodeworkerrole cmdlet 的输出](./media/cloud-services-nodejs-chat-app-socketio/socketio-1.png)\r\n\r\n## <a name=\"download-the-chat-example\"></a>下载聊天示例\r\n\r\n对于此项目，我们使用 [Socket.IO GitHub 存储库]中的聊天示例。 执行以下步骤下载该示例，并将其添加到先前创建的项目中。\r\n\r\n1.  使用“克隆”  按钮创建存储库的本地副本。 还可以使用“ZIP”按钮下载项目。\r\n\r\n    ![显示 https://github.com/LearnBoost/socket.io/tree/master/examples/chat 的浏览器窗口，其中突出显示了 ZIP 下载图标][chat-example-view]\r\n\r\n3.  浏览本地存储库的目录结构，找到 examples\\\\chat 目录。 将此目录的内容复制到先前创建的 C:\\\\node\\\\chatapp\\\\WorkerRole1 目录。\r\n\r\n    ![资源管理器，显示从存档中解压缩的 examples\\\\chat 目录的内容][chat-contents]\r\n\r\n    上面屏幕截图中突出显示的项目是从 examples\\\\chat 目录复制的文件\r\n\r\n4.  在 C:\\\\node\\\\chatapp\\\\WorkerRole1 目录中，删除 server.js 文件，然后将 app.js 文件重命名为 server.js。 这会删除前面由 Add-AzureNodeWorkerRole cmdlet 创建的默认 server.js 文件并替换为聊天示例中的应用程序文件。\r\n\r\n### <a name=\"modify-serverjs-and-install-modules\"></a>修改 Server.js 并安装模块\r\n\r\n在 Azure 模拟器中测试应用程序之前，必须进行一些小改动。 对 server.js 文件执行以下步骤：\r\n\r\n1.  在 Visual Studio 或任何文本编辑器中打开 **server.js** 文件。\r\n\r\n2.  在 server.js 的开头处查找 Module dependencies 节，将包含 sio = require('..//..//lib//socket.io') 的行更改为 sio = require('socket.io')，如下所示：\r\n\r\n    ```\r\n    var express = require('express')\r\n      , stylus = require('stylus')\r\n      , nib = require('nib')\r\n    //, sio = require('..//..//lib//socket.io'); //Original\r\n      , sio = require('socket.io');                //Updated\r\n    ```\r\n         var port = process.env.PORT || 3000;         //Updated\r\n3.  为了确保应用程序侦听正确端口，请在记事本或偏好的编辑器中打开 server.js，然后通过将 3000 替换为 process.env.port，更改以下行，如下所示：\r\n\r\n    ```\r\n    //app.listen(3000, function () {            //Original\r\n    app.listen(process.env.port, function () {  //Updated\r\n      var addr = app.address();\r\n      console.log('   app listening on http://' + addr.address + ':' + addr.port);\r\n    });\r\n    ```\r\n\r\n保存对 **server.js** 所做更改后，使用以下步骤安装所需的模块，并在 Azure 模拟器中测试应用程序：\r\n\r\n1.  使用 Azure PowerShell，将目录切换到 C:\\\\node\\\\chatapp\\\\WorkerRole1 目录，然后使用以下命令安装此应用程序所需的模块：\r\n\r\n    ```\r\n    PS C:\\node\\chatapp\\WorkerRole1> npm install\r\n    ```\r\n\r\n    这会安装 package.json 文件中所列的模块。 命令完成后，应该看到类似下面的输出：\r\n\r\n    ![npm install 命令的输出][The-output-of-the-npm-install-command]\r\n\r\n4.  因为此示例最初是 Socket.IO GitHub 存储库的一部分，并通过相对路径直接引用了 Socket.IO 库，而 package.json 文件中未引用 Socket.IO，所以我们必须通过发出以下命令来安装它：\r\n\r\n    ```\r\n    PS C:\\node\\chatapp\\WorkerRole1> npm install socket.io --save\r\n    ```\r\n\r\n### <a name=\"test-and-deploy\"></a>测试和部署\r\n\r\n1.  通过发出以下命令启动模拟器：\r\n\r\n    ```\r\n    PS C:\\node\\chatapp\\WorkerRole1> Start-AzureEmulator -Launch\r\n    ```\r\n\r\n2.  打开浏览器并导航到 http://127.0.0.1。\r\n\r\n3.  浏览器窗口打开后，输入昵称，并按 Enter。\r\n   这样，就可以用特定昵称发布消息。 要测试多用户功能，请使用同一 URL 打开其他浏览器窗口但输入不同的昵称。\r\n\r\n    ![显示用户 1 和用户 2 聊天消息的两个浏览器窗口](./media/cloud-services-nodejs-chat-app-socketio/socketio-8.png)\r\n\r\n3.  测试应用程序之后，发出以下命令停止模拟器：\r\n\r\n    ```\r\n    PS C:\\node\\chatapp\\WorkerRole1> Stop-AzureEmulator\r\n    ```\r\n\r\n4.  要将应用程序部署到 Azure，请使用 **Publish-AzureServiceProject** cmdlet。 例如：\r\n\r\n    ```\r\n    PS C:\\node\\chatapp\\WorkerRole1> Publish-AzureServiceProject -ServiceName mychatapp -Location \"China East\" -Launch\r\n    ```\r\n\r\n    > [!IMPORTANT]\r\n    > 确保使用唯一名称，否则发布过程会失败。部署完成后，会打开浏览器并导航到已部署的服务。\r\n    > \r\n    > 如果收到错误消息，指出导入的发布配置文件中不存在提供的订阅名称，则必须先为用户的订阅下载和导入发布配置文件，再部署到 Azure。 请参阅[生成 Node.js 应用程序并将其部署到 Azure 云服务](./cloud-services-nodejs-develop-deploy-app.md)中的“将应用程序部署到 Azure”部分\r\n\r\n    ![显示托管在 Azure 上的服务的浏览器窗口][completed-app]\r\n\r\n    > [!NOTE]\r\n    > 如果收到错误消息，指出导入的发布配置文件中不存在提供的订阅名称，则必须先为用户的订阅下载和导入发布配置文件，再部署到 Azure。 请参阅[生成 Node.js 应用程序并将其部署到 Azure 云服务](./cloud-services-nodejs-develop-deploy-app.md)中的“将应用程序部署到 Azure”部分\r\n\r\n应用程序现在即可在 Azure 上运行，并可使用 Socket.IO 在不同客户端之间中继聊天消息。\r\n\r\n> [!NOTE]\r\n> 为简单起见，此示例仅限于连接到同一实例的用户之间的聊天。 这意味着如果云服务创建两个辅助角色实例，用户只能够与连接到同一辅助角色实例的其他用户聊天。 要缩放应用程序以使用多个角色实例，可以使用类似于服务总线的技术在实例之间共享 Socket.IO 存储状态。 有关示例，请参阅 [Azure SDK for Node.js GitHub 存储库](https://github.com/WindowsAzure/azure-sdk-for-node)中的服务总线队列和主题使用示例。\r\n\r\n##<a name=\"next-steps\"></a>后续步骤\r\n\r\n在本教程中，已了解如何创建托管于 Azure 云服务中的基本聊天应用程序。 若要了解如何在 Azure 网站中托管此应用程序，请参阅 [在 Azure 网站中使用 Socket.IO 生成 Node.js 聊天应用程序][chatwebsite]。\r\n\r\n有关详细信息，另请参阅 [Node.js 开发人员中心](https://www.azure.cn/develop/nodejs/)。\r\n\r\n  [chatwebsite]: ../app-service-web/web-sites-nodejs-chat-app-socketio.md\r\n\r\n  [Azure SLA]: https://www.azure.cn/support/legal/sla/\r\n  [Azure SDK for Node.js GitHub repository]: https://github.com/WindowsAzure/azure-sdk-for-node\r\n  [completed-app]: ./media/cloud-services-nodejs-chat-app-socketio/socketio-10.png\r\n  [Azure SDK for Node.js]: https://www.azure.cn/develop/nodejs/\r\n  [Node.js Web Application]: ./cloud-services-nodejs-develop-deploy-app.md\r\n  [Socket.IO GitHub 存储库]: https://github.com/LearnBoost/socket.io/tree/0.9.14\r\n  [Azure Considerations]: #windowsazureconsiderations\r\n  [Hosting the Chat Example in a Worker Role]: #hostingthechatexampleinawebrole\r\n  [Summary and Next Steps]: #summary\r\n  [powershell-menu]: ./media/cloud-services-nodejs-chat-app-socketio/azure-powershell-start.png\r\n\r\n  [chat example]: https://github.com/LearnBoost/socket.io/tree/master/examples/chat\r\n  [chat-example-view]: ./media/cloud-services-nodejs-chat-app-socketio/socketio-22.png\r\n\r\n  [chat-contents]: ./media/cloud-services-nodejs-chat-app-socketio/socketio-5.png\r\n  [The-output-of-the-npm-install-command]: ./media/cloud-services-nodejs-chat-app-socketio/socketio-7.png\r\n  [The output of the Publish-AzureService command]: ./media/cloud-services-nodejs-chat-app-socketio/socketio-9.png\r\n\r\n  <!--Update_Description: update wording-->"}