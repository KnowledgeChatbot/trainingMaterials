{"Title":"如何设置计算机以使用 .NET 进行媒体服务开发","Description":"了解使用适用于 .NET 的媒体服务 SDK 进行媒体服务开发所要满足的先决条件。 此外，了解如何创建 Visual Studio 应用程序。","Content":"# <a name=\"media-services-development-with-net\"></a>使用 .NET 进行媒体服务开发\r\n[!INCLUDE [media-services-selector-setup](../../includes/media-services-selector-setup.md)]\r\n\r\n本主题介绍如何开始使用 .NET 开发媒体服务应用程序。\r\n\r\n\r\n            **Azure 媒体服务 .NET SDK** 库允许使用 .NET 为媒体服务编程。 为了进一步方便使用 .NET 进行开发，提供了 **Azure 媒体服务 .NET SDK 扩展**库。 此库包含一组扩展方法和帮助器函数，可简化 .NET 代码。 这两个库都通过 **NuGet** 和 **GitHub** 提供。\r\n\r\n## <a name=\"prerequisites\"></a>先决条件\r\n* 在新的或现有的 Azure 订阅中拥有一个媒体服务帐户。 请参阅主题[如何创建媒体服务帐户](media-services-portal-create-account.md)。\r\n* 操作系统：Windows 10、Windows 7、Windows 2008 R2 或 Windows 8。\r\n* .NET Framework 4.5。\r\n* Visual Studio。\r\n\r\n## <a name=\"create-and-configure-a-visual-studio-project\"></a>创建和配置 Visual Studio 项目\r\n本部分演示如何在 Visual Studio 中创建项目，以及如何为媒体服务开发设置该项目。  在本示例中，该项目为 C# Windows 控制台应用程序，但此处所示的设置步骤同样适用于针对媒体服务应用程序（例如，Windows 窗体应用程序或 ASP.NET Web 应用程序）创建的其他类型的项目。\r\n\r\n本部分说明如何使用 **NuGet** 添加媒体服务 .NET SDK 扩展和其他依赖库。\r\n\r\n此外，可以从 GitHub（[github.com/Azure/azure-sdk-for-media-services](https://github.com/Azure/azure-sdk-for-media-services) 或 [github.com/Azure/azure-sdk-for-media-services-extensions](https://github.com/Azure/azure-sdk-for-media-services-extensions)）获取最新的媒体服务 .NET SDK 资料、生成解决方案并添加对客户端项目的引用。 自动下载并提取所有必需的依赖项。\r\n\r\n1. 在 Visual Studio 中创建新的 C# 控制台应用程序。 输入“名称”、“位置”和“解决方案名称”，并单击“确定”。\r\n2. 生成解决方案。\r\n3. 使用 **NuGet** 安装和添加 **Azure 媒体服务 .NET SDK 扩展** (**windowsazure.mediaservices.extensions**)。 安装此包也会安装 **媒体服务 .NET SDK** 并添加所有其他必需的依赖项。\r\n   \r\n    确保已安装最新版本的 NuGet。 有关详细信息和安装说明，请参阅 [NuGet](http://nuget.codeplex.com/)。\r\n\r\n    1. 在“解决方案资源管理器”中，右键单击项目名称，并选择“管理 NuGet 包”。\r\n\r\n    2. 此时显示“管理 NuGet 包”对话框。\r\n\r\n    3. 在联机库中，搜索 Azure 媒体服务扩展，选择“Azure 媒体服务.NET SDK 扩展”(windowsazure.mediaservices.extensions)，然后单击“安装”按钮。\r\n   \r\n    4. 此时会修改项目并添加对媒体服务 .NET SDK 扩展、媒体服务 .NET SDK 和其他依赖程序集的引用。\r\n4. 若要升级更干净的开发环境，请考虑启用 NuGet 包还原。 有关详细信息，请参阅 [NuGet 包还原](http://docs.nuget.org/consume/package-restore)。\r\n5. 添加对 **System.Configuration** 程序集的引用。 此程序集包含用于访问配置文件（例如，App.config）的 System.Configuration.**ConfigurationManager** 类。\r\n   \r\n    1. 若要使用“管理引用”对话框添加引用，请在“解决方案资源管理器”中右键单击项目名称。 然后单击“添加”，并单击“引用...”。\r\n   \r\n    2. 此时显示“管理引用”对话框。\r\n    3. 在 .NET Framework 程序集下，找到并选择 System.Configuration 程序集，并按“确定”。\r\n6. 打开 App.config 文件并将 **appSettings** 节添加到文件。     \r\n   \r\n    设置连接到媒体服务 API 所需的值。 有关详细信息，请参阅[通过 Azure AD 身份验证访问 Azure 媒体服务 API](media-services-use-aad-auth-to-access-ams-api.md)。 \r\n\r\n    如果使用[用户身份验证](media-services-use-aad-auth-to-access-ams-api.md#types-of-authentication)，配置文件可能具有 Azure AD 租户域和 AMS REST API 终结点的值。\r\n\r\n    >[!Important]\r\n    >Azure 媒体服务文档集中的大多数代码示例都使用用户（交互）类型的身份验证连接到 AMS API。 此身份验证方法非常适合于管理或监视本机应用：移动应用、Windows 应用和控制台应用程序。 此身份验证方法不适合服务器、Web 服务、API 类型的应用程序。  有关详细信息，请参阅[通过 Azure AD 身份验证访问 AMS API](media-services-use-aad-auth-to-access-ams-api.md)。\r\n\r\n        <configuration>\r\n        ...\r\n            <appSettings>\r\n              <add key=\"AADTenantDomain\" value=\"YourAADTenantDomain\" />\r\n              <add key=\"MediaServiceRESTAPIEndpoint\" value=\"YourRESTAPIEndpoint\" />\r\n            </appSettings>\r\n\r\n        </configuration>\r\n\r\n7. 使用以下代码覆盖位于 Program.cs 文件开头的现有 **using** 语句。\r\n   \r\n        using System;\r\n        using System.Configuration;\r\n        using System.IO;\r\n        using Microsoft.WindowsAzure.MediaServices.Client;\r\n        using System.Threading;\r\n        using System.Collections.Generic;\r\n        using System.Linq;\r\n\r\n现在，可以开始开发媒体服务应用程序了。    \r\n\r\n## <a name=\"example\"></a>示例\r\n\r\n下面是一个小型示例，该示例连接到 AMS API 并列出所有可用的媒体处理器。\r\n\r\n    class Program\r\n    {\r\n        // Read values from the App.config file.\r\n        private static readonly string _AADTenantDomain =\r\n            ConfigurationManager.AppSettings[\"AADTenantDomain\"];\r\n        private static readonly string _RESTAPIEndpoint =\r\n            ConfigurationManager.AppSettings[\"MediaServiceRESTAPIEndpoint\"];\r\n\r\n        private static CloudMediaContext _context = null;\r\n        static void Main(string[] args)\r\n        {\r\n            var tokenCredentials = new AzureAdTokenCredentials(_AADTenantDomain, AzureEnvironments.AzureChinaCloudEnvironment);\r\n            var tokenProvider = new AzureAdTokenProvider(tokenCredentials);\r\n\r\n            _context = new CloudMediaContext(new Uri(_RESTAPIEndpoint), tokenProvider);\r\n\r\n            // List all available Media Processors\r\n            foreach (var mp in _context.MediaProcessors)\r\n            {\r\n                Console.WriteLine(mp.Name);\r\n            }\r\n\r\n        }\r\n\r\n##<a name=\"next-steps\"></a>后续步骤\r\n\r\n现在[可以连接到 AMS API](media-services-use-aad-auth-to-access-ams-api.md) 并开始[开发](media-services-dotnet-get-started.md)。\r\n\r\n\r\n<!--Update_Description: update Nuget install steps-->\r\n"}