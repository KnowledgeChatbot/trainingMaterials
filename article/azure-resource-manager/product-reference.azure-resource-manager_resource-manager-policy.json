{"Title":"Azure 资源策略","Description":"介绍如何使用 Azure Resource Manager 来确保在部署过程中设置一致的资源属性。 可在订阅或资源组中应用策略。","Content":"# <a name=\"resource-policy-overview\"></a>资源策略概述\r\n使用资源策略可在组织中建立资源约定。 通过定义约定，可以控制成本并更轻松地管理资源。 例如，可指定仅允许特定类型的虚拟机。 或者，可要求所有资源都拥有特定标记。 策略由所有子资源继承。 因此，如果将策略应用到资源组，则会将其应用到该资源组中的所有资源。\r\n\r\n了解策略的两个概念：\r\n\r\n* 策略定义 - 描述何时强制执行策略，以及要采取的操作\r\n* 策略分配 - 应用策略定义的范围（订阅或资源组）\r\n<!-- Not Available [Use Azure portal to assign and manage resource policies](resource-manager-policy-portal.md)-->\r\n<!-- Not Available [Assign and manage policies through script](resource-manager-policy-create-assign.md)-->\r\n\r\n在创建和更新资源（PUT 和 PATCH 操作）时会评估策略。\r\n\r\n## <a name=\"how-is-it-different-from-rbac\"></a>策略与 RBAC 有什么不同？\r\n策略和基于角色的访问控制 (RBAC) 之间存在一些主要区别。 RBAC 关注不同范围内的**用户**操作。 例如，你将添加到所需范围的资源组的参与者角色后，可对该资源组做出更改。 策略关注部署期间的“资源”属性。 例如，可通过策略控制能够预配的资源类型。 或者，可限制能够预配资源的位置。 不同于 RBAC，策略是默认的允许和明确拒绝系统。 \r\n\r\n若要使用策略，用户必须通过 RBAC 进行身份验证。 具体而言，帐户需要：\r\n\r\n* `Microsoft.Authorization/policydefinitions/write` 权限\r\n* `Microsoft.Authorization/policyassignments/write` 权限 \r\n\r\n**参与者**角色中未包括这些权限。\r\n\r\n## <a name=\"built-in-policies\"></a>内置策略\r\n\r\nAzure 提供了一些可降低必须要定义的策略数目的内置策略定义。 继续进行策略定义之前，应考虑内置策略是否已提供所需的定义。 内置策略定义：\r\n\r\n* 允许的位置\r\n* 允许的资源类型\r\n* 允许的存储帐户 SKU\r\n* 允许的虚拟机 SKU\r\n* 应用标记和默认值\r\n* 强制实施标记和值\r\n* 不允许的资源类型\r\n* 需要 SQL Server 版本 12.0\r\n* 需要存储帐户加密\r\n\r\n<!-- Not Available [portal](resource-manager-policy-portal.md) -->\r\n<!-- Not Available [PowerShell](resource-manager-policy-create-assign.md#powershell) -->\r\n<!-- Not Available [Azure CLI](resource-manager-policy-create-assign.md#azure-cli)-->\r\n\r\n## <a name=\"policy-definition-structure\"></a>策略定义结构\r\n使用 JSON 创建策略定义。 策略定义包含以下各项的元素：\r\n\r\n* 模式\r\n* 参数\r\n* 显示名称\r\n* description\r\n* 策略规则\r\n  * 逻辑求值\r\n  * 效果\r\n\r\n以下示例演示了一个限制资源部署位置的策略：\r\n\r\n```json\r\n{\r\n  \"properties\": {\r\n    \"mode\": \"all\",\r\n    \"parameters\": {\r\n      \"allowedLocations\": {\r\n        \"type\": \"array\",\r\n        \"metadata\": {\r\n          \"description\": \"The list of locations that can be specified when deploying resources\",\r\n          \"strongType\": \"location\",\r\n          \"displayName\": \"Allowed locations\"\r\n        }\r\n      }\r\n    },\r\n    \"displayName\": \"Allowed locations\",\r\n    \"description\": \"This policy enables you to restrict the locations your organization can specify when deploying resources.\",\r\n    \"policyRule\": {\r\n      \"if\": {\r\n        \"not\": {\r\n          \"field\": \"location\",\r\n          \"in\": \"[parameters('allowedLocations')]\"\r\n        }\r\n      },\r\n      \"then\": {\r\n        \"effect\": \"deny\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n## <a name=\"mode\"></a>Mode\r\n\r\n建议将 `mode` 设置为 `all`。 将其设置为 all 时，会评估该策略的资源组和所有资源类型。 对于所有策略，门户都使用 all。 如果使用 PowerShell 或 Azure CLI，需指定 `mode` 参数，将其设置为 all。\r\n\r\n以前仅针对支持 tags 和 location 的资源类型来评估策略。 `indexed` 模式继续此行为。 如果使用 **all** 模式，则还会针对不支持 tags 和 location 的资源类型来评估策略。 [虚拟网络子网](https://github.com/Azure/azure-policy-samples/tree/master/samples/Network/enforce-nsg-on-subnet)是新添加类型的一个示例。 另外，将 mode 设置为 all 时，还会评估资源组。 例如，可以[在资源组上强制 tags](https://github.com/Azure/azure-policy-samples/tree/master/samples/ResourceGroup/enforce-resourceGroup-tags)。 \r\n\r\n## <a name=\"parameters\"></a>Parameters\r\n使用参数可减少策略定义的数量，有助于简化策略管理。 为资源属性定义策略（如限制资源部署的位置），并在定义中包含参数。 然后，通过在分配策略时传递不同的值（例如为订阅指定一组位置），针对不同的方案重复使用该策略定义。\r\n\r\n在创建策略定义时声明参数。\r\n\r\n```json\r\n\"parameters\": {\r\n  \"allowedLocations\": {\r\n    \"type\": \"array\",\r\n    \"metadata\": {\r\n      \"description\": \"The list of allowed locations for resources.\",\r\n      \"displayName\": \"Allowed locations\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n参数类型可以是字符串，也可以是数组。 Azure 门户等工具使用元数据属性显示用户友好信息。 \r\n\r\n在策略规则中，使用下列语法引用参数： \r\n\r\n```json\r\n{ \r\n    \"field\": \"location\",\r\n    \"in\": \"[parameters('allowedLocations')]\"\r\n}\r\n```\r\n\r\n## <a name=\"display-name-and-description\"></a>显示名称和说明\r\n\r\n使用**显示名称**和**说明**来标识策略定义，并提供其使用情景。\r\n\r\n## <a name=\"policy-rule\"></a>策略规则\r\n\r\n策略规则包括 **If** and **Then** 块。 在 **If** 块中，定义强制执行策略时指定的一个或多个条件。 可以对这些条件应用逻辑运算符，以精确定义策略的方案。 在 **Then** 块中，定义满足 **If** 条件时产生的效果。\r\n\r\n```json\r\n{\r\n  \"if\": {\r\n    <condition> | <logical operator>\r\n  },\r\n  \"then\": {\r\n    \"effect\": \"deny | audit | append\"\r\n  }\r\n}\r\n```\r\n\r\n### <a name=\"logical-operators\"></a>逻辑运算符\r\n支持的逻辑运算符为：\r\n\r\n* `\"not\": {condition  or operator}`\r\n* `\"allOf\": [{condition or operator},{condition or operator}]`\r\n* `\"anyOf\": [{condition or operator},{condition or operator}]`\r\n\r\n**not** 语法反转条件的结果。 **allOf** 语法（与逻辑 **And** 操作相似）要求所有条件为 true。 **anyOf** 语法（与逻辑 **Or** 操作相似）要求一个或多个条件为 true。\r\n\r\n可以嵌套逻辑运算符。 以下示例显示了嵌套在 allOf 操作中的 not 操作。 \r\n\r\n```json\r\n\"if\": {\r\n  \"allOf\": [\r\n    {\r\n      \"not\": {\r\n        \"field\": \"tags\",\r\n        \"containsKey\": \"application\"\r\n      }\r\n    },\r\n    {\r\n      \"field\": \"type\",\r\n      \"equals\": \"Microsoft.Storage/storageAccounts\"\r\n    }\r\n  ]\r\n},\r\n```\r\n\r\n### <a name=\"conditions\"></a>条件\r\n条件评估 **字段** 是否符合特定的准则。 支持的条件有：\r\n\r\n* `\"equals\": \"value\"`\r\n* `\"like\": \"value\"`\r\n* `\"match\": \"value\"`\r\n* `\"contains\": \"value\"`\r\n* `\"in\": [\"value1\",\"value2\"]`\r\n* `\"containsKey\": \"keyName\"`\r\n* `\"exists\": \"bool\"`\r\n\r\n在使用 **like** 条件时，可以在值中提供通配符 (*)。\r\n\r\n使用 **match** 条件时，请提供 `#` 来表示数字，提供 `?` 来表示字母，提供任何其他字符来表示该实际字符。\r\n<!-- [Apply resource policies for names and text](resource-manager-policy-naming-convention.md) -->\r\n\r\n### <a name=\"fields\"></a>字段\r\n使用字段构成条件。 字段显示用于描述资源状态的资源请求负载属性。  \r\n\r\n支持以下字段：\r\n\r\n* `name`\r\n* `kind`\r\n* `type`\r\n* `location`\r\n* `tags`\r\n* `tags.*` \r\n* 属性别名 - 若要查看列表，请参阅[别名](#aliases)。\r\n\r\n### <a name=\"effect\"></a>效果\r\n策略支持三种类型的效果 - `deny`、`audit`、`append`、`AuditIfNotExists`、`DeployIfNotExists`。 \r\n\r\n* **Deny** 在审核日志中生成一个事件，并使请求失败\r\n* **Audit** 会在审核日志中生成一个警告事件，但不会使请求失败\r\n* **Append** 会将定义的字段集添加到请求 \r\n* **AuditIfNotExists** - 在某个资源不存在的情况下启用审核\r\n* **DeployIfNotExists** - 在某个资源不存在的情况下部署该资源。 目前只能通过内置的策略来支持此效果。\r\n\r\n对于 **append**，必须提供以下详细信息：\r\n\r\n```json\r\n\"effect\": \"append\",\r\n\"details\": [\r\n  {\r\n    \"field\": \"field name\",\r\n    \"value\": \"value of the field\"\r\n  }\r\n]\r\n```\r\n\r\n值可以是字符串或 JSON 格式对象。 \r\n\r\n使用 AuditIfNotExists 和 DeployIfNotExists 时，可以评估某个子资源是否存在，并在该资源不存在的情况下应用某项规则。 例如，可以要求为所有虚拟网络部署网络观察程序。\r\n\r\n如需在虚拟机扩展未部署时进行审核的示例，请参阅[审核 VM 扩展](https://github.com/Azure/azure-policy-samples/blob/master/samples/Compute/audit-vm-extension/azurepolicy.json)。\r\n\r\n## <a name=\"aliases\"></a>别名\r\n\r\n可以使用属性别名来访问资源类型的特定属性。 通过别名，可限制允许用于特定资源属性的值和条件。 每个别名会映射到给定资源类型不同 API 版本的路径。 在策略评估期间，策略引擎会获取该 API 版本的属性路径。\r\n\r\n**Microsoft.Cache/Redis**\r\n\r\n| 别名 | 说明 |\r\n| ----- | ----------- |\r\n| Microsoft.Cache/Redis/enableNonSslPort | 设置是否启用非 ssl Redis 服务器端口 (6379)。 |\r\n| Microsoft.Cache/Redis/shardCount | 设置要在高级群集缓存上创建的分片数。  |\r\n| Microsoft.Cache/Redis/sku.capacity | 设置要部署的 Redis 缓存大小。  |\r\n| Microsoft.Cache/Redis/sku.family | 设置要使用的 SKU 系列。 |\r\n| Microsoft.Cache/Redis/sku.name | 设置要部署的 Redis 缓存类型。 |\r\n\r\nMicrosoft.Cdn/profiles\r\n\r\n| 别名 | 说明 |\r\n| ----- | ----------- |\r\n| Microsoft.CDN/profiles/sku.name | 设置定价层的名称。 |\r\n\r\nMicrosoft.Compute/disks\r\n\r\n| 别名 | 说明 |\r\n| ----- | ----------- |\r\n| Microsoft.Compute/imageOffer | 设置用于创建虚拟机的平台映像或应用商店映像的产品/服务。 |\r\n| Microsoft.Compute/imagePublisher | 设置用于创建虚拟机的平台映像或应用商店映像的发布服务器。 |\r\n| Microsoft.Compute/imageSku | 设置用于创建虚拟机的平台映像或应用商店映像的 SKU。 |\r\n| Microsoft.Compute/imageVersion | 设置用于创建虚拟机的平台映像或应用商店映像的版本。 |\r\n\r\nMicrosoft.Compute/virtualMachines\r\n\r\n| 别名 | 说明 |\r\n| ----- | ----------- |\r\n| Microsoft.Compute/imageId | 设置用于创建虚拟机的映像的标识符。 |\r\n| Microsoft.Compute/imageOffer | 设置用于创建虚拟机的平台映像或应用商店映像的产品/服务。 |\r\n| Microsoft.Compute/imagePublisher | 设置用于创建虚拟机的平台映像或应用商店映像的发布服务器。 |\r\n| Microsoft.Compute/imageSku | 设置用于创建虚拟机的平台映像或应用商店映像的 SKU。 |\r\n| Microsoft.Compute/imageVersion | 设置用于创建虚拟机的平台映像或应用商店映像的版本。 |\r\n| Microsoft.Compute/licenseType | 设置映像或磁盘是否在本地获得许可。 此值仅用于包含 Windows Server 操作系统的映像。  |\r\n| Microsoft.Compute/virtualMachines/imageOffer | 设置用于创建虚拟机的平台映像或应用商店映像的产品/服务。 |\r\n| Microsoft.Compute/virtualMachines/imagePublisher | 设置用于创建虚拟机的平台映像或应用商店映像的发布服务器。 |\r\n| Microsoft.Compute/virtualMachines/imageSku | 设置用于创建虚拟机的平台映像或应用商店映像的 SKU。 |\r\n| Microsoft.Compute/virtualMachines/imageVersion | 设置用于创建虚拟机的平台映像或应用商店映像的版本。 |\r\n| Microsoft.Compute/virtualMachines/osDisk.Uri | 设置 vhd URI。 |\r\n| Microsoft.Compute/virtualMachines/sku.name | 设置虚拟机的大小。 |\r\n\r\nMicrosoft.Compute/virtualMachines/extensions\r\n\r\n| 别名 | 说明 |\r\n| ----- | ----------- |\r\n| Microsoft.Compute/virtualMachines/extensions/publisher | 设置扩展的发布服务器的名称。 |\r\n| Microsoft.Compute/virtualMachines/extensions/type | 设置扩展的类型。 |\r\n| Microsoft.Compute/virtualMachines/extensions/typeHandlerVersion | 设置扩展的版本。 |\r\n\r\nMicrosoft.Compute/virtualMachineScaleSets\r\n\r\n| 别名 | 说明 |\r\n| ----- | ----------- |\r\n| Microsoft.Compute/imageId | 设置用于创建虚拟机的映像的标识符。 |\r\n| Microsoft.Compute/imageOffer | 设置用于创建虚拟机的平台映像或应用商店映像的产品/服务。 |\r\n| Microsoft.Compute/imagePublisher | 设置用于创建虚拟机的平台映像或应用商店映像的发布服务器。 |\r\n| Microsoft.Compute/imageSku | 设置用于创建虚拟机的平台映像或应用商店映像的 SKU。 |\r\n| Microsoft.Compute/imageVersion | 设置用于创建虚拟机的平台映像或应用商店映像的版本。 |\r\n| Microsoft.Compute/licenseType | 设置映像或磁盘是否在本地获得许可。 此值仅用于包含 Windows Server 操作系统的映像。 |\r\n| Microsoft.Compute/VirtualMachineScaleSets/computerNamePrefix | 设置规模集中所有虚拟机的计算机名前缀。 |\r\n| Microsoft.Compute/VirtualMachineScaleSets/osdisk.imageUrl | 设置用户映像的 blob URI。 |\r\n| Microsoft.Compute/VirtualMachineScaleSets/osdisk.vhdContainers | 设置用于存储规模集操作系统磁盘的容器 URL。 |\r\n| Microsoft.Compute/VirtualMachineScaleSets/sku.name | 设置规模集中虚拟机的大小。 |\r\n| Microsoft.Compute/VirtualMachineScaleSets/sku.tier | 设置规模集中虚拟机的层级。 |\r\n\r\nMicrosoft.Network/applicationGateways\r\n\r\n| 别名 | 说明 |\r\n| ----- | ----------- |\r\n| Microsoft.Network/applicationGateways/sku.name | 设置网关的大小。 |\r\n\r\nMicrosoft.Network/virtualNetworkGateways\r\n\r\n| 别名 | 说明 |\r\n| ----- | ----------- |\r\n| Microsoft.Network/virtualNetworkGateways/gatewayType | 设置此虚拟网络网关的类型。 |\r\n| Microsoft.Network/virtualNetworkGateways/sku.name | 设置网关 SKU 名称。 |\r\n\r\nMicrosoft.Sql/servers\r\n\r\n| 别名 | 说明 |\r\n| ----- | ----------- |\r\n| Microsoft.Sql/servers/version | 选择服务器的版本。 |\r\n\r\nMicrosoft.Sql/databases\r\n\r\n| 别名 | 说明 |\r\n| ----- | ----------- |\r\n| Microsoft.Sql/servers/databases/edition | 设置数据库的版本。 |\r\n| Microsoft.Sql/servers/databases/elasticPoolName | 设置数据库所在弹性池的名称。 |\r\n| Microsoft.Sql/servers/databases/requestedServiceObjectiveId | 设置数据库的配置服务级别目标 ID。 |\r\n| Microsoft.Sql/servers/databases/requestedServiceObjectiveName | 设置数据库的配置服务级别目标的名称。  |\r\n\r\nMicrosoft.Sql/elasticpools\r\n\r\n| 别名 | 说明 |\r\n| ----- | ----------- |\r\n| servers/elasticpools | Microsoft.Sql/servers/elasticPools/dtu | 设置数据库弹性池的总共享 DTU。 |\r\n| servers/elasticpools | Microsoft.Sql/servers/elasticPools/edition | 设置弹性池的版本。 |\r\n\r\nMicrosoft.Storage/storageAccounts\r\n\r\n| 别名 | 说明 |\r\n| ----- | ----------- |\r\n| Microsoft.Storage/storageAccounts/accessTier | 设置用于计费的访问层。 |\r\n| Microsoft.Storage/storageAccounts/accountType | 设置 SKU 名称。 |\r\n| Microsoft.Storage/storageAccounts/enableBlobEncryption | 设置数据存储在 blob 存储服务中时，服务是否对数据进行加密。 |\r\n| Microsoft.Storage/storageAccounts/enableFileEncryption | 设置数据存储在文件存储服务中时，服务是否对数据进行加密。 |\r\n| Microsoft.Storage/storageAccounts/sku.name | 设置 SKU 名称。 |\r\n| Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly | 设置为仅允许 https 流量访问存储服务。 |\r\n\r\n## <a name=\"policy-sets\"></a>策略集\r\n\r\n策略集用于将多个相关的策略定义组合到一起。 策略集可以简化分配和管理过程，因为只需使用单个项：组。 例如，可以在单个策略集中将所有相关的标记策略组合到一起。 可以应用策略集，而不必单独分配每个策略。\r\n\r\n以下示例演示了如何创建一个策略集，以便处理两个标记（costCenter 和 productName）。 该示例使用两个内置的策略来应用默认标记值，以及强制标记值。 策略集声明两个参数：costCenterValue 和 productNameValue，以实现可重用性。 它使用不同的参数来多次引用这两个内置的策略定义。 对于每个参数，既可提供一个固定值（参见 tagName），也可提供策略集中的参数（参见 tagValue）。\r\n\r\n```json\r\n{\r\n    \"properties\": {\r\n        \"displayName\": \"Billing Tags Policy\",\r\n        \"policyType\": \"Custom\",\r\n        \"description\": \"Specify cost Center tag and product name tag\",\r\n        \"parameters\": {\r\n            \"costCenterValue\": {\r\n                \"type\": \"String\",\r\n                \"metadata\": {\r\n                    \"description\": \"required value for Cost Center tag\"\r\n                }\r\n            },\r\n            \"productNameValue\": {\r\n                \"type\": \"String\",\r\n                \"metadata\": {\r\n                    \"description\": \"required value for product Name tag\"\r\n                }\r\n            }\r\n        },\r\n        \"policyDefinitions\": [\r\n            {\r\n                \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/1e30110a-5ceb-460c-a204-c1c3969c6d62\",\r\n                \"parameters\": {\r\n                    \"tagName\": {\r\n                        \"value\": \"costCenter\"\r\n                    },\r\n                    \"tagValue\": {\r\n                        \"value\": \"[parameters('costCenterValue')]\"\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/2a0e14a6-b0a6-4fab-991a-187a4f81c498\",\r\n                \"parameters\": {\r\n                    \"tagName\": {\r\n                        \"value\": \"costCenter\"\r\n                    },\r\n                    \"tagValue\": {\r\n                        \"value\": \"[parameters('costCenterValue')]\"\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/1e30110a-5ceb-460c-a204-c1c3969c6d62\",\r\n                \"parameters\": {\r\n                    \"tagName\": {\r\n                        \"value\": \"productName\"\r\n                    },\r\n                    \"tagValue\": {\r\n                        \"value\": \"[parameters('productNameValue')]\"\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/2a0e14a6-b0a6-4fab-991a-187a4f81c498\",\r\n                \"parameters\": {\r\n                    \"tagName\": {\r\n                        \"value\": \"productName\"\r\n                    },\r\n                    \"tagValue\": {\r\n                        \"value\": \"[parameters('productNameValue')]\"\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    \"id\": \"/subscriptions/<subscription-id>/providers/Microsoft.Authorization/policySetDefinitions/billingTagsPolicy\",\r\n    \"type\": \"Microsoft.Authorization/policySetDefinitions\",\r\n    \"name\": \"billingTagsPolicy\"\r\n}\r\n```\r\n\r\n可以通过 New-AzureRMPolicySetDefinition PowerShell 命令来添加策略集。\r\n\r\n对于 REST 操作，请使用 2017-06-01-preview API 版本，如以下示例所示：\r\n\r\n```\r\nPUT /subscriptions/<subId>/providers/Microsoft.Authorization/policySetDefinitions/billingTagsPolicySet?api-version=2017-06-01-preview\r\n```\r\n\r\n## <a name=\"next-steps\"></a>后续步骤\r\n<!-- Not Available on resource-manager-policy-portal.md /  resource-manager-policy-create-assign.md-->\r\n* 有关企业可如何使用 Resource Manager 有效管理订阅的指南，请参阅 [Azure 企业基架 - 出于合规目的监管订阅](resource-manager-subscription-governance.md)。\r\n* 该策略架构已在 [http://schema.management.azure.com/schemas/2015-10-01-preview/policyDefinition.json](http://schema.management.azure.com/schemas/2015-10-01-preview/policyDefinition.json)中发布。\r\n\r\n<!--Update_Description: update meta properties, wording update, add mode parameter-->"}