{"Title":"部署多个 Azure 资源实例","Description":"在部署资源时使用 Azure Resource Manager 模板中的复制操作和数组执行多次迭代。","Content":"# <a name=\"deploy-multiple-instances-of-a-resource-or-property-in-azure-resource-manager-templates\"></a>在 Azure Resource Manager 模板中部署资源或属性的多个实例\r\n本主题介绍如何在 Azure Resource Manager 模板中进行迭代操作，以创建多个资源实例，或者在资源中创建多个属性实例。\r\n\r\n如果需要在模板中添加逻辑来指定是否部署资源，请参阅[有条件地部署资源](#conditionally-deploy-resource)。\r\n\r\n有关在数组变量中创建多个元素的示例，请参阅[变量](resource-group-authoring-templates.md#variables)。\r\n\r\n## <a name=\"resource-iteration\"></a>资源迭代\r\n若要创建某个资源类型的多个实例，请向该资源类型添加 `copy` 元素。 在 copy 元素中，为此循环指定迭代次数和名称。 计数值必须是不超过 800 的正整数。 Resource Manager 将并行创建资源。 因此，创建顺序是不确定的。 若要在序列中创建迭代的资源，请参阅[串行复制](#serial-copy)。 \r\n\r\n要多次创建的资源将采用以下格式：\r\n\r\n```json\r\n{\r\n    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r\n    \"contentVersion\": \"1.0.0.0\",\r\n    \"resources\": [\r\n        {\r\n            \"apiVersion\": \"2016-01-01\",\r\n            \"type\": \"Microsoft.Storage/storageAccounts\",\r\n            \"name\": \"[concat(copyIndex(),'storage', uniqueString(resourceGroup().id))]\",\r\n            \"location\": \"[resourceGroup().location]\",\r\n            \"sku\": {\r\n                \"name\": \"Standard_LRS\"\r\n            },\r\n            \"kind\": \"Storage\",\r\n            \"properties\": {},\r\n            \"copy\": {\r\n                \"name\": \"storagecopy\",\r\n                \"count\": 3\r\n            }\r\n        }\r\n    ],\r\n    \"outputs\": {}\r\n}\r\n```\r\n\r\n请注意，每个资源的名称都包括 `copyIndex()` 函数，用于返回循环中的当前迭代。 `copyIndex()` 从零开始。 因此，以下示例：\r\n\r\n```json\r\n\"name\": \"[concat('storage', copyIndex())]\",\r\n```\r\n\r\n将创建以下名称：\r\n\r\n* storage0\r\n* storage1\r\n* storage2。\r\n\r\n若要偏移索引值，可以在 copyIndex() 函数中传递一个值。 要执行的迭代次数仍被指定在 copy 元素中，但 copyIndex 的值已按指定的值发生了偏移。 因此，以下示例：\r\n\r\n```json\r\n\"name\": \"[concat('storage', copyIndex(1))]\",\r\n```\r\n\r\n将创建以下名称：\r\n\r\n* storage1\r\n* storage2\r\n* storage3\r\n\r\n处理数组时可以使用复制操作，因为可对数组中的每个元素执行迭代操作。 可以对数组使用 `length` 函数来指定迭代计数，并使用 `copyIndex` 来检索数组中的当前索引。 因此，以下示例：\r\n\r\n```json\r\n\"parameters\": { \r\n  \"org\": { \r\n     \"type\": \"array\", \r\n     \"defaultValue\": [ \r\n         \"contoso\", \r\n         \"fabrikam\", \r\n         \"coho\" \r\n      ] \r\n  }\r\n}, \r\n\"resources\": [ \r\n  { \r\n      \"name\": \"[concat('storage', parameters('org')[copyIndex()])]\", \r\n      \"copy\": { \r\n         \"name\": \"storagecopy\", \r\n         \"count\": \"[length(parameters('org'))]\" \r\n      }, \r\n      ...\r\n  } \r\n]\r\n```\r\n\r\n将创建以下名称：\r\n\r\n* storagecontoso\r\n* storagefabrikam\r\n* storagecoho\r\n\r\n## <a name=\"serial-copy\"></a>串行复制\r\n\r\n使用 copy 元素创建某种资源类型的多个实例时，默认情况下，Resource Manager 并行部署这些实例。 但是，你可能希望将资源指定为按顺序部署。 例如，在更新生产环境时，可能需要错开更新，使任何一次仅更新一定数量。\r\n\r\nResource Manager 在 copy 元素上提供了相关的属性，使用这些属性可以按顺序部署多个实例。 在 copy 元素中，将 `mode` 设置为 **serial**，将 `batchSize` 设置为一次要部署的实例数。 在串行模式下，Resource Manager 将在循环中创建早前实例的依赖项，以便在前一个批处理完成之前它不会启动一个批处理。\r\n\r\n```json\r\n\"copy\": {\r\n    \"name\": \"iterator\",\r\n    \"count\": \"[parameters('numberToDeploy')]\",\r\n    \"mode\": \"serial\",\r\n    \"batchSize\": 2\r\n},\r\n```\r\n\r\nmode 属性也接受 **parallel**（它是默认值）。\r\n\r\n若要在不创建实际资源的情况下测试串行复制，请使用以下模板部署空的嵌套模板：\r\n\r\n```json\r\n{\r\n  \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r\n  \"contentVersion\": \"1.0.0.0\",\r\n  \"parameters\": {\r\n    \"numberToDeploy\": {\r\n      \"type\": \"int\",\r\n      \"minValue\": 2,\r\n      \"defaultValue\": 5\r\n    }\r\n  },\r\n  \"resources\": [\r\n    {\r\n      \"apiVersion\": \"2015-01-01\",\r\n      \"type\": \"Microsoft.Resources/deployments\",\r\n      \"name\": \"[concat('loop-', copyIndex())]\",\r\n      \"copy\": {\r\n        \"name\": \"iterator\",\r\n        \"count\": \"[parameters('numberToDeploy')]\",\r\n        \"mode\": \"serial\",\r\n        \"batchSize\": 1\r\n      },\r\n      \"properties\": {\r\n        \"mode\": \"Incremental\",\r\n        \"template\": {\r\n          \"$schema\": \"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r\n          \"contentVersion\": \"1.0.0.0\",\r\n          \"parameters\": {},\r\n          \"variables\": {},\r\n          \"resources\": [],\r\n          \"outputs\": {\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ],\r\n  \"outputs\": {\r\n  }\r\n}\r\n```\r\n\r\n在部署历史记录中，请注意，嵌套部署将按顺序处理。\r\n\r\n![串行部署](./media/resource-group-create-multiple/serial-copy.png)\r\n\r\n对于更现实的方案，以下示例将从嵌套模板一次部署 Linux VM 的两个实例：\r\n\r\n```json\r\n{\r\n    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r\n    \"contentVersion\": \"1.0.0.0\",\r\n    \"parameters\": {\r\n        \"adminUsername\": {\r\n            \"type\": \"string\",\r\n            \"metadata\": {\r\n                \"description\": \"User name for the Virtual Machine.\"\r\n            }\r\n        },\r\n        \"adminPassword\": {\r\n            \"type\": \"securestring\",\r\n            \"metadata\": {\r\n                \"description\": \"Password for the Virtual Machine.\"\r\n            }\r\n        },\r\n        \"dnsLabelPrefix\": {\r\n            \"type\": \"string\",\r\n            \"metadata\": {\r\n                \"description\": \"Unique DNS Name for the Public IP used to access the Virtual Machine.\"\r\n            }\r\n        },\r\n        \"ubuntuOSVersion\": {\r\n            \"type\": \"string\",\r\n            \"defaultValue\": \"16.04.0-LTS\",\r\n            \"allowedValues\": [\r\n                \"12.04.5-LTS\",\r\n                \"14.04.5-LTS\",\r\n                \"15.10\",\r\n                \"16.04.0-LTS\"\r\n            ],\r\n            \"metadata\": {\r\n                \"description\": \"The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version.\"\r\n            }\r\n        }\r\n    },\r\n    \"variables\": {\r\n        \"templatelink\": \"https://raw.githubusercontent.com/rjmax/Build2017/master/Act1.TemplateEnhancements/Chapter03.LinuxVM.json\"\r\n    },\r\n    \"resources\": [\r\n        {\r\n            \"apiVersion\": \"2015-01-01\",\r\n            \"name\": \"[concat('nestedDeployment',copyIndex())]\",\r\n            \"type\": \"Microsoft.Resources/deployments\",\r\n            \"copy\": {\r\n                \"name\": \"myCopySet\",\r\n                \"count\": 4,\r\n                \"mode\": \"serial\",\r\n                \"batchSize\": 2\r\n            },\r\n            \"properties\": {\r\n                \"mode\": \"Incremental\",\r\n                \"templateLink\": {\r\n                    \"uri\": \"[variables('templatelink')]\",\r\n                    \"contentVersion\": \"1.0.0.0\"\r\n                },\r\n                \"parameters\": {\r\n                    \"adminUsername\": {\r\n                        \"value\": \"[parameters('adminUsername')]\"\r\n                    },\r\n                    \"adminPassword\": {\r\n                        \"value\": \"[parameters('adminPassword')]\"\r\n                    },\r\n                    \"dnsLabelPrefix\": {\r\n                        \"value\": \"[parameters('dnsLabelPrefix')]\"\r\n                    },\r\n                    \"ubuntuOSVersion\": {\r\n                        \"value\": \"[parameters('ubuntuOSVersion')]\"\r\n                    },\r\n                    \"index\":{\r\n                        \"value\": \"[copyIndex()]\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## <a name=\"property-iteration\"></a>属性迭代\r\n\r\n若要为资源中的某个属性创建多个值，请在 properties 元素中添加 `copy` 数组。 此数组包含对象，每个对象具有以下属性：\r\n\r\n* name - 要为其创建多个值的属性的名称\r\n* count - 要创建的值数\r\n* input - 一个对象，其中包含要赋给该属性的值  \r\n\r\n以下示例演示如何将 `copy` 应用到虚拟机上的 dataDisks 属性：\r\n\r\n```json\r\n{\r\n  \"name\": \"examplevm\",\r\n  \"type\": \"Microsoft.Compute/virtualMachines\",\r\n  \"apiVersion\": \"2017-03-30\",\r\n  \"properties\": {\r\n    \"storageProfile\": {\r\n      \"copy\": [{\r\n          \"name\": \"dataDisks\",\r\n          \"count\": 3,\r\n          \"input\": {\r\n              \"lun\": \"[copyIndex('dataDisks')]\",\r\n              \"createOption\": \"Empty\",\r\n              \"diskSizeGB\": \"1023\"\r\n          }\r\n      }],\r\n      ...\r\n```\r\n\r\n请注意，在属性迭代中使用 `copyIndex` 时，必须提供迭代的名称。 在资源迭代中使用该元素时，不需要提供迭代名称。\r\n\r\nResource Manager 在部署期间会扩展 `copy` 数组。 该数组的名称将成为属性的名称。 输入值将成为对象属性。 已部署的模板将成为：\r\n\r\n```json\r\n{\r\n  \"name\": \"examplevm\",\r\n  \"type\": \"Microsoft.Compute/virtualMachines\",\r\n  \"apiVersion\": \"2017-03-30\",\r\n  \"properties\": {\r\n    \"storageProfile\": {\r\n      \"dataDisks\": [\r\n          {\r\n              \"lun\": 0,\r\n              \"createOption\": \"Empty\",\r\n              \"diskSizeGB\": \"1023\"\r\n          },\r\n          {\r\n              \"lun\": 1,\r\n              \"createOption\": \"Empty\",\r\n              \"diskSizeGB\": \"1023\"\r\n          },\r\n          {\r\n              \"lun\": 2,\r\n              \"createOption\": \"Empty\",\r\n              \"diskSizeGB\": \"1023\"\r\n          }\r\n      }],\r\n      ...\r\n```\r\n\r\n可将资源迭代和属性迭代结合使用。 按名称引用属性迭代。\r\n\r\n```json\r\n{\r\n    \"type\": \"Microsoft.Network/virtualNetworks\",\r\n    \"name\": \"[concat(parameters('vnetname'), copyIndex())]\",\r\n    \"apiVersion\": \"2016-06-01\",\r\n    \"copy\":{\r\n        \"count\": 2,\r\n        \"name\": \"vnetloop\"\r\n    },\r\n    \"location\": \"[resourceGroup().location]\",\r\n    \"properties\": {\r\n        \"addressSpace\": {\r\n            \"addressPrefixes\": [\r\n                \"[parameters('addressPrefix')]\"\r\n            ]\r\n        },\r\n        \"copy\": [\r\n            {\r\n                \"name\": \"subnets\",\r\n                \"count\": 2,\r\n                \"input\": {\r\n                    \"name\": \"[concat('subnet-', copyIndex('subnets'))]\",\r\n                    \"properties\": {\r\n                        \"addressPrefix\": \"[variables('subnetAddressPrefix')[copyIndex('subnets')]]\"\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\n只能在每个资源的属性中包含一个 copy 元素。 若要为多个属性指定一个迭代循环，请在 copy 数组中定义多个对象。 每个对象单独迭代。 例如，若要在负载均衡器上创建 `frontendIPConfigurations` 属性和 `loadBalancingRules` 属性的多个实例，请在单个 copy 元素中定义这两个对象： \r\n\r\n```json\r\n{\r\n    \"name\": \"[variables('loadBalancerName')]\",\r\n    \"type\": \"Microsoft.Network/loadBalancers\",\r\n    \"properties\": {\r\n        \"copy\": [\r\n          {\r\n              \"name\": \"frontendIPConfigurations\",\r\n              \"count\": 2,\r\n              \"input\": {\r\n                  \"name\": \"[concat('loadBalancerFrontEnd', copyIndex('frontendIPConfigurations', 1))]\",\r\n                  \"properties\": {\r\n                      \"publicIPAddress\": {\r\n                          \"id\": \"[variables(concat('publicIPAddressID', copyIndex('frontendIPConfigurations', 1)))]\"\r\n                      }\r\n                  }\r\n              }\r\n          },\r\n          {\r\n              \"name\": \"loadBalancingRules\",\r\n              \"count\": 2,\r\n              \"input\": {\r\n                  \"name\": \"[concat('LBRuleForVIP', copyIndex('loadBalancingRules', 1))]\",\r\n                  \"properties\": {\r\n                      \"frontendIPConfiguration\": {\r\n                          \"id\": \"[variables(concat('frontEndIPConfigID', copyIndex('loadBalancingRules', 1)))]\"\r\n                      },\r\n                      \"backendAddressPool\": {\r\n                          \"id\": \"[variables('lbBackendPoolID')]\"\r\n                      },\r\n                      \"protocol\": \"tcp\",\r\n                      \"frontendPort\": \"[variables(concat('frontEndPort' copyIndex('loadBalancingRules', 1))]\",\r\n                      \"backendPort\": \"[variables(concat('backEndPort' copyIndex('loadBalancingRules', 1))]\",\r\n                      \"probe\": {\r\n                          \"id\": \"[variables('lbProbeID')]\"\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n        ],\r\n        ...\r\n    }\r\n}\r\n```\r\n\r\n## <a name=\"depend-on-resources-in-a-loop\"></a>依赖于循环中的资源\r\n可以使用 `dependsOn` 元素指定一个资源在另一个资源之后部署。 若要部署的资源依赖于循环中的资源集合，请在 dependsOn 元素中提供 copy 循环的名称。 以下示例演示了如何在部署虚拟机之前部署三个存储帐户。 此处并未显示完整的虚拟机定义。 请注意，copy 元素的名称设置为 `storagecopy`，而虚拟机的 dependsOn 元素也设置为 `storagecopy`。\r\n\r\n```json\r\n{\r\n    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r\n    \"contentVersion\": \"1.0.0.0\",\r\n    \"parameters\": {},\r\n    \"resources\": [\r\n        {\r\n            \"apiVersion\": \"2016-01-01\",\r\n            \"type\": \"Microsoft.Storage/storageAccounts\",\r\n            \"name\": \"[concat(copyIndex(),'storage', uniqueString(resourceGroup().id))]\",\r\n            \"location\": \"[resourceGroup().location]\",\r\n            \"sku\": {\r\n                \"name\": \"Standard_LRS\"\r\n            },\r\n            \"kind\": \"Storage\",\r\n            \"properties\": {},\r\n            \"copy\": {\r\n                \"name\": \"storagecopy\",\r\n                \"count\": 3\r\n            }\r\n        },\r\n        {\r\n            \"apiVersion\": \"2015-06-15\", \r\n            \"type\": \"Microsoft.Compute/virtualMachines\", \r\n            \"name\": \"[concat('VM', uniqueString(resourceGroup().id))]\",  \r\n            \"dependsOn\": [\"storagecopy\"],\r\n            ...\r\n        }\r\n    ],\r\n    \"outputs\": {}\r\n}\r\n```\r\n\r\n## <a name=\"create-multiple-instances-of-a-child-resource\"></a>创建子资源的多个实例\r\n不能对子资源使用 copy 循环。 要创建子资源的多个实例，而该子资源通常在其他资源中定义为嵌套资源，则必须将该资源创建为顶级资源。 可以通过 type 和 name 属性定义与父资源的关系。\r\n\r\n例如，假设用户通常会将某个数据集定义为数据工厂中的子资源。\r\n\r\n```json\r\n\"resources\": [\r\n{\r\n    \"type\": \"Microsoft.DataFactory/datafactories\",\r\n    \"name\": \"exampleDataFactory\",\r\n    ...\r\n    \"resources\": [\r\n    {\r\n        \"type\": \"datasets\",\r\n        \"name\": \"exampleDataSet\",\r\n        \"dependsOn\": [\r\n            \"exampleDataFactory\"\r\n        ],\r\n        ...\r\n    }\r\n}]\r\n```\r\n\r\n要创建数据集的多个实例，请将数据集移出数据工厂。 数据集必须与数据工厂位于同一层级，但仍属数据工厂的子资源。 可以通过 type 和 name 属性保留数据集和数据工厂之间的关系。 由于类型不再可以从其在模板中的位置推断，因此必须按以下格式提供完全限定的类型： `{resource-provider-namespace}/{parent-resource-type}/{child-resource-type}`。\r\n\r\n若要与数据工厂的实例建立父/子关系，提供的数据集的名称应包含父资源名称。 使用以下格式： `{parent-resource-name}/{child-resource-name}`。  \r\n\r\n以下示例演示实现过程：\r\n\r\n```json\r\n\"resources\": [\r\n{\r\n    \"type\": \"Microsoft.DataFactory/datafactories\",\r\n    \"name\": \"exampleDataFactory\",\r\n    ...\r\n},\r\n{\r\n    \"type\": \"Microsoft.DataFactory/datafactories/datasets\",\r\n    \"name\": \"[concat('exampleDataFactory', '/', 'exampleDataSet', copyIndex())]\",\r\n    \"dependsOn\": [\r\n        \"exampleDataFactory\"\r\n    ],\r\n    \"copy\": { \r\n        \"name\": \"datasetcopy\", \r\n        \"count\": \"3\" \r\n    } \r\n    ...\r\n}]\r\n```\r\n\r\n## <a name=\"conditionally-deploy-resource\"></a>有条件地部署资源\r\n\r\n若要指定是否部署资源，请使用 `condition` 元素。 此元素的值将解析为 true 或 false。 如果值为 true，则部署资源。 如果值为 false，则不部署资源。 例如，若要指定是要部署新的存储帐户还是使用现有存储帐户，请使用：\r\n\r\n```json\r\n{\r\n    \"condition\": \"[equals(parameters('newOrExisting'),'new')]\",\r\n    \"type\": \"Microsoft.Storage/storageAccounts\",\r\n    \"name\": \"[variables('storageAccountName')]\",\r\n    \"apiVersion\": \"2017-06-01\",\r\n    \"location\": \"[resourceGroup().location]\",\r\n    \"sku\": {\r\n        \"name\": \"[variables('storageAccountType')]\"\r\n    },\r\n    \"kind\": \"Storage\",\r\n    \"properties\": {}\r\n}\r\n```\r\n\r\n有关使用新资源或现有资源的示例，请参阅[新的或现有的条件模板](https://github.com/rjmax/Build2017/blob/master/Act1.TemplateEnhancements/Chapter05.ConditionalResources.NewOrExisting.json)。\r\n\r\n有关使用密码或 SSH 密钥部署虚拟机的示例，请参阅[用户名或 SSH 条件模板](https://github.com/rjmax/Build2017/blob/master/Act1.TemplateEnhancements/Chapter05.ConditionalResourcesUsernameOrSsh.json)。\r\n\r\n## <a name=\"next-steps\"></a>后续步骤\r\n* 若要了解有关模板区段的信息，请参阅[创作 Azure Resource Manager 模板](resource-group-authoring-templates.md)。\r\n* 若要了解如何部署模板，请参阅 [使用 Azure Resource Manager 模板部署应用程序](resource-group-template-deploy.md)。\r\n\r\n<!--Update_Description: update meta properties, wording update -->"}