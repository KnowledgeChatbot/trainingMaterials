{"Title":"Azure Resource Manager 模板函数 - 资源","Description":"介绍可在 Azure Resource Manager 模板中用于检索资源相关值的函数。","Content":"# <a name=\"resource-functions-for-azure-resource-manager-templates\"></a>用于 Azure Resource Manager 模板的资源函数\r\n\r\nResource Manager 提供以下用于获取资源值的函数：\r\n\r\n* [listKeys 和 list{Value}](#listkeys)\r\n* [providers](#providers)\r\n* [reference](#reference)\r\n* [resourceGroup](#resourcegroup)\r\n* [resourceId](#resourceid)\r\n* [订阅](#subscription)\r\n\r\n若要从参数、变量或当前部署获取值，请参阅 [Deployment value functions](resource-group-template-functions-deployment.md)（部署值函数）。\r\n\r\n<a id=\"listkeys\" />\r\n<a id=\"list\" />\r\n\r\n## <a name=\"listkeys-and-listvalue\"></a>listKeys 和 list{Value}\r\n`listKeys(resourceName or resourceIdentifier, apiVersion)`\r\n\r\n`list{Value}(resourceName or resourceIdentifier, apiVersion)`\r\n\r\n返回支持 list 操作的任何资源类型的值。 最常见的用法是 `listKeys`。 \r\n\r\n### <a name=\"parameters\"></a>Parameters\r\n\r\n| 参数 | 必选 | 类型 | 说明 |\r\n|:--- |:--- |:--- |:--- |\r\n| resourceName 或 resourceIdentifier |是 |字符串 |资源的唯一标识符。 |\r\n| apiVersion |是 |字符串 |资源运行时状态的 API 版本。 通常采用 **yyyy-mm-dd**格式。 |\r\n\r\n### <a name=\"return-value\"></a>返回值\r\n\r\nListKeys 返回的对象采用以下格式：\r\n\r\n```json\r\n{\r\n  \"keys\": [\r\n    {\r\n      \"keyName\": \"key1\",\r\n      \"permissions\": \"Full\",\r\n      \"value\": \"{value}\"\r\n    },\r\n    {\r\n      \"keyName\": \"key2\",\r\n      \"permissions\": \"Full\",\r\n      \"value\": \"{value}\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n其他列表函数具有不同的返回格式。 若要查看函数的格式，请将其包含在 outputs 节中，如示例模板所示。 \r\n\r\n### <a name=\"remarks\"></a>备注\r\n\r\n以 **list** 开头的任何操作都可用作模板中的函数。 可用操作不仅包括 listKeys，也包括 `list`、`listAdminKeys` 和 `listStatus` 等操作。 但是，不能使用请求正文中需要值的“list”操作。 例如，[列出帐户 SAS](https://docs.microsoft.com/rest/api/storagerp/storageaccounts#StorageAccounts_ListAccountSAS) 操作需要 signedExpiry 等请求正文参数，因此不能在模板中使用它。\r\n\r\n若要确定哪些资源类型具有列表操作，请使用以下选项：\r\n\r\n* 查看资源提供程序的 [REST API 操作](https://docs.microsoft.com/rest/api/)，并查找列表操作。 例如，存储帐户具有 [listKeys 操作](https://docs.microsoft.com/rest/api/storagerp/storageaccounts#StorageAccounts_ListKeys)。\r\n* 使用 [Get-AzureRmProviderOperation](https://docs.microsoft.com/powershell/module/azurerm.resources/get-azurermprovideroperation) PowerShell cmdlet。 以下示例获取存储帐户的所有列表操作：\r\n\r\n  ```powershell\r\n  Get-AzureRmProviderOperation -OperationSearchString \"Microsoft.Storage/*\" | where {$_.Operation -like \"*list*\"} | FT Operation\r\n  ```\r\n* 使用以下 Azure CLI 命令，仅筛选列表操作：\r\n\r\n  ```azurecli\r\n  az provider operation show --namespace Microsoft.Storage --query \"resourceTypes[?name=='storageAccounts'].operations[].name | [?contains(@, 'list')]\"\r\n  ```\r\n\r\n使用 [resourceId 函数](#resourceid)或格式 `{providerNamespace}/{resourceType}/{resourceName}` 指定资源。\r\n\r\n### <a name=\"example\"></a>示例\r\n\r\n以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/listkeys.json)演示如何从 outputs 节中的存储帐户返回主密钥和辅助密钥。\r\n\r\n```json\r\n{\r\n  \"$schema\": \"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r\n  \"contentVersion\": \"1.0.0.0\",\r\n  \"parameters\": {\r\n      \"storageAccountName\": { \r\n          \"type\": \"string\"\r\n      }\r\n  },\r\n  \"resources\": [\r\n    {\r\n      \"name\": \"[parameters('storageAccountName')]\",\r\n      \"type\": \"Microsoft.Storage/storageAccounts\",\r\n      \"apiVersion\": \"2016-12-01\",\r\n      \"sku\": {\r\n        \"name\": \"Standard_LRS\"\r\n      },\r\n      \"kind\": \"Storage\",\r\n      \"location\": \"[resourceGroup().location]\",\r\n      \"tags\": {},\r\n      \"properties\": {\r\n      }\r\n    }\r\n  ],\r\n  \"outputs\": {\r\n      \"referenceOutput\": {\r\n          \"type\": \"object\",\r\n          \"value\": \"[listKeys(parameters('storageAccountName'), '2016-12-01')]\"\r\n      }\r\n    }\r\n}\r\n``` \r\n\r\n要使用 Azure CLI 部署此示例模板，请使用：\r\n\r\n```azurecli\r\naz group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/listkeys.json --parameters storageAccountName=<your-storage-account>\r\n```\r\n\r\n要使用 PowerShell 部署此示例模板，请使用：\r\n\r\n```powershell\r\nNew-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/listkeys.json -storageAccountName <your-storage-account>\r\n```\r\n\r\n<a id=\"providers\" />\r\n\r\n## <a name=\"providers\"></a>providers\r\n`providers(providerNamespace, [resourceType])`\r\n\r\n返回有关资源提供程序及其支持的资源类型的信息。 如果未提供资源类型，该函数将返回资源提供程序支持的所有类型。\r\n\r\n### <a name=\"parameters\"></a>Parameters\r\n\r\n| 参数 | 必选 | 类型 | 说明 |\r\n|:--- |:--- |:--- |:--- |\r\n| providerNamespace |是 |字符串 |提供程序的命名空间 |\r\n| resourceType |否 |字符串 |指定的命名空间中的资源类型。 |\r\n\r\n### <a name=\"return-value\"></a>返回值\r\n\r\n将使用以下格式返回支持的每个类型： \r\n\r\n```json\r\n{\r\n    \"resourceType\": \"{name of resource type}\",\r\n    \"locations\": [ all supported locations ],\r\n    \"apiVersions\": [ all supported API versions ]\r\n}\r\n```\r\n\r\n不保证返回值的数组排序。\r\n\r\n### <a name=\"example\"></a>示例\r\n\r\n以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/providers.json)演示如何使用 provider 函数：\r\n\r\n```json\r\n{\r\n    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r\n    \"contentVersion\": \"1.0.0.0\",\r\n    \"parameters\": {\r\n        \"providerNamespace\": {\r\n            \"type\": \"string\"\r\n        },\r\n        \"resourceType\": {\r\n            \"type\": \"string\"\r\n        }\r\n    },\r\n    \"resources\": [],\r\n    \"outputs\": {\r\n        \"providerOutput\": {\r\n            \"value\": \"[providers(parameters('providerNamespace'), parameters('resourceType'))]\",\r\n            \"type\" : \"object\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n对于 Microsoft.Web 资源提供程序和站点资源类型，上面的示例返回以下格式的对象：\r\n\r\n```json\r\n{\r\n  \"resourceType\": \"sites\",\r\n  \"locations\": [\r\n    \"China East\",\r\n    \"China North\",\r\n    ...\r\n  ],\r\n  \"apiVersions\": [\r\n    \"2016-08-01\",\r\n    \"2016-03-01\",\r\n    \"2015-08-01-preview\",\r\n    \"2015-08-01\",\r\n    ...\r\n  ]\r\n}\r\n```\r\n\r\n要使用 Azure CLI 部署此示例模板，请使用：\r\n\r\n```azurecli\r\naz group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/providers.json --parameters providerNamespace=Microsoft.Web resourceType=sites\r\n```\r\n\r\n要使用 PowerShell 部署此示例模板，请使用：\r\n\r\n```powershell\r\nNew-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/providers.json -providerNamespace Microsoft.Web -resourceType sites\r\n```\r\n\r\n<a id=\"reference\" />\r\n\r\n## <a name=\"reference\"></a>reference\r\n`reference(resourceName or resourceIdentifier, [apiVersion], ['Full'])`\r\n\r\n返回表示资源的运行时状态的对象。\r\n\r\n### <a name=\"parameters\"></a>Parameters\r\n\r\n| 参数 | 必选 | 类型 | 说明 |\r\n|:--- |:--- |:--- |:--- |\r\n| resourceName 或 resourceIdentifier |是 |字符串 |资源的名称或唯一标识符。 |\r\n| apiVersion |否 |字符串 |指定的资源的 API 版本。 如果资源不是在同一模板中预配的，请包含此参数。 通常采用 **yyyy-mm-dd**格式。 |\r\n| 'Full' |否 |字符串 |一个值，指定是否要返回完整资源对象。 如果未指定 `'Full'`，仅返回资源的属性对象。 完整对象包括资源 ID 和位置等值。 |\r\n\r\n### <a name=\"return-value\"></a>返回值\r\n\r\n每种资源类型返回 reference 函数的不同属性。 该函数不返回单个预定义的格式。 同样，返回的值因是否指定了完整对象而有所不同。 若要查看资源类型的属性，请返回 outputs 节中的对象，如示例所示。\r\n\r\n### <a name=\"remarks\"></a>备注\r\n\r\nreference 函数从运行时状态派生其值，因此不能在 variables 节中使用。 可以在模板的 outputs 节中使用它。 \r\n\r\n如果在相同的模板内设置了引用的资源，则可使用 reference 函数来隐式声明一个资源依赖于另一个资源。 不需要同时使用 dependsOn 属性。 只有当引用的资源已完成部署后，才会对函数求值。\r\n\r\n若要查看资源类型的属性名称和值，请创建一个模板，该模板返回 outputs 节中的对象。 如果有现有的该类型的资源，则模板只返回对象而不部署任何新资源。 \r\n\r\n通常情况下，可以使用 reference 函数返回对象的特定值，例如 blob 终结点 URI 或完全限定的域名。\r\n\r\n```json\r\n\"outputs\": {\r\n    \"BlobUri\": {\r\n        \"value\": \"[reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), '2016-01-01').primaryEndpoints.blob]\",\r\n        \"type\" : \"string\"\r\n    },\r\n    \"FQDN\": {\r\n        \"value\": \"[reference(concat('Microsoft.Network/publicIPAddresses/', parameters('ipAddressName')), '2016-03-30').dnsSettings.fqdn]\",\r\n        \"type\" : \"string\"\r\n    }\r\n}\r\n```\r\n\r\n需要不属于属性架构的资源值时，请使用 `'Full'`。 例如，若要设置密钥保管库访问策略，请获取虚拟机的标识属性。\r\n\r\n```json\r\n{\r\n  \"type\": \"Microsoft.KeyVault/vaults\",\r\n  \"properties\": {\r\n    \"tenantId\": \"[reference(concat('Microsoft.Compute/virtualMachines/', variables('vmName')), '2017-03-30', 'Full').identity.tenantId]\",\r\n    \"accessPolicies\": [\r\n      {\r\n        \"tenantId\": \"[reference(concat('Microsoft.Compute/virtualMachines/', variables('vmName')), '2017-03-30', 'Full').identity.tenantId]\",\r\n        \"objectId\": \"[reference(concat('Microsoft.Compute/virtualMachines/', variables('vmName')), '2017-03-30', 'Full').identity.principalId]\",\r\n        \"permissions\": {\r\n          \"keys\": [\r\n            \"all\"\r\n          ],\r\n          \"secrets\": [\r\n            \"all\"\r\n          ]\r\n        }\r\n      }\r\n    ],\r\n    ...\r\n```\r\n\r\n有关前面模板的完整示例，请参阅[从 Windows 到 Key Vault](https://github.com/rjmax/AzureSaturday/blob/master/Demo02.ManagedServiceIdentity/demo08.msiWindowsToKeyvault.json)。 一个类似示例可用于 [Linux](https://github.com/rjmax/AzureSaturday/blob/master/Demo02.ManagedServiceIdentity/demo07.msiLinuxToArm.json)。\r\n\r\n### <a name=\"example\"></a>示例\r\n\r\n以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/referencewithstorage.json)部署一个资源并引用该资源。\r\n\r\n```json\r\n{\r\n  \"$schema\": \"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r\n  \"contentVersion\": \"1.0.0.0\",\r\n  \"parameters\": {\r\n      \"storageAccountName\": { \r\n          \"type\": \"string\"\r\n      }\r\n  },\r\n  \"resources\": [\r\n    {\r\n      \"name\": \"[parameters('storageAccountName')]\",\r\n      \"type\": \"Microsoft.Storage/storageAccounts\",\r\n      \"apiVersion\": \"2016-12-01\",\r\n      \"sku\": {\r\n        \"name\": \"Standard_LRS\"\r\n      },\r\n      \"kind\": \"Storage\",\r\n      \"location\": \"[resourceGroup().location]\",\r\n      \"tags\": {},\r\n      \"properties\": {\r\n      }\r\n    }\r\n  ],\r\n  \"outputs\": {\r\n      \"referenceOutput\": {\r\n          \"type\": \"object\",\r\n          \"value\": \"[reference(parameters('storageAccountName'))]\"\r\n      },\r\n      \"fullReferenceOutput\": {\r\n        \"type\": \"object\",\r\n        \"value\": \"[reference(parameters('storageAccountName'), '2016-12-01', 'Full')]\"\r\n      }\r\n    }\r\n}\r\n``` \r\n\r\n上面的示例返回两个对象。 属性对象采用以下格式：\r\n\r\n```json\r\n{\r\n   \"creationTime\": \"2017-10-09T18:55:40.5863736Z\",\r\n   \"primaryEndpoints\": {\r\n     \"blob\": \"https://examplestorage.blob.core.chinacloudapi.cn/\",\r\n     \"file\": \"https://examplestorage.file.core.chinacloudapi.cn/\",\r\n     \"queue\": \"https://examplestorage.queue.core.chinacloudapi.cn/\",\r\n     \"table\": \"https://examplestorage.table.core.chinacloudapi.cn/\"\r\n   },\r\n   \"primaryLocation\": \"chinaeast\",\r\n   \"provisioningState\": \"Succeeded\",\r\n   \"statusOfPrimary\": \"available\",\r\n   \"supportsHttpsTrafficOnly\": false\r\n}\r\n```\r\n\r\n完整对象采用以下格式：\r\n\r\n```json\r\n{\r\n  \"apiVersion\":\"2016-12-01\",\r\n  \"location\":\"chinaeast\",\r\n  \"sku\": {\r\n    \"name\":\"Standard_LRS\",\r\n    \"tier\":\"Standard\"\r\n  },\r\n  \"tags\":{},\r\n  \"kind\":\"Storage\",\r\n  \"properties\": {\r\n    \"creationTime\":\"2017-10-09T18:55:40.5863736Z\",\r\n    \"primaryEndpoints\": {\r\n      \"blob\":\"https://examplestorage.blob.core.chinacloudapi.cn/\",\r\n      \"file\":\"https://examplestorage.file.core.chinacloudapi.cn/\",\r\n      \"queue\":\"https://examplestorage.queue.core.chinacloudapi.cn/\",\r\n      \"table\":\"https://examplestorage.table.core.chinacloudapi.cn/\"\r\n    },\r\n    \"primaryLocation\":\"chinaeast\",\r\n    \"provisioningState\":\"Succeeded\",\r\n    \"statusOfPrimary\":\"available\",\r\n    \"supportsHttpsTrafficOnly\":false\r\n  },\r\n  \"subscriptionId\":\"<subscription-id>\",\r\n  \"resourceGroupName\":\"functionexamplegroup\",\r\n  \"resourceId\":\"Microsoft.Storage/storageAccounts/examplestorage\",\r\n  \"referenceApiVersion\":\"2016-12-01\",\r\n  \"condition\":true,\r\n  \"isConditionTrue\":true,\r\n  \"isTemplateResource\":false,\r\n  \"isAction\":false,\r\n  \"provisioningOperation\":\"Read\"\r\n}\r\n```\r\n\r\n要使用 Azure CLI 部署此示例模板，请使用：\r\n\r\n```azurecli\r\naz group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/referencewithstorage.json --parameters storageAccountName=<your-storage-account>\r\n```\r\n\r\n要使用 PowerShell 部署此示例模板，请使用：\r\n\r\n```powershell\r\nNew-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/referencewithstorage.json -storageAccountName <your-storage-account>\r\n```\r\n\r\n以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/reference.json)引用未部署到此模板中的存储帐户。 同一资源组内已存在该存储帐户。\r\n\r\n```json\r\n{\r\n    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r\n    \"contentVersion\": \"1.0.0.0\",\r\n    \"parameters\": {\r\n        \"storageAccountName\": {\r\n            \"type\": \"string\"\r\n        }\r\n    },\r\n    \"resources\": [],\r\n    \"outputs\": {\r\n        \"ExistingStorage\": {\r\n            \"value\": \"[reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), '2016-01-01')]\",\r\n            \"type\" : \"object\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n要使用 Azure CLI 部署此示例模板，请使用：\r\n\r\n```azurecli\r\naz group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/reference.json --parameters storageAccountName=<your-storage-account>\r\n```\r\n\r\n要使用 PowerShell 部署此示例模板，请使用：\r\n\r\n```powershell\r\nNew-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/reference.json -storageAccountName <your-storage-account>\r\n```\r\n\r\n<a id=\"resourcegroup\" />\r\n\r\n## <a name=\"resourcegroup\"></a>resourceGroup\r\n`resourceGroup()`\r\n\r\n返回表示当前资源组的对象。 \r\n\r\n### <a name=\"return-value\"></a>返回值\r\n\r\n返回的对象采用以下格式：\r\n\r\n```json\r\n{\r\n  \"id\": \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}\",\r\n  \"name\": \"{resourceGroupName}\",\r\n  \"location\": \"{resourceGroupLocation}\",\r\n  \"tags\": {\r\n  },\r\n  \"properties\": {\r\n    \"provisioningState\": \"{status}\"\r\n  }\r\n}\r\n```\r\n\r\n### <a name=\"remarks\"></a>备注\r\n\r\nresourceGroup 函数的一个常见用途是在与资源组相同的位置中创建资源。 以下示例使用资源组位置来分配网站的位置。\r\n\r\n```json\r\n\"resources\": [\r\n   {\r\n      \"apiVersion\": \"2016-08-01\",\r\n      \"type\": \"Microsoft.Web/sites\",\r\n      \"name\": \"[parameters('siteName')]\",\r\n      \"location\": \"[resourceGroup().location]\",\r\n      ...\r\n   }\r\n]\r\n```\r\n\r\n### <a name=\"example\"></a>示例\r\n\r\n以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/resourcegroup.json)返回资源组的属性。\r\n\r\n```json\r\n{\r\n    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r\n    \"contentVersion\": \"1.0.0.0\",\r\n    \"resources\": [],\r\n    \"outputs\": {\r\n        \"resourceGroupOutput\": {\r\n            \"value\": \"[resourceGroup()]\",\r\n            \"type\" : \"object\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n上述示例返回采用以下格式的对象：\r\n\r\n```json\r\n{\r\n  \"id\": \"/subscriptions/{subscription-id}/resourceGroups/examplegroup\",\r\n  \"name\": \"examplegroup\",\r\n  \"location\": \"chinaeast\",\r\n  \"properties\": {\r\n    \"provisioningState\": \"Succeeded\"\r\n  }\r\n}\r\n```\r\n\r\n要使用 Azure CLI 部署此示例模板，请使用：\r\n\r\n```azurecli\r\naz group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/resourcegroup.json\r\n```\r\n\r\n要使用 PowerShell 部署此示例模板，请使用：\r\n\r\n```powershell\r\nNew-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/resourcegroup.json \r\n```\r\n\r\n<a id=\"resourceid\" />\r\n\r\n## <a name=\"resourceid\"></a>resourceId\r\n`resourceId([subscriptionId], [resourceGroupName], resourceType, resourceName1, [resourceName2]...)`\r\n\r\n返回资源的唯一标识符。 如果资源名称不确定或未设置在相同的模板内，请使用此函数。 \r\n\r\n### <a name=\"parameters\"></a>Parameters\r\n\r\n| 参数 | 必选 | 类型 | 说明 |\r\n|:--- |:--- |:--- |:--- |\r\n| subscriptionId |否 |字符串（GUID 格式） |默认值为当前订阅。 如果需要检索另一个订阅中的资源，请指定此值。 |\r\n| resourceGroupName |否 |字符串 |默认值为当前资源组。 如果需要检索另一个资源组中的资源，请指定此值。 |\r\n| resourceType |是 |字符串 |资源类型，包括资源提供程序命名空间。 |\r\n| resourceName1 |是 |字符串 |资源的名称。 |\r\n| resourceName2 |否 |字符串 |下一个资源名称段（如果资源是嵌套的）。 |\r\n\r\n### <a name=\"return-value\"></a>返回值\r\n\r\n将使用以下格式返回标识符：\r\n\r\n```json\r\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\r\n```\r\n\r\n### <a name=\"remarks\"></a>备注\r\n\r\n指定的参数值取决于资源是否位于与当前部署相同的订阅和资源组中。\r\n\r\n若要获取同一订阅和资源组中存储帐户的资源 ID，请使用：\r\n\r\n```json\r\n\"[resourceId('Microsoft.Storage/storageAccounts','examplestorage')]\"\r\n```\r\n\r\n若要获取同一订阅但不同资源组中存储帐户的资源 ID，请使用：\r\n\r\n```json\r\n\"[resourceId('otherResourceGroup', 'Microsoft.Storage/storageAccounts','examplestorage')]\"\r\n```\r\n\r\n若要获取不同订阅和资源组中存储帐户的资源 ID，请使用：\r\n\r\n```json\r\n\"[resourceId('xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'otherResourceGroup', 'Microsoft.Storage/storageAccounts','examplestorage')]\"\r\n```\r\n\r\n若要获取不同资源组中数据库的资源 ID，请使用：\r\n\r\n```json\r\n\"[resourceId('otherResourceGroup', 'Microsoft.SQL/servers/databases', parameters('serverName'), parameters('databaseName'))]\"\r\n```\r\n\r\n通常，在替代资源组中使用存储帐户或虚拟网络时，需要使用此函数。 以下示例演示了如何轻松使用外部资源组中的资源：\r\n\r\n```json\r\n{\r\n  \"$schema\": \"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r\n  \"contentVersion\": \"1.0.0.0\",\r\n  \"parameters\": {\r\n      \"virtualNetworkName\": {\r\n          \"type\": \"string\"\r\n      },\r\n      \"virtualNetworkResourceGroup\": {\r\n          \"type\": \"string\"\r\n      },\r\n      \"subnet1Name\": {\r\n          \"type\": \"string\"\r\n      },\r\n      \"nicName\": {\r\n          \"type\": \"string\"\r\n      }\r\n  },\r\n  \"variables\": {\r\n      \"vnetID\": \"[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]\",\r\n      \"subnet1Ref\": \"[concat(variables('vnetID'),'/subnets/', parameters('subnet1Name'))]\"\r\n  },\r\n  \"resources\": [\r\n  {\r\n      \"apiVersion\": \"2015-05-01-preview\",\r\n      \"type\": \"Microsoft.Network/networkInterfaces\",\r\n      \"name\": \"[parameters('nicName')]\",\r\n      \"location\": \"[parameters('location')]\",\r\n      \"properties\": {\r\n          \"ipConfigurations\": [{\r\n              \"name\": \"ipconfig1\",\r\n              \"properties\": {\r\n                  \"privateIPAllocationMethod\": \"Dynamic\",\r\n                  \"subnet\": {\r\n                      \"id\": \"[variables('subnet1Ref')]\"\r\n                  }\r\n              }\r\n          }]\r\n       }\r\n  }]\r\n}\r\n```\r\n\r\n### <a name=\"example\"></a>示例\r\n\r\n以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/resourceid.json)返回资源组中存储帐户的资源 ID：\r\n\r\n```json\r\n{\r\n    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r\n    \"contentVersion\": \"1.0.0.0\",\r\n    \"resources\": [],\r\n    \"outputs\": {\r\n        \"sameRGOutput\": {\r\n            \"value\": \"[resourceId('Microsoft.Storage/storageAccounts','examplestorage')]\",\r\n            \"type\" : \"string\"\r\n        },\r\n        \"differentRGOutput\": {\r\n            \"value\": \"[resourceId('otherResourceGroup', 'Microsoft.Storage/storageAccounts','examplestorage')]\",\r\n            \"type\" : \"string\"\r\n        },\r\n        \"differentSubOutput\": {\r\n            \"value\": \"[resourceId('11111111-1111-1111-1111-111111111111', 'otherResourceGroup', 'Microsoft.Storage/storageAccounts','examplestorage')]\",\r\n            \"type\" : \"string\"\r\n        },\r\n        \"nestedResourceOutput\": {\r\n            \"value\": \"[resourceId('Microsoft.SQL/servers/databases', 'serverName', 'databaseName')]\",\r\n            \"type\" : \"string\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n上述示例中使用默认值的输出为：\r\n\r\n| 名称 | 类型 | 值 |\r\n| ---- | ---- | ----- |\r\n| sameRGOutput | String | /subscriptions/{current-sub-id}/resourceGroups/examplegroup/providers/Microsoft.Storage/storageAccounts/examplestorage |\r\n| differentRGOutput | String | /subscriptions/{current-sub-id}/resourceGroups/otherResourceGroup/providers/Microsoft.Storage/storageAccounts/examplestorage |\r\n| differentSubOutput | 字符串 | /subscriptions/11111111-1111-1111-1111-111111111111/resourceGroups/otherResourceGroup/providers/Microsoft.Storage/storageAccounts/examplestorage |\r\n| nestedResourceOutput | String | /subscriptions/{current-sub-id}/resourceGroups/examplegroup/providers/Microsoft.SQL/servers/serverName/databases/databaseName |\r\n\r\n要使用 Azure CLI 部署此示例模板，请使用：\r\n\r\n```azurecli\r\naz group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/resourceid.json\r\n```\r\n\r\n要使用 PowerShell 部署此示例模板，请使用：\r\n\r\n```powershell\r\nNew-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/resourceid.json \r\n```\r\n\r\n<a id=\"subscription\" />\r\n\r\n## <a name=\"subscription\"></a>subscription\r\n`subscription()`\r\n\r\n返回有关当前部署的订阅的详细信息。 \r\n\r\n### <a name=\"return-value\"></a>返回值\r\n\r\n该函数返回以下格式：\r\n\r\n```json\r\n{\r\n    \"id\": \"/subscriptions/{subscription-id}\",\r\n    \"subscriptionId\": \"{subscription-id}\",\r\n    \"tenantId\": \"{tenant-id}\",\r\n    \"displayName\": \"{name-of-subscription}\"\r\n}\r\n```\r\n\r\n### <a name=\"example\"></a>示例\r\n\r\n以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/subscription.json)显示了在 outputs 节中调用的 subscription 函数。 \r\n\r\n```json\r\n{\r\n    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r\n    \"contentVersion\": \"1.0.0.0\",\r\n    \"resources\": [],\r\n    \"outputs\": {\r\n        \"subscriptionOutput\": {\r\n            \"value\": \"[subscription()]\",\r\n            \"type\" : \"object\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n要使用 Azure CLI 部署此示例模板，请使用：\r\n\r\n```azurecli\r\naz group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/subscription.json\r\n```\r\n\r\n要使用 PowerShell 部署此示例模板，请使用：\r\n\r\n```powershell\r\nNew-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/subscription.json \r\n```\r\n\r\n## <a name=\"next-steps\"></a>后续步骤\r\n* 有关 Azure Resource Manager 模板中各部分的说明，请参阅 [Authoring Azure Resource Manager templates](resource-group-authoring-templates.md)（创作 Azure Resource Manager 模板）。\r\n* 若要合并多个模板，请参阅[将链接的模板与 Azure Resource Manager 配合使用](resource-group-linked-templates.md)。\r\n* 若要在创建资源类型时迭代指定的次数，请参阅[在 Azure Resource Manager 中创建多个资源实例](resource-group-create-multiple.md)。\r\n* 若要查看如何部署已创建的模板，请参阅[使用 Azure Resource Manager 模板部署应用程序](resource-group-template-deploy.md)。\r\n\r\n<!--Update_Description: update meta properties, add full parameter cmdlet sample and json file-->"}