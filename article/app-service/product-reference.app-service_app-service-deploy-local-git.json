{"Title":"从本地 Git 部署到 Azure 应用服务","Description":"了解如何实现从本地 Git 部署到 Azure 应用服务。","Content":"# <a name=\"local-git-deployment-to-azure-app-service\"></a>从本地 Git 部署到 Azure 应用服务\r\n本教程说明如何将应用从本地计算机上的 Git 存储库部署到 [Azure Web 应用](app-service-web-overview.md)。 应用服务支持结合 [Azure 门户]中的“本地 Git”部署选项使用此方法。  \r\n在根据[此处](app-service-web-get-started-dotnet.md)所述使用 [Azure 命令行接口]创建应用服务应用时，会自动执行本文中所述的许多 Git 命令。\r\n\r\n## <a name=\"prerequisites\"></a>先决条件\r\n要完成本教程，需要：\r\n\r\n* Git。 可在 [此处](http://www.git-scm.com/downloads)下载二进制安装文件。  \r\n* 对 Git 有一个基本的了解。\r\n* 一个 Azure 帐户。 如果没有帐户，可以 [注册试用版](https://www.azure.cn/pricing/1rmb-trial)。\r\n\r\n## <a name=\"Step1\"></a>步骤 1：创建本地存储库\r\n执行下列任务可创建新的 Git 存储库。\r\n\r\n1. 启动一个命令行工具，例如 **GitBash** (Windows) 或 **Bash** (Unix Shell)。 在 OS X 系统上，可以通过 **Terminal** 应用程序访问命令行。\r\n2. 导航到要部署的内容所在的目录。\r\n3. 使用以下命令可初始化新的 Git 存储库：\r\n\r\n```bash  \r\ngit init\r\n```\r\n\r\n## <a name=\"Step2\"></a>步骤 2：提交内容\r\n应用服务支持用各种编程语言创建的应用程序。 \r\n\r\n1. 如果存储库已包含内容，请跳过这一项，并转到下面的第 2 项。 如果存储库尚不包含内容，请只填充静态 .html 文件，如下所示： \r\n\r\n   * 使用文本编辑器，在 Git 存储库的根中创建一个名为 **index.html** 的新文件。\r\n   * 添加以下文本作为 index.html 文件的内容并保存该文件： *Hello Git!*\r\n   \r\n2. 在命令行中，验证当前位置是否在 Git 存储库的根目录下。 然后使用以下命令将文件添加到存储库中：\r\n\r\n    ```bash  \r\n    git add -A \r\n    ```\r\n3. 接下来，使用以下命令将更改提交到存储库：\r\n\r\n    ```bash  \r\n    git commit -m \"Hello Azure App Service\"\r\n    ```  \r\n\r\n## <a name=\"Step3\"></a>步骤 3：启用应用服务应用存储库\r\n执行以下步骤为应用服务应用启用 Git 存储库。\r\n\r\n1. 登录到 [Azure 门户]。\r\n2. 在应用服务应用的边栏选项卡中，单击“设置”>“部署源”。 依次单击“选择源”、“本地 Git 存储库”、“确定”。  \r\n\r\n    ![本地 Git 存储库](./media/app-service-deploy-local-git/local_git_selection.png)\r\n    \r\n3. 如果这是你第一次在 Azure 中设置存储库，则需要为其创建登录凭据。 你将使用它们从本地 Git 存储库登录到 Azure 存储库并推送更改。 在应用的边栏选项卡中，单击“设置”>“部署凭据”，并配置部署用户名和密码。 完成后，单击“保存”。\r\n   \r\n    ![](./media/app-service-deploy-local-git/deployment_credentials.png)\r\n\r\n## <a name=\"Step4\"></a>步骤 4：部署项目\r\n使用以下步骤通过本地 Git 将应用发布到应用服务。\r\n\r\n1. 在 Azure 门户的应用边栏选项卡中，单击“Git URL”的“设置”>“属性”。\r\n\r\n    ![](./media/app-service-deploy-local-git/git_url.png)\r\n\r\n    **Git URL** 是从本地存储库到部署的远程引用。 在后续步骤中，你将要用到此 URL。\r\n    \r\n2. 使用命令行验证当前位置是否在本地 Git 存储库的根目录下。\r\n3. 使用 `git remote` 添加步骤 1 的 **Git URL** 中所列的远程引用。 使用的命令应类似于：\r\n\r\n        git remote add azure https://<username>@localgitdeployment.scm.chinacloudsites.cn:443/localgitdeployment.git\r\n\t         \r\n   > [!NOTE]\r\n   > **remote** 命令可将命名引用添加到远程存储库。 在本示例中，它为 Web 应用的存储库创建名为“azure”的引用。\r\n   > \r\n   > \r\n   \r\n4. 使用刚刚创建的新 **azure** 远程命令将内容推送到应用服务。\r\n\r\n    ```bash  \r\n    git push azure master\r\n    ```\r\n    当你在 Azure 门户中重置部署凭据时，系统会提示你输入以前创建的密码。 输入该密码（请注意，在键入密码时，Gitbash 不会将星号回显到控制台）。 \r\n    \r\n5. 返回到 Azure 门户中的应用。 最近推送的日志条目应显示在“部署”边栏选项卡中。 \r\n\r\n    ![](./media/app-service-deploy-local-git/deployment_history.png)\r\n    \r\n6. 单击应用边栏选项卡顶部的“浏览”按钮来验证是否已部署内容。 \r\n\r\n## <a name=\"Step5\"></a>故障排除\r\n以下是使用 Git 发布到 Azure 中的应用服务应用时遇到的常见错误或问题：\r\n\r\n- - -\r\n**症状**：无法访问“[siteURL]”：无法连接到 [scmAddress]\r\n\r\n**原因**：如果应用无法正常工作，则会发生该错误。\r\n\r\n**解决方法**：在 Azure 门户中启动应用。 在应用运行之前，Git 部署无法进行。 \r\n\r\n- - -\r\n**症状**：无法解析主机“主机名”\r\n\r\n**原因**：如果创建“azure”远程网站时输入的地址信息不正确，则会发生该错误。\r\n\r\n**解决方法**：使用 `git remote -v` 命令列出所有远程网站以及关联的 URL。 确认“azure”远程网站的 URL 正确。 如果需要，请删除此远程网站并使用正确的 URL 重新创建它。\r\n\r\n- - -\r\n**症状**：无通用引用且未指定任何引用；不采取任何措施。 或许你应指定一个分支，例如“master”。\r\n\r\n**原因**：如果在执行 Git 推送操作时未指定分支且未设置 Git 使用的 push.default 值，则会发生该错误。\r\n\r\n**解决方法**：请再次执行推送操作，并指定 master 分支。 例如：\r\n\r\n```bash  \r\ngit push azure master\r\n```\r\n- - -\r\n**症状**：src refspec [分支名] 不匹配任何内容。\r\n\r\n**原因**：如果尝试推送到“azure”远程网站上 master 分支之外的分支，则会发生该错误。\r\n\r\n**解决方法**：请再次执行推送操作，并指定 master 分支。 例如：\r\n\r\n```bash  \r\ngit push azure master\r\n```\r\n- - -\r\n**症状**：RPC 失败；结果 = 22，HTTP 代码 = 502。\r\n\r\n**原因**：如果尝试通过 HTTPS 推送大型 Git 存储库，则可能出现此错误。\r\n\r\n**解决方法**：在本地计算机上更改 Git 配置，以增大 postBuffer\r\n\r\n```bash  \r\ngit config --global http.postBuffer 524288000\r\n```\r\n- - -\r\n**症状**：错误 - 已将更改提交到远程存储库，但未更新 Web 应用。\r\n\r\n**原因**：如果部署的是 Node.js 应用，其中包含用于指定其他必需模块的 package.json 文件，则会发生该错误。\r\n\r\n**解决方法**：应在发生此错误之前记录包含“npm ERR!” 的其他消息，这些消息可提供有关失败的其他上下文。 以下是该错误的已知原因和相应的“npm ERR!” 消息:\r\n\r\n* **package.json 文件格式不正确**：npm ERR! 无法读取依赖项。\r\n* **不具有 Windows 的二进制分发的本机模块**：\r\n\r\n  * npm ERR! \\`cmd \"/c\" \"node-gyp rebuild\"\\` 失败，1\r\n\r\n      或\r\n  * npm ERR! [modulename@version] 预安装：\\`make || gmake\\`\r\n\r\n## <a name=\"additional-resources\"></a>其他资源\r\n* [Git 文档](http://git-scm.com/documentation)\r\n* [项目 Kudu 文档](https://github.com/projectkudu/kudu/wiki)\r\n* [Continous Deployment to Azure App Service](app-service-continuous-deployment.md)（连续部署到 Azure 应用服务）\r\n* [如何使用适用于 Azure 的 PowerShell](https://docs.microsoft.com/powershell/azure/overview)\r\n* [如何使用 Azure 命令行接口](../cli-install-nodejs.md)\r\n\r\n[Azure Developer Center]: /develop/\r\n[Azure 门户]: https://portal.azure.cn\r\n[Git website]: http://git-scm.com\r\n[Installing Git]: http://git-scm.com/book/en/Getting-Started-Installing-Git\r\n[Azure 命令行接口]: /azure-resource-manager/xplat-cli-azure-resource-manager/\r\n\r\n[Using Git with CodePlex]: http://codeplex.codeplex.com/wikipage?title=Using%20Git%20with%20CodePlex&referringTitle=Source%20control%20clients&ProjectName=codeplex\r\n"}