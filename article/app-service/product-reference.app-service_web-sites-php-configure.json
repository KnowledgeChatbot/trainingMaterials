{"Title":"在 Azure 应用服务 Web 应用中配置 PHP","Description":"了解如何在 Azure 应用服务中为 Web 应用配置默认 PHP 安装或添加自定义 PHP 安装。","Content":"# <a name=\"configure-php-in-azure-app-service-web-apps\"></a>在 Azure 应用服务 Web 应用中配置 PHP\r\n## <a name=\"introduction\"></a>介绍\r\n本指南演示如何执行以下操作：在 [Azure 应用服务](app-service-web-overview.md) 中配置 Web 应用的内置 PHP 运行时，提供自定义 PHP 运行时，并启用扩展。 若要使用应用服务，请注册 [试用版]。 要充分利用本指南，应先在应用服务中创建一个 PHP Web 应用。\r\n\r\n[!INCLUDE [app-service-web-to-api-and-mobile](../../includes/app-service-web-to-api-and-mobile.md)]\r\n\r\n## <a name=\"how-to-change-the-built-in-php-version\"></a>如何：更改内置 PHP 版本\r\n默认情况下，将安装 PHP 5.5 并且在创建应用服务 Web 应用时立即可用。 查看可用发行版、其默认配置以及已启用的扩展的最佳方式是部署一个调用 [phpinfo()] 函数的脚本。\r\n\r\nPHP 5.6 和 PHP 7.0 也可用，但它们在默认情况下不启用。 若要更新 PHP 版本，请使用下列方法之一：\r\n\r\n### <a name=\"azure-portal\"></a>Azure 门户\r\n1. 在 [Azure 门户](https://portal.azure.cn)中浏览到 Web 应用，然后单击“设置”按钮。\r\n\r\n    ![Web 应用设置][settings-button]\r\n2. 在“设置”边栏选项卡中选择“应用程序设置”，并选择新的 PHP 版本。\r\n\r\n    ![应用程序设置][application-settings]\r\n3. 单击“Web 应用设置”边栏选项卡顶部的“保存”按钮。\r\n\r\n    ![保存配置设置][save-button]\r\n\r\n### <a name=\"azure-powershell-windows\"></a>Azure PowerShell (Windows)\r\n1. 打开 Azure PowerShell 并登录到帐户：\r\n\r\n        PS C:\\> Login-AzureRmAccount -EnvironmentName AzureChinaCloud\r\n2. 设置 Web 应用的 PHP 版本。\r\n\r\n        PS C:\\> Set-AzureWebsite -PhpVersion {5.5 | 5.6 | 7.0} -Name {app-name}\r\n3. 现已设置 PHP 版本。 可以确认以下设置：\r\n\r\n        PS C:\\> Get-AzureWebsite -Name {app-name} | findstr PhpVersion\r\n\r\n### <a name=\"azure-command-line-interface-linux-mac-windows\"></a>Azure 命令行界面（Linux、Mac、Windows）\r\n若要使用 Azure 命令行界面，必须已在计算机上安装 **Node.js**。\r\n\r\n1. 打开终端，并登录到帐户。\r\n\r\n        azure login -e AzureChinaCloud\r\n2. 设置 Web 应用的 PHP 版本。\r\n\r\n        azure site set --php-version {5.5 | 5.6 | 7.0} {app-name}\r\n\r\n3. 现已设置 PHP 版本。 可以确认以下设置：\r\n\r\n        azure site show {app-name}\r\n\r\n> [!NOTE] \r\n> 等效于上述设置的 [Azure CLI 2.0 ](https://github.com/Azure/azure-cli)命令为：\r\n>\r\n>\r\n\r\n    az login\r\n    az appservice web config update --php-version {5.5 | 5.6 | 7.0} -g {resource-group-name} -n {app-name}\r\n    az appservice web config show -g {resource-group-name} -n {app-name}\r\n\r\n[!INCLUDE [azure-cli-2-azurechinacloud-environment-parameter](../../includes/azure-cli-2-azurechinacloud-environment-parameter.md)]\r\n\r\n## <a name=\"how-to-change-the-built-in-php-configurations\"></a>如何：更改内置 PHP 配置\r\n对于任何内置 PHP 运行时，都可以通过执行以下步骤更改任何配置选项。 （有关 php.ini 指令的信息，请参阅 [php.ini 指令的列表]。）\r\n\r\n### <a name=\"changing-phpiniuser-phpiniperdir-phpiniall-configuration-settings\"></a>更改 PHP\\_INI\\_USER、PHP\\_INI\\_PERDIR、PHP\\_INI\\_ALL 配置设置\r\n1. 将 [.user.ini] 文件添加到根目录。\r\n2. 使用会在 `php.ini` 文件中使用的语法，将配置设置添加到 `.user.ini` 文件。 例如，如果希望启用 `display_errors` 设置，并将 `upload_max_filesize` 设置设为 10 分钟，则 `.user.ini` 文件应包含以下文本：\r\n\r\n        ; Example Settings\r\n        display_errors=On\r\n        upload_max_filesize=10M\r\n\r\n        ; OPTIONAL: Turn this on to write errors to d:\\home\\LogFiles\\php_errors.log\r\n        ; log_errors=On\r\n\t\r\n3. 部署 Web 应用。\r\n4. 重新启动 Web 应用。 （需要进行重新启动，因为 PHP 读取 `.user.ini` 文件的频率受 `user_ini.cache_ttl` 设置的约束，该设置是一个系统级别设置且默认值为 300 秒（5 分钟）。 重新启动 Web 应用会强制 PHP 读取 `.user.ini` 文件中的新设置。）\r\n\r\n作为使用 `.user.ini` 文件的替代方法，可以在脚本中使用 [ini_set()] 函数来设置不是系统级别指令的配置选项。\r\n\r\n### <a name=\"changing-phpinisystem-configuration-settings\"></a>更改 PHP\\_INI\\_SYSTEM 配置设置\r\n1. 向 Web 应用添加一个键为 `PHP_INI_SCAN_DIR` 且值为 `d:\\home\\site\\ini` 的应用设置\r\n2. 使用 Kudu 控制器 (http://&lt;site-name&gt;.scm.azurewebsite.net) 在 `d:\\home\\site\\ini` 目录中创建一个 `settings.ini` 文件。\r\n3. 使用要在 php.ini 文件中使用的语法，将配置设置添加到 `settings.ini` 文件。 例如，如果希望将 `curl.cainfo` 设置指向 `*.crt` 文件并将“wincache.maxfilesize”设置为 512K，则 `settings.ini` 文件应包含以下文本：\r\n\r\n        ; Example Settings\r\n        curl.cainfo=\"%ProgramFiles(x86)%\\Git\\bin\\curl-ca-bundle.crt\"\r\n        wincache.maxfilesize=512\r\n\t\r\n4. 重新启动 Web 应用以加载更改。\r\n\r\n## <a name=\"how-to-enable-extensions-in-the-default-php-runtime\"></a>如何：在默认 PHP 运行时中启用扩展\r\n如上一部分所述，查看默认 PHP 版本、其默认配置以及已启用的扩展的最佳方式是部署一个调用 [phpinfo()] 的脚本。 若要启用其他扩展，请执行下列步骤：\r\n\r\n### <a name=\"configure-via-ini-settings\"></a>通过 ini 设置进行配置\r\n1. 将 `ext` 目录添加到 `d:\\home\\site` 目录。\r\n2. 将 `.dll` 扩展文件置于 `ext` 目录中（例如 `php_xdebug.dll`）。 确保扩展与默认版本的 PHP兼容，并且是 VC9 版本且与非线程安全 (nts) 兼容。\r\n3. 向 Web 应用添加一个键为 `PHP_INI_SCAN_DIR` 且值为 `d:\\home\\site\\ini` 的应用设置\r\n4. 在 `d:\\home\\site\\ini` 中创建名为 `extensions.ini` 的 `ini` 文件。\r\n5. 使用要在 php.ini 文件中使用的语法，将配置设置添加到 `extensions.ini` 文件。 例如，如果你想要启用 MongoDB 和 XDebug 扩展，则 `extensions.ini` 文件包含此文本：\r\n\r\n        ; Enable Extensions\r\n        extension=d:\\home\\site\\ext\\php_mongo.dll\r\n        zend_extension=d:\\home\\site\\ext\\php_xdebug.dll\r\n\t\r\n6. 重新启动 Web 应用以加载更改。\r\n\r\n### <a name=\"configure-via-app-setting\"></a>通过应用设置进行配置\r\n1. 将 `bin` 目录添加到根目录。\r\n2. 将 `.dll` 扩展文件置于 `bin` 目录中（例如 `php_xdebug.dll`）。 确保扩展与默认版本的 PHP兼容，并且是 VC9 版本且与非线程安全 (nts) 兼容。\r\n3. 部署 Web 应用。\r\n4. 在 Azure 门户中浏览到 Web 应用，然后单击“设置”按钮。\r\n\r\n    ![Web 应用设置][settings-button]\r\n    \r\n5. 在“设置”边栏选项卡中选择“应用程序设置”，并滚动到“应用设置”部分。\r\n6. 在“应用设置”部分中，创建 **PHP_EXTENSIONS** 键。 此键的值将是相对于网站根目录的一个路径：**bin\\your-ext-file**。\r\n\r\n    ![启用应用程序设置中的扩展][php-extensions]\r\n    \r\n7. 单击“Web 应用设置”边栏选项卡顶部的“保存”按钮。\r\n\r\n    ![保存配置设置][save-button]\r\n\r\n通过使用 **PHP_ZENDEXTENSIONS** 键，还可以支持 Zend 扩展。 若要启用多个扩展，请包括应用设置值的 `.dll` 文件的逗号分隔列表。\r\n\r\n## <a name=\"how-to-use-a-custom-php-runtime\"></a>如何：使用自定义 PHP 运行时\r\n应用服务 Web 应用可以使用提供的 PHP 运行时（而非默认 PHP 运行时）来执行 PHP 脚本。 提供的运行时可由 `php.ini` 文件（也是你提供的）配置。 若要在 Web 应用中使用自定义 PHP 运行时，请执行下列步骤。\r\n\r\n1. 获取非线程安全、VC9 或 VC11 兼容版本的 PHP for Windows。 可在此处找到 PHP for Windows 最新版本： [http://windows.php.net/download/]。 较旧发行版位于以下位置中的存档中：[http://windows.php.net/downloads/releases/archives/]。\r\n2. 修改运行时的 `php.ini` 文件。 请注意，Web 应用将忽略作为任何仅在系统级别使用的指令的配置设置。 （有关仅在系统级别使用的指令的信息，请参阅 [php.ini 指令的列表]）。\r\n3. （可选）将扩展添加到 PHP 运行时并在 `php.ini` 文件中启用这些扩展。\r\n4. 将 `bin` 目录添加到根目录，并将包含 PHP 运行时的目录置于该目录中（例如 `bin\\php`）。\r\n5. 部署 Web 应用。\r\n6. 在 Azure 门户中浏览到 Web 应用，然后单击“设置”按钮。\r\n\r\n    ![Web 应用设置][settings-button]\r\n    \r\n7. 从“设置”边栏选项卡选择“应用程序设置”并滚动到“处理程序映射”部分。 将 `*.php` 添加到扩展字段，并将路径添加到 `php-cgi.exe` 可执行文件。 如果将 PHP 运行时放在应用程序根目录中的 `bin` 目录下，路径将为 `D:\\home\\site\\wwwroot\\bin\\php\\php-cgi.exe`。\r\n\r\n    ![指定处理程序映射中的处理程序][handler-mappings]\r\n    \r\n8. 单击“Web 应用设置”边栏选项卡顶部的“保存”按钮。\r\n\r\n    ![保存配置设置][save-button]\r\n\r\n<a name=\"composer\" />\r\n\r\n## <a name=\"how-to-enable-composer-automation-in-azure\"></a>如何：在 Azure 中启用编辑器自动化\r\n默认情况下，应用服务与 composer.json（如果 PHP 项目中有）不相关。 如果使用 [Git 部署](app-service-deploy-local-git.md)，则可以通过在 `git push` 期间启用编辑器扩展来启用 composer.json 处理。\r\n\r\n> [!NOTE]\r\n> 可以 [在这里为应用服务中的一流编辑器支持投票](https://feedback.azure.com/forums/169385-web-apps-formerly-websites/suggestions/6477437-first-class-support-for-composer-and-pip)！\r\n> \r\n> \r\n\r\n1. 在 [Azure 门户](https://portal.azure.cn)中，在 PHP Web 应用的边栏选项卡中，单击“工具” > “扩展”。\r\n\r\n    ![Azure 门户设置边栏选项卡，用于在 Azure 中启用编辑器自动化](./media/web-sites-php-configure/composer-extension-settings.png)\r\n2. 单击“添加”，并单击“编辑器”。\r\n\r\n    ![添加编辑器扩展，以在 Azure 中启用编辑器自动化](./media/web-sites-php-configure/composer-extension-add.png)\r\n3. 单击“确定”  接受法律条款。 再次单击“确定”  以添加该扩展。\r\n\r\n    **已安装扩展** 边栏选项卡将显示编辑器扩展。  \r\n    ![接受法律条款以在 Azure 中启用编辑器自动化](./media/web-sites-php-configure/composer-extension-view.png)\r\n    \r\n4. 现在，如上一节所示，执行 `git add`、`git commit` 和 `git push`。 现在会看到编辑器正在安装在 composer.json 中定义的依赖项。\r\n\r\n    ![在 Azure 中使用编辑器自动化的 Git 部署](./media/web-sites-php-configure/composer-extension-success.png)\r\n\r\n## <a name=\"next-steps\"></a>后续步骤\r\n有关详细信息，请参阅 [PHP 开发人员中心](/develop/php/)。\r\n\r\n[试用版]: https://www.azure.cn/pricing/1rmb-trial/\r\n[phpinfo()]: http://php.net/manual/en/function.phpinfo.php\r\n[select-php-version]: ./media/web-sites-php-configure/select-php-version.png\r\n[php.ini 指令的列表]: http://www.php.net/manual/en/ini.list.php\r\n[.user.ini]: http://www.php.net/manual/en/configuration.file.per-user.php\r\n[ini_set()]: http://www.php.net/manual/en/function.ini-set.php\r\n[application-settings]: ./media/web-sites-php-configure/application-settings.png\r\n[settings-button]: ./media/web-sites-php-configure/settings-button.png\r\n[save-button]: ./media/web-sites-php-configure/save-button.png\r\n[php-extensions]: ./media/web-sites-php-configure/php-extensions.png\r\n[handler-mappings]: ./media/web-sites-php-configure/handler-mappings.png\r\n[http://windows.php.net/download/]: http://windows.php.net/download/\r\n[http://windows.php.net/downloads/releases/archives/]: http://windows.php.net/downloads/releases/archives/\r\n[SETPHPVERCLI]: ./media/web-sites-php-configure/ChangePHPVersion-XPlatCLI.png\r\n[GETPHPVERCLI]: ./media/web-sites-php-configure/ShowPHPVersion-XplatCLI.png\r\n[SETPHPVERPS]: ./media/web-sites-php-configure/ChangePHPVersion-PS.png\r\n[GETPHPVERPS]: ./media/web-sites-php-configure/ShowPHPVersion-PS.png"}