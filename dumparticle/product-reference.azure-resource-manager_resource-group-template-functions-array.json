{"Title":"Azure Resource Manager 模板函数 - 数组和对象","Description":"介绍可在 Azure Resource Manager 模板中用来处理数组和对象的函数。","Content":"# <a name=\"array-and-object-functions-for-azure-resource-manager-templates\"></a>用于 Azure Resource Manager 模板的数组和对象函数 \r \r Resource Manager 提供以下用于处理数组和对象的函数。\r \r * [array](#array)\r * [coalesce](#coalesce)\r * [concat](#concat)\r * [contains](#contains)\r * [createArray](#createarray)\r * [empty](#empty)\r * [first](#first)\r * [intersection](#intersection)\r * [json](#json)\r * [last](#last)\r * [length](#length)\r * [max](#max)\r * [min](#min)\r * [range](#range)\r * [skip](#skip)\r * [take](#take)\r * [union](#union)\r \r 若要获取由某个值分隔的字符串值数组，请参阅 [split](resource-group-template-functions-string.md#split)。\r \r <a id=\"array\" />\r \r ## <a name=\"array\"></a>Array\r `array(convertToArray)`\r \r 将值转换为数组。\r \r ### <a name=\"parameters\"></a>Parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | convertToArray |是 |整数、字符串、数组或对象 |要转换为数组的值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 一个数组。\r \r ### <a name=\"example\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/array.json)演示如何对不同的类型使用 array 函数。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"intToConvert\": {\r             \"type\": \"int\",\r             \"defaultValue\": 1\r         },\r         \"stringToConvert\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"a\"\r         },\r         \"objectToConvert\": {\r             \"type\": \"object\",\r             \"defaultValue\": {\"a\": \"b\", \"c\": \"d\"}\r         }\r     },\r     \"resources\": [\r     ],\r     \"outputs\": {\r         \"intOutput\": {\r             \"type\": \"array\",\r             \"value\": \"[array(parameters('intToConvert'))]\"\r         },\r         \"stringOutput\": {\r             \"type\": \"array\",\r             \"value\": \"[array(parameters('stringToConvert'))]\"\r         },\r         \"objectOutput\": {\r             \"type\": \"array\",\r             \"value\": \"[array(parameters('objectToConvert'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | intOutput | Array | [1] |\r | stringOutput | Array | [\"a\"] |\r | objectOutput | Array | [{\"a\": \"b\", \"c\": \"d\"}] |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/array.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/array.json\r ```\r \r <a id=\"coalesce\" />\r \r ## <a name=\"coalesce\"></a>coalesce\r `coalesce(arg1, arg2, arg3, ...)`\r \r 从参数中返回第一个非 null 值。 空字符串、空数组和空对象不为 null。\r \r ### <a name=\"parameters\"></a>Parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | arg1 |是 |整数、字符串、数组或对象 |要测试是否为 null 的第一个值。 |\r | 其他参数 |否 |整数、字符串、数组或对象 |要测试是否为 null 的其他值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 第一个非 null 参数的值，可以是字符串、整数、数组或对象。 如果所有参数都为 null，则为 null。 \r \r ### <a name=\"example\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/coalesce.json)显示 coalesce 不同用法的输出。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"objectToTest\": {\r             \"type\": \"object\",\r             \"defaultValue\": {\r                 \"null1\": null, \r                 \"null2\": null,\r                 \"string\": \"default\",\r                 \"int\": 1,\r                 \"object\": {\"first\": \"default\"},\r                 \"array\": [1]\r             }\r         }\r     },\r     \"resources\": [\r     ],\r     \"outputs\": {\r         \"stringOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[coalesce(parameters('objectToTest').null1, parameters('objectToTest').null2, parameters('objectToTest').string)]\"\r         },\r         \"intOutput\": {\r             \"type\": \"int\",\r             \"value\": \"[coalesce(parameters('objectToTest').null1, parameters('objectToTest').null2, parameters('objectToTest').int)]\"\r         },\r         \"objectOutput\": {\r             \"type\": \"object\",\r             \"value\": \"[coalesce(parameters('objectToTest').null1, parameters('objectToTest').null2, parameters('objectToTest').object)]\"\r         },\r         \"arrayOutput\": {\r             \"type\": \"array\",\r             \"value\": \"[coalesce(parameters('objectToTest').null1, parameters('objectToTest').null2, parameters('objectToTest').array)]\"\r         },\r         \"emptyOutput\": {\r             \"type\": \"bool\",\r             \"value\": \"[empty(coalesce(parameters('objectToTest').null1, parameters('objectToTest').null2))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | stringOutput | String | 默认值 |\r | intOutput | int | 1 |\r | objectOutput | 对象 | {\"first\": \"default\"} |\r | arrayOutput | Array | [1] |\r | emptyOutput | Bool | True |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/coalesce.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/coalesce.json\r ```\r \r <a id=\"concat\" />\r \r ## <a name=\"concat\"></a>concat\r `concat(arg1, arg2, arg3, ...)`\r \r 合并多个数组并返回串联的数组，或合并多个字符串值并返回串联的字符串。 \r \r ### <a name=\"parameters\"></a>Parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | arg1 |是 |数组或字符串 |要串联的第一个数组或字符串。 |\r | 其他参数 |否 |数组或字符串 |按顺序排列的串联的其他数组或字符串。 |\r \r 此函数可以使用任意数量的参数，并可接受字符串或数组作为参数。\r \r ### <a name=\"return-value\"></a>返回值\r 由串联值构成的字符串或数组。\r \r ### <a name=\"example\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/concat-array.json)演示如何组合两个数组。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": { \r         \"firstArray\": { \r             \"type\": \"array\", \r             \"defaultValue\": [ \r                 \"1-1\", \r                 \"1-2\", \r                 \"1-3\" \r             ] \r         },\r         \"secondArray\": {\r             \"type\": \"array\", \r             \"defaultValue\": [ \r                 \"2-1\", \r                 \"2-2\",\r                 \"2-3\" \r             ] \r         }\r     },\r     \"resources\": [\r     ],\r     \"outputs\": {\r         \"return\": {\r             \"type\": \"array\",\r             \"value\": \"[concat(parameters('firstArray'), parameters('secondArray'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | return | Array | [\"1-1\", \"1-2\", \"1-3\", \"2-1\", \"2-2\", \"2-3\"] |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/concat-array.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/concat-array.json\r ```\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/concat-string.json)演示如何组合两个字符串值并返回串联的字符串。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"prefix\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"prefix\"\r         }\r     },\r     \"resources\": [],\r     \"outputs\": {\r         \"concatOutput\": {\r             \"value\": \"[concat(parameters('prefix'), '-', uniqueString(resourceGroup().id))]\",\r             \"type\" : \"string\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | concatOutput | String | prefix-5yj4yjf5mbg72 |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/concat-string.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/concat-string.json\r ```\r \r <a id=\"contains\" />\r \r ## <a name=\"contains\"></a>contains\r `contains(container, itemToFind)`\r \r 检查数组是否包含某个值、某个对象是否包含某个键，或者某个字符串是否包含某个子字符串。\r \r ### <a name=\"parameters\"></a>Parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | container |是 |数组、对象或字符串 |包含要查找的值的值。 |\r | itemToFind |是 |字符串或整数 |要查找的值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 如果找到该项，则为 **True**；否则为 **False**。\r \r ### <a name=\"example\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/contains.json)演示如何对不同的类型使用 contains：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"stringToTest\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"OneTwoThree\"\r         },\r         \"objectToTest\": {\r             \"type\": \"object\",\r             \"defaultValue\": {\"one\": \"a\", \"two\": \"b\", \"three\": \"c\"}\r         },\r         \"arrayToTest\": {\r             \"type\": \"array\",\r             \"defaultValue\": [\"one\", \"two\", \"three\"]\r         }\r     },\r     \"resources\": [\r     ],\r     \"outputs\": {\r         \"stringTrue\": {\r             \"type\": \"bool\",\r             \"value\": \"[contains(parameters('stringToTest'), 'e')]\"\r         },\r         \"stringFalse\": {\r             \"type\": \"bool\",\r             \"value\": \"[contains(parameters('stringToTest'), 'z')]\"\r         },\r         \"objectTrue\": {\r             \"type\": \"bool\",\r             \"value\": \"[contains(parameters('objectToTest'), 'one')]\"\r         },\r         \"objectFalse\": {\r             \"type\": \"bool\",\r             \"value\": \"[contains(parameters('objectToTest'), 'a')]\"\r         },\r         \"arrayTrue\": {\r             \"type\": \"bool\",\r             \"value\": \"[contains(parameters('arrayToTest'), 'three')]\"\r         },\r         \"arrayFalse\": {\r             \"type\": \"bool\",\r             \"value\": \"[contains(parameters('arrayToTest'), 'four')]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | stringTrue | Bool | True |\r | stringFalse | Bool | False |\r | objectTrue | Bool | True |\r | objectFalse | Bool | False |\r | arrayTrue | Bool | True |\r | arrayFalse | Bool | False |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/contains.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/contains.json\r ```\r \r <a id=\"createarray\" />\r \r ## <a name=\"createarray\"></a>createarray\r `createArray (arg1, arg2, arg3, ...)`\r \r 从参数创建数组。\r \r ### <a name=\"parameters\"></a>Parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | arg1 |是 |字符串、整数、数组或对象 |数组中的第一个值。 |\r | 其他参数 |否 |字符串、整数、数组或对象 |数组中的其他值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 一个数组。\r \r ### <a name=\"example\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/createarray.json)演示如何对不同的类型使用 createArra：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"objectToTest\": {\r             \"type\": \"object\",\r             \"defaultValue\": {\"one\": \"a\", \"two\": \"b\", \"three\": \"c\"}\r         },\r         \"arrayToTest\": {\r             \"type\": \"array\",\r             \"defaultValue\": [\"one\", \"two\", \"three\"]\r         }\r     },\r     \"resources\": [\r     ],\r     \"outputs\": {\r         \"stringArray\": {\r             \"type\": \"array\",\r             \"value\": \"[createArray('a', 'b', 'c')]\"\r         },\r         \"intArray\": {\r             \"type\": \"array\",\r             \"value\": \"[createArray(1, 2, 3)]\"\r         },\r         \"objectArray\": {\r             \"type\": \"array\",\r             \"value\": \"[createArray(parameters('objectToTest'))]\"\r         },\r         \"arrayArray\": {\r             \"type\": \"array\",\r             \"value\": \"[createArray(parameters('arrayToTest'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | stringArray | Array | [\"a\", \"b\", \"c\"] |\r | intArray | Array | [1, 2, 3] |\r | objectArray | Array | [{\"one\": \"a\", \"two\": \"b\", \"three\": \"c\"}] |\r | arrayArray | Array | [[\"one\", \"two\", \"three\"]] |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/createarray.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/createarray.json\r ```\r \r <a id=\"empty\" />\r \r ## <a name=\"empty\"></a>empty\r \r `empty(itemToTest)`\r \r 确定数组、对象或字符串是否为空。\r \r ### <a name=\"parameters\"></a>Parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | itemToTest |是 |数组、对象或字符串 |要检查是否为空的值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 如果该值为空，则返回 **True**；否则返回 **False**。\r \r ### <a name=\"example\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/empty.json)检查某个数组、对象和字符串是否为空。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"testArray\": {\r             \"type\": \"array\",\r             \"defaultValue\": []\r         },\r         \"testObject\": {\r             \"type\": \"object\",\r             \"defaultValue\": {}\r         },\r         \"testString\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"\"\r         }\r     },\r     \"resources\": [\r     ],\r     \"outputs\": {\r         \"arrayEmpty\": {\r             \"type\": \"bool\",\r             \"value\": \"[empty(parameters('testArray'))]\"\r         },\r         \"objectEmpty\": {\r             \"type\": \"bool\",\r             \"value\": \"[empty(parameters('testObject'))]\"\r         },\r         \"stringEmpty\": {\r             \"type\": \"bool\",\r             \"value\": \"[empty(parameters('testString'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | arrayEmpty | Bool | True |\r | objectEmpty | Bool | True |\r | stringEmpty | Bool | True |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/empty.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/empty.json\r ```\r \r <a id=\"first\" />\r \r ## <a name=\"first\"></a>first\r `first(arg1)`\r \r 返回数组的第一个元素，或字符串的第一个字符。\r \r ### <a name=\"parameters\"></a>Parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | arg1 |是 |数组或字符串 |要检索第一个元素或字符的值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 数组中第一个元素的类型（字符串、整数、数组或对象），或者字符串的第一个字符。\r \r ### <a name=\"example\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/first.json)演示如何对数组和字符串使用 first 函数。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"arrayToTest\": {\r             \"type\": \"array\",\r             \"defaultValue\": [\"one\", \"two\", \"three\"]\r         }\r     },\r     \"resources\": [\r     ],\r     \"outputs\": {\r         \"arrayOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[first(parameters('arrayToTest'))]\"\r         },\r         \"stringOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[first('One Two Three')]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | arrayOutput | String | one |\r | stringOutput | String | O |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/first.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/first.json\r ```\r \r <a id=\"intersection\" />\r \r ## <a name=\"intersection\"></a>intersection\r `intersection(arg1, arg2, arg3, ...)`\r \r 返回包含参数中通用元素的单个数组或对象。\r \r ### <a name=\"parameters\"></a>Parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | arg1 |是 |数组或对象 |用于查找通用元素的第一个值。 |\r | arg2 |是 |数组或对象 |用于查找通用元素的第二个值。 |\r | 其他参数 |否 |数组或对象 |用于查找通用元素的其他值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 包含通用元素的数组或对象。\r \r ### <a name=\"example\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/intersection.json)演示如何对数组和对象使用 intersection：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"firstObject\": {\r             \"type\": \"object\",\r             \"defaultValue\": {\"one\": \"a\", \"two\": \"b\", \"three\": \"c\"}\r         },\r         \"secondObject\": {\r             \"type\": \"object\",\r             \"defaultValue\": {\"one\": \"a\", \"two\": \"z\", \"three\": \"c\"}\r         },\r         \"firstArray\": {\r             \"type\": \"array\",\r             \"defaultValue\": [\"one\", \"two\", \"three\"]\r         },\r         \"secondArray\": {\r             \"type\": \"array\",\r             \"defaultValue\": [\"two\", \"three\"]\r         }\r     },\r     \"resources\": [\r     ],\r     \"outputs\": {\r         \"objectOutput\": {\r             \"type\": \"object\",\r             \"value\": \"[intersection(parameters('firstObject'), parameters('secondObject'))]\"\r         },\r         \"arrayOutput\": {\r             \"type\": \"array\",\r             \"value\": \"[intersection(parameters('firstArray'), parameters('secondArray'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | objectOutput | 对象 | {\"one\": \"a\", \"three\": \"c\"} |\r | arrayOutput | Array | [\"two\", \"three\"] |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/intersection.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/intersection.json\r ```\r \r ## <a name=\"json\"></a>json\r `json(arg1)`\r \r 返回一个 JSON 对象。\r \r ### <a name=\"parameters\"></a>parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | arg1 |是 |字符串 |要转换为 JSON 的值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 指定字符串中的 JSON 对象，或指定 null 时的空对象。\r \r ### <a name=\"example\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/json.json)演示如何对数组和对象使用 json 函数：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"resources\": [\r     ],\r     \"outputs\": {\r         \"jsonOutput\": {\r             \"type\": \"object\",\r             \"value\": \"[json('{\\\"a\\\": \\\"b\\\"}')]\"\r         },\r         \"nullOutput\": {\r             \"type\": \"bool\",\r             \"value\": \"[empty(json('null'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | jsonOutput | 对象 | {\"a\": \"b\"} |\r | nullOutput | 布尔 | True |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/json.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/json.json\r ```\r \r <a id=\"last\" />\r \r ## <a name=\"last\"></a>last\r `last (arg1)`\r \r 返回数组的最后一个元素，或字符串的最后一个字符。\r \r ### <a name=\"parameters\"></a>Parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | arg1 |是 |数组或字符串 |要检索最后一个元素或字符的值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 数组中最后一个元素的类型（字符串、整数、数组或对象），或者字符串的最后一个字符。\r \r ### <a name=\"example\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/last.json)演示如何对数组和字符串使用 last 函数。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"arrayToTest\": {\r             \"type\": \"array\",\r             \"defaultValue\": [\"one\", \"two\", \"three\"]\r         }\r     },\r     \"resources\": [\r     ],\r     \"outputs\": {\r         \"arrayOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[last(parameters('arrayToTest'))]\"\r         },\r         \"stringOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[last('One Two Three')]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | arrayOutput | String | three |\r | stringOutput | String | e |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/last.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/last.json\r ```\r \r <a id=\"length\" />\r \r ## <a name=\"length\"></a>length\r `length(arg1)`\r \r 返回数组中的元素数，或字符串中的字符数。\r \r ### <a name=\"parameters\"></a>Parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | arg1 |是 |数组或字符串 |用于获取元素数的数组，或用于获取字符数的字符串。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 一个整数。 \r \r ### <a name=\"example\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/length.json)演示如何对数组和字符串使用 length：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"arrayToTest\": {\r             \"type\": \"array\",\r             \"defaultValue\": [\r                 \"one\",\r                 \"two\",\r                 \"three\"\r             ]\r         },\r         \"stringToTest\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"One Two Three\"\r         }\r     },\r     \"resources\": [],\r     \"outputs\": {\r         \"arrayLength\": {\r             \"type\": \"int\",\r             \"value\": \"[length(parameters('arrayToTest'))]\"\r         },\r         \"stringLength\": {\r             \"type\": \"int\",\r             \"value\": \"[length(parameters('stringToTest'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | arrayLength | int | 3 |\r | stringLength | int | 13 |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/length.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/length.json\r ```\r \r 创建资源时，可在数组中使用此函数指定迭代数。 在以下示例中，参数 **siteNames** 引用创建网站时要使用的名称数组。\r \r ```json\r \"copy\": {\r     \"name\": \"websitescopy\",\r     \"count\": \"[length(parameters('siteNames'))]\"\r }\r ```\r \r 有关在数组中使用此函数的详细信息，请参阅 [Create multiple instances of resources in Azure Resource Manager](resource-group-create-multiple.md)（在 Azure Resource Manager 中创建多个资源实例）。\r \r <a id=\"max\" />\r \r ## <a name=\"max\"></a>max\r `max(arg1)`\r \r 返回整数数组或逗号分隔的整数列表中的最大值。\r \r ### <a name=\"parameters\"></a>Parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | arg1 |是 |整数数组或逗号分隔的整数列表 |要获取最大值的集合。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 表示最大值的整数。\r \r ### <a name=\"example\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/max.json)演示如何对整数数组和整数列表使用 max：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"arrayToTest\": {\r             \"type\": \"array\",\r             \"defaultValue\": [0,3,2,5,4]\r         }\r     },\r     \"resources\": [],\r     \"outputs\": {\r         \"arrayOutput\": {\r             \"type\": \"int\",\r             \"value\": \"[max(parameters('arrayToTest'))]\"\r         },\r         \"intOutput\": {\r             \"type\": \"int\",\r             \"value\": \"[max(0,3,2,5,4)]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | arrayOutput | int | 5 |\r | intOutput | int | 5 |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/max.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/max.json\r ```\r \r <a id=\"min\" />\r \r ## <a name=\"min\"></a>min\r `min(arg1)`\r \r 返回整数数组或逗号分隔的整数列表中的最小值。\r \r ### <a name=\"parameters\"></a>Parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | arg1 |是 |整数数组或逗号分隔的整数列表 |要获取最小值的集合。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 表示最小值的整数。\r \r ### <a name=\"example\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/min.json)演示如何对整数数组和整数列表使用 min：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"arrayToTest\": {\r             \"type\": \"array\",\r             \"defaultValue\": [0,3,2,5,4]\r         }\r     },\r     \"resources\": [],\r     \"outputs\": {\r         \"arrayOutput\": {\r             \"type\": \"int\",\r             \"value\": \"[min(parameters('arrayToTest'))]\"\r         },\r         \"intOutput\": {\r             \"type\": \"int\",\r             \"value\": \"[min(0,3,2,5,4)]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | arrayOutput | int | 0 |\r | intOutput | int | 0 |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/min.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/min.json\r ```\r \r <a id=\"range\" />\r \r ## <a name=\"range\"></a>range\r `range(startingInteger, numberOfElements)`\r \r 从起始整数创建整数数组并包含一些项。\r \r ### <a name=\"parameters\"></a>Parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | startingInteger |是 |int |数组中的第一个整数。 |\r | numberofElements |是 |int |数组中的整数个数。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 整数数组。\r \r ### <a name=\"example\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/range.json)演示如何使用 range 函数:\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"startingInt\": {\r             \"type\": \"int\",\r             \"defaultValue\": 5\r         },\r         \"numberOfElements\": {\r             \"type\": \"int\",\r             \"defaultValue\": 3\r         }\r     },\r     \"resources\": [],\r     \"outputs\": {\r         \"rangeOutput\": {\r             \"type\": \"array\",\r             \"value\": \"[range(parameters('startingInt'),parameters('numberOfElements'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | rangeOutput | Array | [5, 6, 7] |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/range.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/range.json\r ```\r \r <a id=\"skip\" />\r \r ## <a name=\"skip\"></a>skip\r `skip(originalValue, numberToSkip)`\r \r 返回一个数组，其中包含数组中指定数字后面的所有元素；或返回一个字符串，其中包含字符串中指定数后面的所有字符。\r \r ### <a name=\"parameters\"></a>Parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | originalValue |是 |数组或字符串 |用于跳过的数组或字符串。 |\r | numberToSkip |是 |int |要跳过的元素数或字符数。 如果此值小于或等于 0，则返回值中的所有元素或字符。 如果此值大于数组或字符串的长度，则返回空数组或字符串。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 数组或字符串。\r \r ### <a name=\"example\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/skip.json)跳过数组中指定数目的元素，以及字符串中指定数目的字符。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"testArray\": {\r             \"type\": \"array\",\r             \"defaultValue\": [\r                 \"one\",\r                 \"two\",\r                 \"three\"\r             ]\r         },\r         \"elementsToSkip\": {\r             \"type\": \"int\",\r             \"defaultValue\": 2\r         },\r         \"testString\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"one two three\"\r         },\r         \"charactersToSkip\": {\r             \"type\": \"int\",\r             \"defaultValue\": 4\r         }\r     },\r     \"resources\": [],\r     \"outputs\": {\r         \"arrayOutput\": {\r             \"type\": \"array\",\r             \"value\": \"[skip(parameters('testArray'),parameters('elementsToSkip'))]\"\r         },\r         \"stringOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[skip(parameters('testString'),parameters('charactersToSkip'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | arrayOutput | Array | [\"three\"] |\r | stringOutput | String | two three |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/skip.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/skip.json\r ```\r \r <a id=\"take\" />\r \r ## <a name=\"take\"></a>take\r `take(originalValue, numberToTake)`\r \r 返回一个数组，其中包含从数组开头位置算起的指定数目的元素；或返回一个字符串，其中包含从字符串开头位置算起的指定数目的字符。\r \r ### <a name=\"parameters\"></a>Parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | originalValue |是 |数组或字符串 |要从中提取元素的数组或字符串。 |\r | numberToTake |是 |int |要提取的元素或字符数。 如果此值为 0 或更小，则返回一个空数组或字符串。 如果此值大于给定数组或字符串的长度，则返回数组或字符串中的所有元素。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 数组或字符串。\r \r ### <a name=\"example\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/take.json)从数组中提取指定数目的元素，并从字符串中提取指定数目的字符。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"testArray\": {\r             \"type\": \"array\",\r             \"defaultValue\": [\r                 \"one\",\r                 \"two\",\r                 \"three\"\r             ]\r         },\r         \"elementsToTake\": {\r             \"type\": \"int\",\r             \"defaultValue\": 2\r         },\r         \"testString\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"one two three\"\r         },\r         \"charactersToTake\": {\r             \"type\": \"int\",\r             \"defaultValue\": 2\r         }\r     },\r     \"resources\": [],\r     \"outputs\": {\r         \"arrayOutput\": {\r             \"type\": \"array\",\r             \"value\": \"[take(parameters('testArray'),parameters('elementsToTake'))]\"\r         },\r         \"stringOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[take(parameters('testString'),parameters('charactersToTake'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | arrayOutput | Array | [\"one\", \"two\"] |\r | stringOutput | String | on |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/take.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/take.json\r ```\r \r <a id=\"union\" />\r \r ## <a name=\"union\"></a>union\r `union(arg1, arg2, arg3, ...)`\r \r 返回包含参数中所有元素的单个数组或对象。 重复的值或键仅包含一次。\r \r ### <a name=\"parameters\"></a>Parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | arg1 |是 |数组或对象 |用于联接元素的第一个值。 |\r | arg2 |是 |数组或对象 |用于联接元素的第二个值。 |\r | 其他参数 |否 |数组或对象 |用于联接元素的其他值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 数组或对象。\r \r ### <a name=\"example\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/union.json)演示如何对数组和对象使用 union：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"firstObject\": {\r             \"type\": \"object\",\r             \"defaultValue\": {\"one\": \"a\", \"two\": \"b\", \"three\": \"c1\"}\r         },\r         \"secondObject\": {\r             \"type\": \"object\",\r             \"defaultValue\": {\"three\": \"c2\", \"four\": \"d\", \"five\": \"e\"}\r         },\r         \"firstArray\": {\r             \"type\": \"array\",\r             \"defaultValue\": [\"one\", \"two\", \"three\"]\r         },\r         \"secondArray\": {\r             \"type\": \"array\",\r             \"defaultValue\": [\"three\", \"four\"]\r         }\r     },\r     \"resources\": [\r     ],\r     \"outputs\": {\r         \"objectOutput\": {\r             \"type\": \"object\",\r             \"value\": \"[union(parameters('firstObject'), parameters('secondObject'))]\"\r         },\r         \"arrayOutput\": {\r             \"type\": \"array\",\r             \"value\": \"[union(parameters('firstArray'), parameters('secondArray'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | objectOutput | 对象 | {\"one\": \"a\", \"two\": \"b\", \"three\": \"c2\", \"four\": \"d\", \"five\": \"e\"} |\r | arrayOutput | Array | [\"one\", \"two\", \"three\", \"four\"] |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/union.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/union.json\r ```\r \r ## <a name=\"next-steps\"></a>后续步骤\r * 有关 Azure Resource Manager 模板中各部分的说明，请参阅 [Authoring Azure Resource Manager templates](resource-group-authoring-templates.md)（创作 Azure Resource Manager 模板）。\r * 若要合并多个模板，请参阅[将链接的模板与 Azure Resource Manager 配合使用](resource-group-linked-templates.md)。\r * 若要在创建资源类型时迭代指定的次数，请参阅[在 Azure Resource Manager 中创建多个资源实例](resource-group-create-multiple.md)。\r * 若要查看如何部署已创建的模板，请参阅[使用 Azure Resource Manager 模板部署应用程序](resource-group-template-deploy.md)。\r \r <!--Update_Description: update meta properties, wording update-->"}