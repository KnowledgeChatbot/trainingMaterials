{"Title":"跨横向扩展的云数据库进行报告（预览）","Description":"如何对横向分区设置弹性查询","Content":"# <a name=\"reporting-across-scaled-out-cloud-databases-preview\"></a>跨横向扩展的云数据库进行报告（预览版）\r ![跨分片进行查询][1]\r \r 分片数据库跨横向扩展的数据层分布行。 所有分区（也称为横向分区）数据库的架构都是一样的。 使用弹性查询，可以创建跨分片数据库中的所有数据库的报表。\r \r 有关快速入门，请参阅[跨横向扩展的云数据库进行报告](sql-database-elastic-query-getting-started.md)。\r \r 对于非分片数据库，请参阅[跨具有不同架构的云数据库进行查询](sql-database-elastic-query-vertical-partitioning.md)。 \r \r ## <a name=\"prerequisites\"></a>先决条件\r * 使用弹性数据库客户端库创建分片映射。 请参阅[分片映射管理](sql-database-elastic-scale-shard-map-management.md)。 或者使用[弹性数据库工具入门](sql-database-elastic-scale-get-started.md)中的示例应用。\r * 另外，也可以参阅[将现有数据库迁移到横向扩展的数据库](sql-database-elastic-convert-to-use-elastic-tools.md)。\r * 用户必须拥有 ALTER ANY EXTERNAL DATA SOURCE 权限。 此权限包含在 ALTER DATABASE 权限中。\r * 引用基础数据源需要 ALTER ANY EXTERNAL DATA SOURCE 权限。\r \r ## <a name=\"overview\"></a>概述\r 这些语句在弹性查询数据库中创建元数据表示形式的分片数据层。 \r \r 1. [CREATE MASTER KEY](https://msdn.microsoft.com/library/ms174382.aspx)\r 2. [CREATE DATABASE SCOPED CREDENTIAL](https://msdn.microsoft.com/library/mt270260.aspx)\r 3. [CREATE EXTERNAL DATA SOURCE](https://msdn.microsoft.com/library/dn935022.aspx)\r 4. [CREATE EXTERNAL TABLE](https://msdn.microsoft.com/library/dn935021.aspx) \r \r ## <a name=\"11-create-database-scoped-master-key-and-credentials\"></a>1.1 创建数据库范围的主密钥和凭据\r 弹性查询使用此凭据连接到远程数据库。  \r \r ```\r CREATE MASTER KEY ENCRYPTION BY PASSWORD = 'password';\r CREATE DATABASE SCOPED CREDENTIAL <credential_name>  WITH IDENTITY = '<username>',  \r SECRET = '<password>'\r [;]\r ```\r > [!NOTE]\r > 请确保“\\<用户名\\>”中不包括任何“@servername”后缀。 \r > \r > \r \r ## <a name=\"12-create-external-data-sources\"></a>1.2 创建外部数据源\r 语法：\r \r ```\r <External_Data_Source> ::=    \r CREATE EXTERNAL DATA SOURCE <data_source_name> WITH                                            \r         (TYPE = SHARD_MAP_MANAGER,\r                    LOCATION = '<fully_qualified_server_name>',\r         DATABASE_NAME = ‘<shardmap_database_name>',\r         CREDENTIAL = <credential_name>, \r         SHARD_MAP_NAME = ‘<shardmapname>’ \r                ) [;] \r ```\r \r ### <a name=\"example\"></a>示例 \r \r ```\r CREATE EXTERNAL DATA SOURCE MyExtSrc \r WITH \r ( \r     TYPE=SHARD_MAP_MANAGER,\r     LOCATION='myserver.database.chinacloudapi.cn', \r     DATABASE_NAME='ShardMapDatabase', \r     CREDENTIAL= SMMUser, \r     SHARD_MAP_NAME='ShardMap' \r );\r ```\r \r 检索当前外部数据源的列表： \r \r ```\r select * from sys.external_data_sources; \r ```\r \r 外部数据源引用分片映射。 然后，弹性查询使用外部数据源和基础分片映射枚举参与数据层的数据库。 在弹性查询处理过程中，相同的凭据用于读取分片映射和访问上分片的数据。 \r \r ## <a name=\"13-create-external-tables\"></a>1.3 创建外部表 \r \r 语法：  \r \r ```\r CREATE EXTERNAL TABLE [ database_name . [ schema_name ] . | schema_name. ] table_name  \r     ( { <column_definition> } [ ,...n ])     \r     { WITH ( <sharded_external_table_options> ) }\r ) [;]  \r \r <sharded_external_table_options> ::= \r   DATA_SOURCE = <External_Data_Source>,       \r   [ SCHEMA_NAME = N'nonescaped_schema_name',] \r   [ OBJECT_NAME = N'nonescaped_object_name',] \r   DISTRIBUTION = SHARDED(<sharding_column_name>) | REPLICATED |ROUND_ROBIN\r ```\r \r **示例**\r \r ```\r CREATE EXTERNAL TABLE [dbo].[order_line]( \r      [ol_o_id] int NOT NULL, \r      [ol_d_id] tinyint NOT NULL,\r      [ol_w_id] int NOT NULL, \r      [ol_number] tinyint NOT NULL, \r      [ol_i_id] int NOT NULL, \r      [ol_delivery_d] datetime NOT NULL, \r      [ol_amount] smallmoney NOT NULL, \r      [ol_supply_w_id] int NOT NULL, \r      [ol_quantity] smallint NOT NULL, \r      [ol_dist_info] char(24) NOT NULL \r ) \r \r WITH \r ( \r     DATA_SOURCE = MyExtSrc, \r      SCHEMA_NAME = 'orders', \r      OBJECT_NAME = 'order_details', \r     DISTRIBUTION=SHARDED(ol_w_id)\r ); \r ```\r \r 从当前数据库中检索外部表的列表： \r \r ```\r SELECT * from sys.external_tables; \r ```\r \r 要删除外部表：\r \r ```\r DROP EXTERNAL TABLE [ database_name . [ schema_name ] . | schema_name. ] table_name[;]\r ```\r \r ### <a name=\"remarks\"></a>备注\r DATA\\_SOURCE 子句定义了用于外部表的外部数据源（分片映射）。  \r \r SCHEMA\\_NAME 和 OBJECT\\_NAME 子句将外部表定义映射到不同架构的表。 如果省略，则假定远程对象的架构是“dbo”，并假定其名称与所定义的外部表名称相同。 如果远程表的名称已在你要在其中创建外部表的数据库中使用，那么该做法很有用。 例如，你想要定义外部表以在横向扩展的数据层上获取目录视图或 DMV 的聚合视图。 由于目录视图和 DMV 已在本地存在，因此不能在外部表定义中使用其名称。 而是改用不同名称，并在 SCHEMA\\_NAME 和/或 OBJECT\\_NAME 子句中使用目录视图或 DMV 的名称。 （请参阅下面的示例。） \r \r DISTRIBUTION 子句指定用于此表的数据分布。 查询处理器利用 DISTRIBUTION 子句中提供的信息来构建最有效的查询计划。  \r \r 1. **SHARDED** 表示数据在各数据库之间横向分区。 数据分布的分区键为 **<sharding_column_name>** 参数。\r 2. **REPLICATED** 表示每个数据库都存在表的相同副本。 你要负责确保各数据库上的副本是相同的。\r 3. **ROUND\\_ROBIN** 表示使用依赖于应用程序的分布方法对表进行横向分区。 \r \r **数据层引用**：外部表 DDL 引用外部数据源。 外部数据源指定分片映射，后者为外部表提供在数据层中找到所有数据库所需的信息。 \r \r ### <a name=\"security-considerations\"></a>安全注意事项\r 有权访问外部表的用户在使用外部数据源定义中提供的凭据时自动获得对基础远程表的访问权。 避免通过外部数据源的凭据进行不必要的权限提升。 将外部表当作常规表，在其中使用 GRANT 或 REVOKE。  \r \r 定义外部数据源和外部表后，可以对外部表使用完整的 T-SQL。\r \r ## <a name=\"example-querying-horizontal-partitioned-databases\"></a>示例：查询横向分区的数据库\r 下面的查询在仓库、订单和订单行之间执行三向联接，并使用多个聚合和选择性筛选器。 它假定 (1) 执行横向分区（分片），(2) 仓库、订单和订单行按仓库 ID 列进行分片，弹性查询可以在分片上并置联接，以及并行处理分片上成本较高部分的查询。 \r \r ```\r select  \r      w_id as warehouse,\r      o_c_id as customer,\r      count(*) as cnt_orderline,\r      max(ol_quantity) as max_quantity,\r      avg(ol_amount) as avg_amount, \r      min(ol_delivery_d) as min_deliv_date\r from warehouse \r join orders \r on w_id = o_w_id\r join order_line \r on o_id = ol_o_id and o_w_id = ol_w_id \r where w_id > 100 and w_id < 200 \r group by w_id, o_c_id \r ```\r \r ## <a name=\"stored-procedure-for-remote-t-sql-execution-spexecuteremote\"></a>用于远程 T-SQL 执行的存储过程：sp\\_execute_remote\r \r 弹性查询还引入了一个存储过程，以便提供对分片的直接访问。 该存储过程名为 [sp\\_execute \\_remote](https://msdn.microsoft.com/zh-cn/library/mt703714)，可用于执行远程存储过程或远程数据库上的 T-SQL 代码。 它采用了以下参数： \r \r * 数据源名称 (nvarchar)：RDBMS 类型的外部数据源名称。 \r * 查询 (nvarchar)：要在每个分片上执行的 T-SQL 查询。 \r * 参数声明 (nvarchar) - 可选：在查询参数（如 sp_executesql）中使用的参数的字符串（包含数据类型定义）。 \r * 参数值列表 - 可选：以逗号分隔的参数值（如 sp_executesql）的列表。\r \r sp\\_execute\\_remote 使用调用参数中提供的外部数据源在远程数据库上执行给定的 T-SQL 语句。 它使用外部数据源的凭据连接到分片映射管理器数据库和远程数据库。  \r \r 示例： \r \r ```\r EXEC sp_execute_remote\r     N'MyExtSrc',\r     N'select count(w_id) as foo from warehouse' \r ```\r \r ## <a name=\"connectivity-for-tools\"></a>工具的连接\r 可以使用常规 SQL Server 连接字符串将应用程序、BI 和数据集成工具连接到具有外部表定义的数据库。 请确保支持将 SQL Server 用作工具的数据源。 然后引用弹性查询数据库就像连接到工具的任何其他 SQL Server 数据库一样，并像使用本地表一样从工具或应用程序使用外部表。 \r \r ## <a name=\"best-practices\"></a>最佳实践\r * 确保已向弹性查询终结点数据库授予通过 SQL 数据库防火墙访问分片映射数据库和所有分片的权限。  \r * 验证或强制执行由外部表定义的数据分布。 如果实际的数据分布不同于表定义中指定的分布，你的查询可能会产生意外的结果。 \r * 当分片键上的谓词允许安全地从处理中排除某些分片时，弹性查询当前不执行分片消除。\r * 弹性查询最适合大部分计算可以在分片上完成的查询。 使用可以在分片或联接上通过分区键求值的选择性筛选器谓词（可以在所有分片上以分区对齐方式执行），通常可以获得最佳查询性能。 其他查询模式可能需要从分片将大量数据加载到头节点并且可能会执行效果不佳\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r * 有关弹性查询的概述，请参阅[弹性查询概述](sql-database-elastic-query-overview.md)。\r * 有关垂直分区的教程，请参阅[跨数据库查询（垂直分区）入门](sql-database-elastic-query-getting-started-vertical.md)。\r * 有关垂直分区数据的语法和示例查询，请参阅[查询垂直分区数据](sql-database-elastic-query-vertical-partitioning.md)\r * 有关水平分区（分片）的教程，请参阅[弹性查询入门 - 水平分区（分片）](sql-database-elastic-query-getting-started.md)。\r * 请参阅 [sp\\_execute \\_remote](https://msdn.microsoft.com/library/mt703714)，了解在单个远程 Azure SQL 数据库或在水平分区方案中用作分片的一组数据库中执行 Transact-SQL 语句的存储过程。\r \r <!--Image references-->\r [1]: ./media/sql-database-elastic-query-horizontal-partitioning/horizontalpartitioning.png\r <!--anchors-->"}