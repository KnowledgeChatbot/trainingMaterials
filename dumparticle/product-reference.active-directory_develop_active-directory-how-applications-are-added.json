{"Title":"如何将应用程序添加到 Azure Active Directory。","Description":"本文介绍如何将应用程序添加到 Azure Active Directory 的实例。","Content":"# <a name=\"how-and-why-applications-are-added-to-azure-ad\"></a>如何以及为何将应用程序添加到 Azure AD\r 在 Azure Active Directory 实例中查看应用程序列表时，最初让令人费解的事情之一是不知道应用程序来自何处，以及它们为何会出现在那里。  本文将全面概述如何在目录中表示应用程序，并提供上下文帮助你了解应用程序如何进入目录。\r \r ## <a name=\"what-services-does-azure-ad-provide-to-applications\"></a>Azure AD 为应用程序提供哪些服务？\r 应用程序会添加到 Azure AD，以利用 Azure AD 提供的一个或多个服务。  这些服务包括：\r \r - 应用程序身份验证和授权\r - 用户身份验证和授权\r - 使用联合身份验证或密码进行单一登录 (SSO)\r - 用户设置和同步\r - 基于角色的访问控制；使用目录定义应用程序角色，以便在应用程序中执行基于角色的授权检查。\r - oAuth 授权服务（Office 365 和其他 Microsoft 应用程序使用这些服务来授予对 API/资源的访问权限。）\r - 应用程序发布和代理；将应用程序从专用网络发布到 Internet\r \r ## <a name=\"how-are-applications-represented-in-the-directory\"></a>如何在目录中表示应用程序？\r Azure AD 中的应用程序是使用 2 个对象表示的：应用程序对象和服务主体对象。  “home”/“owner”或“publishing”目录中注册了一个应用程序对象；此外，有一个或多个服务主体对象表示运行应用程序的每个目录中的应用程序。  \r \r 应用程序对象向 Azure AD（多租户服务）描述应用，可能包括下列任何项：（注意：此列表并不完整。）\r \r - 名称、徽标和发布者\r - 机密（用于对应用进行身份验证的对称和/或非对称密钥）\r - API 依赖关系 (oAuth)\r - 发布的 API/资源/作用域 (oAuth)\r - 应用角色 (RBAC)\r - SSO 元数据和配置 (SSO)\r - 用户设置元数据和配置\r - 代理元数据和配置\r \r 服务主体是运行应用程序的每个目录（包括其主目录）中的应用程序记录。  服务主体：\r \r - 通过应用程序 id 属性向后引用应用程序对象\r - 记录本地用户和组的应用程序角色分配\r - 记录授予应用程序的本地用户和管理员权限\r   - 例如：应用程序访问特定用户电子邮件的权限\r - 记录本地策略，包括条件性访问策略\r - 记录应用程序的本地替代设置\r   - 声明转换规则\r   - 属性映射（用户预配）\r   - 租户特定的应用角色（如果应用支持自定义角色）\r   - 名称/徽标\r \r ### <a name=\"a-diagram-of-application-objects-and-service-principals-across-directories\"></a>不同目录中应用程序对象和服务主体的关系图\r ![演示应用程序对象和服务主体如何与 Azure AD 实例共存的关系图。][apps_service_principals_directory]\r \r 从上图可以看出，  Microsoft 中有两个用于发布应用程序的目录（左侧）。\r \r - 一个用于 Microsoft 应用（Microsoft 服务目录）\r - 一个用于预先集成的第三方应用（应用库目录）\r \r 与 Azure AD 集成的应用程序发布者/供应商需要有一个发布目录。  （某个 SAAS 目录）。\r \r 自己添加的应用程序包括：\r \r - 你开发的应用（与 AAD 集成）\r - 为了进行单一登录而连接的应用程序\r - 使用 Azure AD 应用程序代理发布的应用程序。\r \r ### <a name=\"a-couple-of-notes-and-exceptions\"></a>说明和例外情况\r - 并非所有服务主体都会往后指向应用程序对象。  是吗？ 最初生成 Azure AD 时，提供给应用程序的服务存在很多的限制，使用服务主体便足以建立应用程序标识。  原始服务主体在形式上更接近于 Windows Server Active Directory 服务帐户。  出于此原因，仍可以使用 Azure AD PowerShell 创建服务主体，而无需首先创建应用程序对象。  Graph API 在创建服务主体之前需要一个应用程序对象。\r - 上述信息当前并非全部都是以编程方式公开的。  只能在 UI 中使用以下功能：\r   - 声明转换规则\r   - 属性映射（用户预配）\r - 有关服务主体和应用程序对象的详细信息，请参阅 Azure AD Graph REST API 参考文档。  *提示*：目前，阅读 Azure AD Graph API 文档是获得 Azure AD 架构参考信息的最佳捷径。  \r   - [应用程序](https://msdn.microsoft.com/library/azure/ad/graph/api/entity-and-complex-type-reference#application-entity)\r   - [服务主体](https://msdn.microsoft.com/library/azure/ad/graph/api/entity-and-complex-type-reference#serviceprincipal-entity)\r \r ## <a name=\"how-are-apps-added-to-my-azure-ad-instance\"></a>如何将应用程序添加到 Azure AD 实例？\r 可以使用多种方法将应用程序添加到 Azure AD：\r \r - 从 [Azure Active Directory 应用库](https://azure.microsoft.com/updates/azure-active-directory-over-1000-apps/)添加应用\r - 注册/登录与 Azure Active Directory 集成的第三方应用（例如：[Smartsheet](https://app.smartsheet.com/b/home) 或 [DocuSign](https://www.docusign.net/member/MemberLogin.aspx)）\r   - 在注册/登录期间，系统会要求用户向应用程序授予访问其配置文件的权限和其他权限。  第一个授权者会导致生成一个服务主体，表示要添加到目录中的应用程序。\r - 注册/登录到 [Office 365](http://products.office.com/)\r   - 当你订阅 Office 365 或开始试用时，会在目录中创建一个或多个服务主体，表示传递所有与 Office 365 关联的功能的各种服务。\r   - 某些 Office 365 服务（如 SharePoint）会不断地创建服务主体，以允许在组件（包括工作流）之间进行安全通信。\r - 在 Azure 管理门户中添加正在开发的应用，请参阅：https://msdn.microsoft.com/library/azure/dn132599.aspx\r - 使用 Visual Studio 添加你正在开发的应用程序，具体请参阅：\r   - [ASP.Net 身份验证方法](http://www.asp.net/visual-studio/overview/2013/creating-web-projects-in-visual-studio#orgauthoptions)\r   - [连接的服务](http://blogs.msdn.com/b/visualstudio/archive/2014/11/19/connecting-to-cloud-services.aspx)\r - 添加要使用的应用程序，以使用 [Azure AD 应用程序代理](https://msdn.microsoft.com/library/azure/dn768219.aspx)\r - 连接应用程序，以使用使用 SAML 或密码 SSO 进行单一登录\r - 其他许多功能包括 Azure 中的各种开发人员体验，以及开发人员中心的 API 资源管理器体验\r \r ## <a name=\"who-has-permission-to-add-applications-to-my-azure-ad-instance\"></a>谁有权向我的 Azure AD 实例添加应用程序？\r 只有全局管理员可以：\r \r - 从 Azure AD 应用库添加应用（预先集成的第三方应用）\r - 使用 Azure AD 应用程序代理发布应用程序\r \r 目录中的所有用户都有权添加他们正在开发的应用程序，并决定要共享哪些应用程序/授予对其组织数据的访问权限。  *请记住，用户注册/登录应用程序和授权可能会导致创建服务主体。*\r \r 一开始这听上去可能令人忧虑，不过，请记住以下事项：\r \r - 多年以来，应用程序一直可以利用 Windows Server Active Directory 进行用户身份验证，而无需在目录中注册/记录应用程序。  现在，组织改进了可见性，完全知道有多少应用程序正在使用目录以及为何使用目录。\r - 无需管理员驱动的应用程序发布/注册过程。  过去，在使用 Active Directory 联合身份验证服务时，管理员可能必须代表开发人员添加一个应用程序作为信赖方。  现在，开发人员可以自行解决问题。\r - 用户为了业务目的使用其组织帐户登录/注册应用程序是一个好现象。  如果他们以后离开了组织，他们无法访问所用应用程序中的帐户。\r - 记录与哪个应用程序共享了哪些数据是一个很好的做法。  数据的流动性比以往更明显，因此，明确记录哪个用户与哪些应用程序共享了哪些数据会很有用。\r - 为 oAuth 使用 Azure AD 的应用程序会明确决定用户可向应用程序授予哪些权限，以及哪些权限需要管理员的许可。  不言而喻，只有管理员才能授予较大范围的更重要的权限。\r - 添加应用程序和允许应用程序访问其数据的用户会添加到审核事件，以便可以在 Azure 管理门户中查看审核报告，以确定应用程序是如何添加到目录中的。\r \r **注意：** *到目前为止，Microsoft 本身已使用默认配置运行了好几个月。*\r \r 总而言之，我们可以防止目录中的用户添加应用程序，并可防止他们通过在 Azure 管理门户中修改目录配置，来决定要与应用程序共享哪些信息。  可以在 Azure 管理门户中通过目录的“配置”选项卡访问以下配置。\r \r ![用于配置集成应用程序设置的 UI 屏幕截图][app_settings]\r \r <!--Every topic should have next steps and links to the next logical set of content to keep the customer engaged-->\r ## <a name=\"next-steps\"></a>后续步骤\r 了解有关如何将应用程序添加到 Azure AD 以及如何为应用程序配置服务的详细信息。\r \r - 开发人员：[了解如何将应用程序与 AAD 集成](https://msdn.microsoft.com/library/azure/dn151122.aspx)\r - 开发人员：[在 GitHub 上查看与 Azure Active Directory 集成的应用的示例代码](https://github.com/AzureADSamples)\r - 开发人员和 IT 专业人员：[查看 Azure Active Directory Graph API 的 REST API 文档](https://msdn.microsoft.com/library/azure/hh974478.aspx)\r - IT 专业人员： [了解如何从应用程序库使用 Azure Active Directory 预先集成的应用程序](https://msdn.microsoft.com/library/azure/dn308590.aspx)\r - IT 专业人员： [查找有关配置特定预先集成应用程序的教程](https://msdn.microsoft.com/library/azure/dn893637.aspx)\r - IT 专业人员： [了解如何使用 Azure Active Directory 应用程序代理发布应用程序](https://msdn.microsoft.com/library/azure/dn768219.aspx)\r \r ## <a name=\"see-also\"></a>另请参阅\r - [有关 Azure Active Directory 中应用程序管理的文章索引](../active-directory-apps-index.md)\r \r <!--Image references-->\r [apps_service_principals_directory]: ./media/active-directory-how-applications-are-added/HowAppsAreAddedToAAD.jpg\r [app_settings]: ./media/active-directory-how-applications-are-added/IntegratedAppSettings.jpg\r \r <!--Update_Description: link update -->\r "}