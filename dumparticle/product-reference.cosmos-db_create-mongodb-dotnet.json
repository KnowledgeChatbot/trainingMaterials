{"Title":"Azure Cosmos DB：使用 .NET 和 MongoDB API 生成 Web 应用","Description":"演示一个可以用来连接到 Azure Cosmos DB MongoDB API 并进行查询的 .NET 代码示例","Content":"# <a name=\"azure-cosmos-db-build-a-mongodb-api-web-app-with-net-and-the-azure-portal\"></a>Azure Cosmos DB：使用 .NET 和 Azure 门户生成 MongoDB API Web 应用\r \r Azure Cosmos DB 由 世纪互联 提供，是多个区域分布的多模型数据库服务。 可快速创建和查询文档、键/值数据库，所有这些都受益于 Azure Cosmos DB 核心的多个区域分布和水平缩放功能。 \r <!-- Notice: 全球分布 to 多个区域分布 -->\r \r 本快速入门教程演示如何使用 Azure 门户创建 Azure Cosmos DB 帐户、文档数据库和集合。 然后生成并部署基于 [MongoDB .NET 驱动程序](https://docs.mongodb.com/ecosystem/drivers/csharp/)构建的“任务列表”Web 应用。 \r \r ## <a name=\"prerequisites\"></a>先决条件\r \r 如果尚未安装 Visual Studio 2017，可以下载并使用**免费的** [Visual Studio 2017 Community Edition](https://www.visualstudio.com/downloads/)。 在安装 Visual Studio 的过程中，请确保启用“Azure 开发”。\r \r [!INCLUDE [quickstarts-free-trial-note](../../includes/quickstarts-free-trial-note.md)] \r [!INCLUDE [cosmos-db-emulator-mongodb](../../includes/cosmos-db-emulator-mongodb.md)]\r \r <a name=\"create-account\"></a>\r ## <a name=\"create-a-database-account\"></a>创建数据库帐户\r \r [!INCLUDE [cosmos-db-create-dbaccount](../../includes/cosmos-db-create-dbaccount-mongodb.md)]\r \r ## <a name=\"clone-the-sample-application\"></a>克隆示例应用程序\r \r 现在让我们从 github 克隆 MongoDB API 应用、设置连接字符串，并运行。 你会看到以编程方式处理数据是多么容易。 \r \r 1. 打开 git 终端窗口（例如 git bash）并使用 `cd` 切换到工作目录。  \r \r 2. 运行下列命令，克隆示例存储库。 \r \r     ```bash\r     git clone https://github.com/Azure-Samples/azure-cosmos-db-mongodb-dotnet-getting-started.git\r     ```\r \r 3. 然后在 Visual Studio 中打开解决方案文件。 \r \r ## <a name=\"review-the-code\"></a>查看代码\r \r 快速查看应用中发生的情况。 打开 **DAL** 目录下的 **Dal.cs** 文件，会发现以下代码行创建 Azure Cosmos DB 资源。 \r \r * 初始化 Mongo 客户端。\r \r     ```cs\r         MongoClientSettings settings = new MongoClientSettings();\r         settings.Server = new MongoServerAddress(host, 10255);\r         settings.UseSsl = true;\r         settings.SslSettings = new SslSettings();\r         settings.SslSettings.EnabledSslProtocols = SslProtocols.Tls12;\r \r         MongoIdentity identity = new MongoInternalIdentity(dbName, userName);\r         MongoIdentityEvidence evidence = new PasswordEvidence(password);\r \r         settings.Credentials = new List<MongoCredential>()\r         {\r             new MongoCredential(\"SCRAM-SHA-1\", identity, evidence)\r         };\r \r         MongoClient client = new MongoClient(settings);\r     ```\r \r * 检索数据库和集合。\r \r     ```cs\r     private string dbName = \"Tasks\";\r     private string collectionName = \"TasksList\";\r \r     var database = client.GetDatabase(dbName);\r     var todoTaskCollection = database.GetCollection<MyTask>(collectionName);\r     ```\r \r * 检索所有文档。\r \r     ```cs\r     collection.Find(new BsonDocument()).ToList();\r     ```\r \r ## <a name=\"update-your-connection-string\"></a>更新连接字符串\r \r 现在返回到 Azure 门户，获取连接字符串信息，并将其复制到应用。\r \r 1. 在 [Azure 门户](http://portal.azure.cn/)的 Azure Cosmos DB 帐户的左侧导航栏中，单击“连接字符串”，然后单击“读写密钥”。 使用屏幕右侧的复制按钮将用户名、密码和主机复制到下一步的 Dal.cs 文件中。\r \r 2. 打开 **DAL** 目录中的 **Dal.cs** 文件。 \r \r 3. 从门户中复制“用户名”值（使用“复制”按钮），并在 **Dal.cs** 文件中将其设为“用户名”的值。 \r \r 4. 然后从门户复制“主机”值，并在 **Dal.cs** 文件中将其设为“主机”的值。 \r \r 5. 最后从门户复制“密码”值，并在 **Dal.cs** 文件中将其设为“密码”的值。 \r \r 现已使用与 Azure Cosmos DB 进行通信所需的所有信息更新应用。 \r \r ## <a name=\"run-the-web-app\"></a>运行 Web 应用\r \r 1. 在 Visual Studio 中，右键单击解决方案资源管理器中的项目，并单击“管理 NuGet 包”。 \r \r 2. 在 NuGet“浏览”框中，键入 *MongoDB.Driver*。\r \r 3. 从结果中安装“MongoDB.Driver”库。 这会安装 MongoDB.Driver 包以及所有依赖项。\r \r 4. 单击 Ctrl+F5 运行应用程序。 你的应用会显示在浏览器中。 \r \r 5. 在浏览器中单击“创建”，并在“任务列表”应用中创建一些新任务。\r \r ## <a name=\"review-slas-in-the-azure-portal\"></a>在 Azure 门户中查看 SLA\r \r [!INCLUDE [cosmosdb-tutorial-review-slas](../../includes/cosmos-db-tutorial-review-slas.md)]\r \r ## <a name=\"clean-up-resources\"></a>清理资源\r \r 如果不打算继续使用此应用，请删除本快速入门教程在 Azure 门户中创建的所有资源，步骤如下：\r \r 1. 在 Azure 门户的左侧菜单中，单击“资源组”，然后单击已创建资源的名称。 \r 2. 在资源组页上单击“删除”，在文本框中键入要删除的资源的名称，并单击“删除”。\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r 在本快速入门教程中，已了解如何创建 Azure Cosmos DB 帐户和使用 API for MongoDB 运行 Web 应用。 现在可以将其他数据导入 Cosmos DB 帐户。 \r \r > [!div class=\"nextstepaction\"]\r > [将 MongoDB API 的数据导入 Azure Cosmos DB](mongodb-migrate.md)\r \r <!--Update_Description: update meta properties, add include file named cosmos-db-emulator-mongodb.md-->"}