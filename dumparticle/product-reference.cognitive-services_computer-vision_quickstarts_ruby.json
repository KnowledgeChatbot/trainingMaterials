{"Title":"计算机视觉 API Ruby 快速入门","Description":"获取信息和代码示例，帮助自己快速开始使用 Ruby 和 Microsoft 认知服务中的计算机视觉 API。","Content":"# <a name=\"computer-vision-ruby-quick-starts\"></a>计算机视觉 Ruby 快速入门\r \r 本文提供信息和代码示例来帮助读者快速开始使用计算机视觉 API 和 Ruby 来完成以下任务：\r - [分析图像](#AnalyzeImage) \r - [以智能方式生成缩略图](#GetThumbnail)\r - [从图像中检测并提取文本](#OCR)\r \r 在[此处](../Vision-API-How-to-Topics/HowToSubscribe.md)详细了解如何获取免费订阅密钥\r \r ## 使用计算机视觉 API 通过 Ruby 分析图像 <a name=\"AnalyzeImage\"> </a>\r \r 使用[“分析图像”方法](https://dev.cognitive.azure.cn/docs/services/56f91f2d778daf23d8ec6739/operations/56f91f2e778daf14a499e1fa)，可以基于图像内容提取视觉特征。 可以上传图像或指定图像 URL 并选择要返回的特征，包括：\r - 在此[分类](../Category-Taxonomy.md)中定义的类别。 \r - 与图像内容相关的标记的详细列表。 \r - 完整句子中图像内容的说明。 \r - 图像包含的任何人脸的坐标、性别和年龄。\r - ImageType（剪贴画或线条绘图）\r - 主色、强调色，或者图像是否为黑白色。\r - 图像是否包含色情或性暗示内容。 \r \r ### <a name=\"analyze-an-image-ruby-example-request\"></a>分析图像 Ruby 示例请求\r \r 更改 REST URL 以使用订阅密钥的获取位置，将“Ocp-Apim-Subscription-Key”值替换为有效的订阅密钥，并将名人照片的 URL 添加到 `body` 变量。\r \r ```ruby\r require 'net/http'\r \r uri = URI('https://api.cognitive.azure.cn/vision/v1.0/analyze')\r uri.query = URI.encode_www_form({\r     # Request parameters\r     'visualFeatures' => 'Categories',\r     'details' => '{string}',\r     'language' => 'en'\r })\r \r request = Net::HTTP::Post.new(uri.request_uri)\r # Request headers\r request['Content-Type'] = 'application/json'\r # NOTE: Replace the \"Ocp-Apim-Subscription-Key\" value with a valid subscription key.\r request['Ocp-Apim-Subscription-Key'] = '{subscription key}'\r # Replace with the body, for example, \"{\\\"url\\\": \\\"http://www.example.com/images/image.jpg\\\"}\"\r request.body = \"{body}\"\r \r response = Net::HTTP.start(uri.host, uri.port, :use_ssl => uri.scheme == 'https') do |http|\r     http.request(request)\r end\r \r puts response.body\r \r ```\r ### <a name=\"analyze-an-image-response\"></a>分析图像响应\r \r 成功响应将以 JSON 格式返回。 下面是成功响应的示例： \r \r ```json\r {\r   \"categories\": [\r     {\r       \"name\": \"abstract_\",\r       \"score\": 0.00390625\r     },\r     {\r       \"name\": \"people_\",\r       \"score\": 0.83984375,\r       \"detail\": {\r         \"celebrities\": [\r           {\r             \"name\": \"Satya Nadella\",\r             \"faceRectangle\": {\r               \"left\": 597,\r               \"top\": 162,\r               \"width\": 248,\r               \"height\": 248\r             },\r             \"confidence\": 0.999028444\r           }\r         ]\r       }\r     }\r   ],\r   \"adult\": {\r     \"isAdultContent\": false,\r     \"isRacyContent\": false,\r     \"adultScore\": 0.0934349000453949,\r     \"racyScore\": 0.068613491952419281\r   },\r   \"tags\": [\r     {\r       \"name\": \"person\",\r       \"confidence\": 0.98979085683822632\r     },\r     {\r       \"name\": \"man\",\r       \"confidence\": 0.94493889808654785\r     },\r     {\r       \"name\": \"outdoor\",\r       \"confidence\": 0.938492476940155\r     },\r     {\r       \"name\": \"window\",\r       \"confidence\": 0.89513939619064331\r     }\r   ],\r   \"description\": {\r     \"tags\": [\r       \"person\",\r       \"man\",\r       \"outdoor\",\r       \"window\",\r       \"glasses\"\r     ],\r     \"captions\": [\r       {\r         \"text\": \"Satya Nadella sitting on a bench\",\r         \"confidence\": 0.48293603002174407\r       }\r     ]\r   },\r   \"requestId\": \"0dbec5ad-a3d3-4f7e-96b4-dfd57efe967d\",\r   \"metadata\": {\r     \"width\": 1500,\r     \"height\": 1000,\r     \"format\": \"Jpeg\"\r   },\r   \"faces\": [\r     {\r       \"age\": 44,\r       \"gender\": \"Male\",\r       \"faceRectangle\": {\r         \"left\": 593,\r         \"top\": 160,\r         \"width\": 250,\r         \"height\": 250\r       }\r     }\r   ],\r   \"color\": {\r     \"dominantColorForeground\": \"Brown\",\r     \"dominantColorBackground\": \"Brown\",\r     \"dominantColors\": [\r       \"Brown\",\r       \"Black\"\r     ],\r     \"accentColor\": \"873B59\",\r     \"isBWImg\": false\r   },\r   \"imageType\": {\r     \"clipArtType\": 0,\r     \"lineDrawingType\": 0\r   }\r }\r \r ```\r \r ## 使用计算机视觉 API 通过 Ruby 获取缩略图 <a name=\"GetThumbnail\"> </a>\r \r 使用[“获取缩略图”方法](https://dev.cognitive.azure.cn/docs/services/56f91f2d778daf23d8ec6739/operations/56f91f2e778daf14a499e1fb)可以根据图像的兴趣区域 (ROI) 将该图像裁剪为所需的高度和宽度，即使纵横比不同于输入图像。 \r \r ### <a name=\"get-a-thumbnail-ruby-example-request\"></a>获取缩略图 Ruby 示例请求\r \r 更改 REST URL 以使用订阅密钥的获取位置，将“Ocp-Apim-Subscription-Key”值替换为有效的订阅密钥，并将名人照片的 URL 添加到 `body` 变量。\r \r ```ruby\r require 'net/http'\r \r uri = URI('https://api.cognitive.azure.cn/vision/v1.0/generateThumbnail')\r uri.query = URI.encode_www_form({\r     # Request parameters\r     'width' => '{number}',\r     'height' => '{number}',\r     'smartCropping' => 'true'\r })\r \r request = Net::HTTP::Post.new(uri.request_uri)\r # Request headers\r request['Content-Type'] = 'application/json'\r # NOTE: Replace the \"Ocp-Apim-Subscription-Key\" value with a valid subscription key.\r request['Ocp-Apim-Subscription-Key'] = '{subscription key}'\r # Replace with the body, for example, \"{\\\"url\\\": \\\"http://www.example.com/images/image.jpg\\\"}\"\r request.body = \"{body}\"\r \r response = Net::HTTP.start(uri.host, uri.port, :use_ssl => uri.scheme == 'https') do |http|\r     http.request(request)\r end\r \r puts response.body \r ```\r \r ### <a name=\"get-a-thumbnail-response\"></a>获取缩略图响应\r \r 成功响应包含缩略图二进制文件。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。\r \r ## 使用计算机视觉 API 通过 Ruby 执行光学字符识别 (OCR) <a name=\"OCR\"> </a>\r \r 使用[光学字符识别 (OCR) 方法](https://dev.cognitive.azure.cn/docs/services/56f91f2d778daf23d8ec6739/operations/56f91f2e778daf14a499e1fc)可以检测图像中的文本，并将识别到的字符提取到机器可用的字符流中。\r \r ### <a name=\"ocr-ruby-example-request\"></a>OCR Ruby 示例请求\r \r 更改 REST URL 以使用订阅密钥的获取位置，将“Ocp-Apim-Subscription-Key”值替换为有效的订阅密钥，并将名人照片的 URL 添加到 `body` 变量。\r \r ```ruby\r require 'net/http'\r \r uri = URI('https://api.cognitive.azure.cn/vision/v1.0/ocr')\r uri.query = URI.encode_www_form({\r     # Request parameters\r     'language' => 'unk',\r     'detectOrientation ' => 'true'\r })\r \r request = Net::HTTP::Post.new(uri.request_uri)\r # Request headers\r request['Content-Type'] = 'application/json'\r # NOTE: Replace the \"Ocp-Apim-Subscription-Key\" value with a valid subscription key.\r request['Ocp-Apim-Subscription-Key'] = '{subscription key}'\r # Replace with the body, for example, \"{\\\"url\\\": \\\"http://www.example.com/images/image.jpg\\\"}\"\r request.body = \"{body}\"\r \r response = Net::HTTP.start(uri.host, uri.port, :use_ssl => uri.scheme == 'https') do |http|\r     http.request(request)\r end\r \r puts response.body\r \r ```\r \r ### <a name=\"ocr-example-response\"></a>OCR 示例响应\r \r 如果成功，则返回的 OCR 结果包括文本、区域范围框、线条和单词。 \r \r ```json\r {\r   \"language\": \"en\",\r   \"textAngle\": -2.0000000000000338,\r   \"orientation\": \"Up\",\r   \"regions\": [\r     {\r       \"boundingBox\": \"462,379,497,258\",\r       \"lines\": [\r         {\r           \"boundingBox\": \"462,379,497,74\",\r           \"words\": [\r             {\r               \"boundingBox\": \"462,379,41,73\",\r               \"text\": \"A\"\r             },\r             {\r               \"boundingBox\": \"523,379,153,73\",\r               \"text\": \"GOAL\"\r             },\r             {\r               \"boundingBox\": \"694,379,265,74\",\r               \"text\": \"WITHOUT\"\r             }\r           ]\r         },\r         {\r           \"boundingBox\": \"565,471,289,74\",\r           \"words\": [\r             {\r               \"boundingBox\": \"565,471,41,73\",\r               \"text\": \"A\"\r             },\r             {\r               \"boundingBox\": \"626,471,150,73\",\r               \"text\": \"PLAN\"\r             },\r             {\r               \"boundingBox\": \"801,472,53,73\",\r               \"text\": \"IS\"\r             }\r           ]\r         },\r         {\r           \"boundingBox\": \"519,563,375,74\",\r           \"words\": [\r             {\r               \"boundingBox\": \"519,563,149,74\",\r               \"text\": \"JUST\"\r             },\r             {\r               \"boundingBox\": \"683,564,41,72\",\r               \"text\": \"A\"\r             },\r             {\r               \"boundingBox\": \"741,564,153,73\",\r               \"text\": \"WISH\"\r             }\r           ]\r         }\r       ]\r     }\r   ]\r }\r ```\r \r "}