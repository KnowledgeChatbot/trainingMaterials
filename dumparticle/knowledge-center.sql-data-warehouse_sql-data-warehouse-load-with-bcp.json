{"Title":"使用 bcp 将数据载入 SQL 数据仓库","Description":"了解什么是 bcp，以及如何将它用于数据仓库方案。","Content":"\r # 使用 bcp 加载数据\r \r > [!div class=\"op_single_selector\"]\r >- [Redgate](./sql-data-warehouse-load-with-redgate.md)\r >- [PolyBase](./sql-data-warehouse-get-started-load-with-polybase.md)\r >- [BCP](./sql-data-warehouse-load-with-bcp.md)\r \r <!-- Data Factory not supported on Azure.cn -->\r <!-- - [Data Factory](/documentation/articles/sql-data-warehouse-get-started-load-with-azure-data-factory/) -->\r \r **[bcp][bcp]** 是一个命令行批量加载实用程序，可让你在 SQL Server、数据文件和 SQL 数据仓库之间复制数据。使用 bcp 实用程序可将大量的行导入 SQL 数据仓库表，或将 SQL Server 表中的数据导出到数据文件。除非与 queryout 选项一起使用，否则 bcp 不需要 Transact-SQL 方面的知识。\r \r bcp 是将较小数据集移入和移出 SQL 数据仓库数据库的快速轻松方式。通过 bcp 加载/提取数据时，建议的确切数据量取决于 Azure 数据中心的网络连接。通常，使用 bcp 可以轻松地加载和提取维度表，但是，不建议使用 bcp 来加载或提取大量数据。Polybase 是用于加载和提取大量数据的推荐工具，因为它能够更好地利用 SQL 数据仓库的大规模并行处理体系结构。\r \r 使用 bcp 可以：\r \r * 使用简单的命令行实用程序将数据载入 SQL 数据仓库。\r * 使用简单的命令行实用程序从 SQL 数据仓库提取数据。\r \r 本教程将说明如何：\r \r * 使用 bcp in 命令将数据导入表中\r * 使用 bcp out 命令从表中导出数据\r \r [视频](https://channel9.msdn.com/Blogs/Azure/Loading-data-into-Azure-SQL-Data-Warehouse-with-BCP/player)\r \r ## 先决条件\r \r 若要逐步完成本教程，需要满足以下条件：\r \r * SQL 数据仓库数据库\r * 已安装 bcp 命令行实用程序\r * 已安装 SQLCMD 命令行实用程序\r \r > [!NOTE]\r > 可以从 [Microsoft 下载中心][Microsoft Download Center]下载 bcp 和 sqlcmd 实用程序。\r > \r > \r \r ## 将数据导入 SQL 数据仓库\r \r 本教程会在 Azure SQL 数据仓库中创建一个表，然后将数据导入该表。\r \r ### 步骤 1：在 Azure SQL 数据仓库中创建表\r \r 在命令提示符下，使用 sqlcmd 运行以下查询，以在实例上创建表：\r \r ```sql\r sqlcmd.exe -S <server name> -d <database name> -U <username> -P <password> -I -Q \"\r     CREATE TABLE DimDate2\r     (\r         DateId INT NOT NULL,\r         CalendarQuarter TINYINT NOT NULL,\r         FiscalQuarter TINYINT NOT NULL\r     )\r     WITH\r     (\r         CLUSTERED COLUMNSTORE INDEX,\r         DISTRIBUTION = ROUND_ROBIN\r     );\r \"\r ```\r \r > [!NOTE]\r > 有关在 SQL 数据仓库中创建表和 WITH 子句中可用选项的详细信息，请参阅[表概述][Table Overview]或 [CREATE TABLE 语法][CREATE TABLE syntax]。\r > \r > \r \r ### 步骤 2：创建源数据文件\r \r 打开记事本，将以下几行数据复制到新文本文件，然后将此文件保存到本地临时目录，路径为 C:\\\\Temp\\\\DimDate2.txt。\r \r ```\r 20150301,1,3\r 20150501,2,4\r 20151001,4,2\r 20150201,1,3\r 20151201,4,2\r 20150801,3,1\r 20150601,2,4\r 20151101,4,2\r 20150401,2,4\r 20150701,3,1\r 20150901,3,1\r 20150101,1,3\r ```\r \r > [!NOTE]\r > 请务必记得 bcp.exe 不支持 UTF-8 文件编码。使用 bcp.exe 时，请使用 ASCII 文件或 UTF-16 编码的文件。\r > \r > \r \r ### 步骤 3：连接并导入数据\r 在 bcp 中，可以使用以下命令来连接并导入数据（相应地替换其中的值）：\r \r ```sql\r bcp DimDate2 in C:\\Temp\\DimDate2.txt -S <Server Name> -d <Database Name> -U <Username> -P <password> -q -c -t  ','\r ```\r \r 可以使用 sqlcmd 运行以下查询来验证是否已加载数据：\r \r ```sql\r sqlcmd.exe -S <server name> -d <database name> -U <username> -P <password> -I -Q \"SELECT * FROM DimDate2 ORDER BY 1;\"\r ```\r \r 应返回以下结果：\r \r | DateId | CalendarQuarter | FiscalQuarter |\r | --- | --- | --- |\r | 20150101 |1 |3 |\r | 20150201 |1 |3 |\r | 20150301 |1 |3 |\r | 20150401 |2 |4 |\r | 20150501 |2 |4 |\r | 20150601 |2 |4 |\r | 20150701 |3 |1 |\r | 20150801 |3 |1 |\r | 20150801 |3 |1 |\r | 20151001 |4 |2 |\r | 20151101 |4 |2 |\r | 20151201 |4 |2 |\r \r ### 步骤 4：基于新加载的数据创建统计信息\r Azure SQL 数据仓库尚不支持自动创建或自动更新统计信息。为了从查询中获得最佳性能，首次加载数据或者在数据发生重大更改之后，创建所有表的所有列统计信息非常重要。有关统计信息的详细说明，请参阅开发主题组中的[统计信息][Statistics]主题。以下快速示例说明如何基于此示例中加载的表创建统计信息\r \r 在 sqlcmd 提示符下执行以下 CREATE STATISTICS 语句：\r \r ```sql\r sqlcmd.exe -S <server name> -d <database name> -U <username> -P <password> -I -Q \"\r     create statistics [DateId] on [DimDate2] ([DateId]);\r     create statistics [CalendarQuarter] on [DimDate2] ([CalendarQuarter]);\r     create statistics [FiscalQuarter] on [DimDate2] ([FiscalQuarter]);\r \"\r ```\r \r ## 从 SQL 数据仓库导出数据\r 本教程介绍如何从 Azure SQL 数据仓库中的表创建数据文件。我们将上面创建的数据导出到名为 DimDate2\\_export.txt 的新数据文件。\r \r ### 步骤 1：导出数据\r 在 bcp 实用程序中，可以使用以下命令来连接并导出数据（相应地替换其中的值）：\r \r ```sql\r bcp DimDate2 out C:\\Temp\\DimDate2_export.txt -S <Server Name> -d <Database Name> -U <Username> -P <password> -q -c -t ','\r ```\r \r 可以通过打开新文件来验证是否已正确导出数据。文件中的数据应与以下文本匹配：\r \r ```\r 20150301,1,3\r 20150501,2,4\r 20151001,4,2\r 20150201,1,3\r 20151201,4,2\r 20150801,3,1\r 20150601,2,4\r 20151101,4,2\r 20150401,2,4\r 20150701,3,1\r 20150901,3,1\r 20150101,1,3\r ```\r \r > [!NOTE]\r > 由于分布式系统的性质，数据顺序在不同 SQL 数据仓库数据库之间可能不同。另一种做法是使用 bcp 的 **queryout** 函数来编写查询提取，而不是导出整个表。\r > \r > \r \r ## 后续步骤\r 有关加载数据的概述，请参阅[将数据载入 SQL 数据仓库][Load data into SQL Data Warehouse]。有关更多开发技巧，请参阅 [SQL 数据仓库开发概述][SQL Data Warehouse development overview]。\r \r <!--Image references-->\r \r <!--Article references-->\r \r [Load data into SQL Data Warehouse]: ./sql-data-warehouse-overview-load.md\r [SQL Data Warehouse development overview]: ./sql-data-warehouse-overview-develop.md\r [Table Overview]: ./sql-data-warehouse-tables-overview.md\r [Statistics]: ./sql-data-warehouse-tables-statistics.md\r \r <!--MSDN references-->\r [bcp]: https://msdn.microsoft.com/zh-cn/library/ms162802.aspx\r [CREATE TABLE syntax]: https://msdn.microsoft.com/zh-cn/library/mt203953.aspx\r \r <!--Other Web references-->\r [Microsoft Download Center]: https://www.microsoft.com/download/details.aspx?id=36433\r \r <!---HONumber=Mooncake_0313_2017-->\r <!--Update_Description:update meta properties;wording update-->"}