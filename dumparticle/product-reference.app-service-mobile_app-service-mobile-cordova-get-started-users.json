{"Title":"使用移动应用在 Apache Cordova 中添加身份验证","Description":"了解如何使用 Azure 应用服务中的移动应用，通过各种标识提供者对 Apache Cordova 应用的用户进行身份验证。","Content":"# <a name=\"add-authentication-to-your-apache-cordova-app\"></a>将身份验证添加到 Apache Cordova 应用\r \r [!INCLUDE [app-service-mobile-selector-get-started-users](../../includes/app-service-mobile-selector-get-started-users.md)]\r \r ## <a name=\"summary\"></a>摘要\r 本教程介绍如何使用支持的标识提供者将身份验证添加到 Apache Cordova 上的待办事项列表快速入门项目。 本教程基于 [Get started with Mobile Apps] （移动应用入门）教程，必须先完成该教程。\r \r ## <a name=\"register\"></a>注册应用以进行身份验证并配置应用服务\r [!INCLUDE [app-service-mobile-register-authentication](../../includes/app-service-mobile-register-authentication.md)]\r \r ## <a name=\"permissions\"></a>将权限限制给已经过身份验证的用户\r \r [!INCLUDE [app-service-mobile-restrict-permissions-dotnet-backend](../../includes/app-service-mobile-restrict-permissions-dotnet-backend.md)]\r \r 现在，可以验证是否已禁用对后端的匿名访问。在 Visual Studio 中：\r \r * 打开你在完成[移动应用入门]教程后创建的项目。\r * 在 **Google Android 模拟器**中运行应用程序。\r * 验证应用启动后显示“意外的连接失败”。\r \r 接下来，请更新应用，以便在从移动应用后端请求资源之前对用户进行身份验证。\r \r ##<a name=\"add-authentication\"></a>向应用程序添加身份验证\r \r 1. 在 **Visual Studio** 中打开项目，然后打开 `www/index.html` 文件进行编辑。\r 2. 找到 head 节中的 `Content-Security-Policy` 元标记。将 OAuth 主机添加到允许的源列表。\r \r     | 提供程序 | SDK 提供程序名称 | OAuth 主机 |\r     | :--------------------- | :---------------- | :-------------------------- |\r     | Azure Active Directory | aad | https://login.chinacloudapi.cn |\r     | Microsoft | microsoftaccount | https://login.live.com |\r \r     下面显示了 Content-Security-Policy（针对 Azure Active Directory 实现）的示例：\r \r     ```\r     <meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'self'\r         data: gap: https://login.chinacloudapi.cn https://yourapp.chinacloudsites.cn; style-src 'self'\">\r     ```\r \r     将 `https://login.chinacloudapi.cn` 替换为上表中的 OAuth 主机。  有关 content-security-policy 元标记的详细信息，请参阅 [Content-Security-Policy 文档]。\r \r     请注意，在相应的移动设备上使用时，某些身份验证提供程序不需要 Content-Security-Policy 更改。\r \r 3. 打开 `www/js/index.js` 文件进行编辑，找到 `onDeviceReady()` 方法，然后在客户端创建代码下添加以下代码：\r \r     ```\r     // Login to the service\r     client.login('SDK_Provider_Name')\r         .then(function () {\r \r             // BEGINNING OF ORIGINAL CODE\r \r             // Create a table reference\r             todoItemTable = client.getTable('todoitem');\r \r             // Refresh the todoItems\r             refreshDisplay();\r \r             // Wire up the UI Event Handler for the Add Item\r             $('#add-item').submit(addItemHandler);\r             $('#refresh').on('click', refreshDisplay);\r \r             // END OF ORIGINAL CODE\r \r         }, handleError);\r     ```\r \r     此代码将替换用于创建表引用和刷新 UI 的现有代码。\r \r     login() 方法开始对提供程序进行身份验证。 login() 方法是返回 JavaScript Promise 的异步函数。  初始化的剩余部分放置在 promise 响应中，因此在 login() 方法完成之前不会执行。\r \r 4. 在刚刚添加的代码中，将 `SDK_Provider_Name` 替换为登录提供程序的名称。 例如，对于 Azure Active Directory，请使用 `client.login('aad')`。\r 5. 运行项目。  项目完成初始化后，应用程序针对所选的身份验证提供程序显示 OAuth 登录页。\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r * 了解[有关 Azure 应用服务身份验证]的详细信息。\r \r 了解如何使用 SDK。\r \r * [Apache Cordova SDK]\r * [ASP.NET Server SDK]\r * [Node.js Server SDK]\r \r <!-- URLs. -->\r [Get started with Mobile Apps]: ./app-service-mobile-cordova-get-started.md\r [移动应用入门]: ./app-service-mobile-cordova-get-started.md\r [Content-Security-Policy 文档]: https://cordova.apache.org/docs/en/latest/guide/appdev/whitelist/index.html\r [有关 Azure 应用服务身份验证]: ./app-service-mobile-auth.md\r [Apache Cordova SDK]: ./app-service-mobile-cordova-how-to-use-client-library.md\r [ASP.NET Server SDK]: ./app-service-mobile-dotnet-backend-how-to-use-server-sdk.md\r [Node.js Server SDK]: ./app-service-mobile-node-backend-how-to-use-server-sdk.md\r \r <!---HONumber=Mooncake_0116_2017-->\r <!--Update_Description:update wording-->"}