{"Title":"使用 Azure REST API 创建 Hadoop 群集 - Azure","Description":"了解如何通过将 Azure Resource Manager 模板提交到 Azure REST API 来创建 HDInsight 群集。","Content":"# <a name=\"create-hadoop-clusters-using-the-azure-rest-api\"></a>使用 Azure REST API 创建 Hadoop 群集\r \r [!INCLUDE [selector](../../includes/hdinsight-create-linux-cluster-selector.md)]\r \r 了解如何使用 Azure Resource Manager 模板和 Azure REST API 创建 HDInsight 群集。\r \r 使用 Azure REST API，可以对托管在 Azure 平台中的服务执行管理操作，包括创建新资源（例如 HDInsight 群集）。\r \r > [!IMPORTANT]\r > Linux 是在 HDInsight 3.4 版或更高版本上使用的唯一操作系统。 有关详细信息，请参阅 [HDInsight 在 Windows 上停用](hdinsight-component-versioning.md#hdinsight-windows-retirement)。\r \r > [!NOTE]\r > 本文档中的步骤使用 [curl (https://curl.haxx.se/)](https://curl.haxx.se/) 实用工具与 Azure REST API 进行通信。\r \r ## <a name=\"create-a-template\"></a>创建模板\r \r Azure Resource Manager 模板是描述**资源组**及其包含的所有资源（例如 HDInsight）的 JSON 文档。此基于模板的方法允许在一个模板中定义 HDInsight 所需的资源。\r \r 下面的 JSON 文档是来自 [https://github.com/Azure/azure-quickstart-templates/tree/master/101-hdinsight-linux-ssh-password](https://github.com/Azure/azure-quickstart-templates/tree/master/101-hdinsight-linux-ssh-password) 的模板与参数文件的组合形式，它将创建基于 Linux 的群集，并使用密码来保护 SSH 用户帐户。\r \r ```json\r {\r     \"properties\": {\r         \"template\": {\r             \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r             \"contentVersion\": \"1.0.0.0\",\r             \"parameters\": {\r                 \"clusterType\": {\r                     \"type\": \"string\",\r                     \"allowedValues\": [\"hadoop\",\r                     \"hbase\",\r                     \"storm\",\r                     \"spark\"],\r                     \"metadata\": {\r                         \"description\": \"The type of the HDInsight cluster to create.\"\r                     }\r                 },\r                 \"clusterName\": {\r                     \"type\": \"string\",\r                     \"metadata\": {\r                         \"description\": \"The name of the HDInsight cluster to create.\"\r                     }\r                 },\r                 \"clusterLoginUserName\": {\r                     \"type\": \"string\",\r                     \"metadata\": {\r                         \"description\": \"These credentials can be used to submit jobs to the cluster and to log into cluster dashboards.\"\r                     }\r                 },\r                 \"clusterLoginPassword\": {\r                     \"type\": \"securestring\",\r                     \"metadata\": {\r                         \"description\": \"The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter.\"\r                     }\r                 },\r                 \"sshUserName\": {\r                     \"type\": \"string\",\r                     \"metadata\": {\r                         \"description\": \"These credentials can be used to remotely access the cluster.\"\r                     }\r                 },\r                 \"sshPassword\": {\r                     \"type\": \"securestring\",\r                     \"metadata\": {\r                         \"description\": \"The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter.\"\r                     }\r                 },\r                 \"clusterStorageAccountName\": {\r                     \"type\": \"string\",\r                     \"metadata\": {\r                         \"description\": \"The name of the storage account to be created and be used as the cluster's storage.\"\r                     }\r                 },\r                 \"clusterWorkerNodeCount\": {\r                     \"type\": \"int\",\r                     \"defaultValue\": 4,\r                     \"metadata\": {\r                         \"description\": \"The number of nodes in the HDInsight cluster.\"\r                     }\r                 }\r             },\r             \"variables\": {\r                 \"defaultApiVersion\": \"2015-05-01-preview\",\r                 \"clusterApiVersion\": \"2015-03-01-preview\"\r             },\r             \"resources\": [{\r                 \"name\": \"[parameters('clusterStorageAccountName')]\",\r                 \"type\": \"Microsoft.Storage/storageAccounts\",\r                 \"location\": \"[resourceGroup().location]\",\r                 \"apiVersion\": \"[variables('defaultApiVersion')]\",\r                 \"dependsOn\": [],\r                 \"tags\": {\r \r                 },\r                 \"properties\": {\r                     \"accountType\": \"Standard_LRS\"\r                 }\r             },\r             {\r                 \"name\": \"[parameters('clusterName')]\",\r                 \"type\": \"Microsoft.HDInsight/clusters\",\r                 \"location\": \"[resourceGroup().location]\",\r                 \"apiVersion\": \"[variables('clusterApiVersion')]\",\r                 \"dependsOn\": [\"[concat('Microsoft.Storage/storageAccounts/',parameters('clusterStorageAccountName'))]\"],\r                 \"tags\": {\r \r                 },\r                 \"properties\": {\r                     \"clusterVersion\": \"3.6\",\r                     \"osType\": \"Linux\",\r                     \"clusterDefinition\": {\r                         \"kind\": \"[parameters('clusterType')]\",\r                         \"configurations\": {\r                             \"gateway\": {\r                                 \"restAuthCredential.isEnabled\": true,\r                                 \"restAuthCredential.username\": \"[parameters('clusterLoginUserName')]\",\r                                 \"restAuthCredential.password\": \"[parameters('clusterLoginPassword')]\"\r                             }\r                         }\r                     },\r                     \"storageProfile\": {\r                         \"storageaccounts\": [{\r                             \"name\": \"[concat(parameters('clusterStorageAccountName'),'.blob.core.chinacloudapi.cn')]\",\r                             \"isDefault\": true,\r                             \"container\": \"[parameters('clusterName')]\",\r                             \"key\": \"[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('clusterStorageAccountName')), variables('defaultApiVersion')).key1]\"\r                         }]\r                     },\r                     \"computeProfile\": {\r                         \"roles\": [{\r                             \"name\": \"headnode\",\r                             \"targetInstanceCount\": \"2\",\r                             \"hardwareProfile\": {\r                                 \"vmSize\": \"Standard_D3\"\r                             },\r                             \"osProfile\": {\r                                 \"linuxOperatingSystemProfile\": {\r                                     \"username\": \"[parameters('sshUserName')]\",\r                                     \"password\": \"[parameters('sshPassword')]\"\r                                 }\r                             }\r                         },\r                         {\r                             \"name\": \"workernode\",\r                             \"targetInstanceCount\": \"[parameters('clusterWorkerNodeCount')]\",\r                             \"hardwareProfile\": {\r                                 \"vmSize\": \"Standard_D3\"\r                             },\r                             \"osProfile\": {\r                                 \"linuxOperatingSystemProfile\": {\r                                     \"username\": \"[parameters('sshUserName')]\",\r                                     \"password\": \"[parameters('sshPassword')]\"\r                                 }\r                             }\r                         }]\r                     }\r                 }\r             }],\r             \"outputs\": {\r                 \"cluster\": {\r                     \"type\": \"object\",\r                     \"value\": \"[reference(resourceId('Microsoft.HDInsight/clusters',parameters('clusterName')))]\"\r                 }\r             }\r         },\r         \"mode\": \"incremental\",\r         \"Parameters\": {\r             \"clusterName\": {\r                 \"value\": \"newclustername\"\r             },\r             \"clusterType\": {\r                 \"value\": \"hadoop\"\r             },\r             \"clusterStorageAccountName\": {\r                 \"value\": \"newstoragename\"\r             },\r             \"clusterLoginUserName\": {\r                 \"value\": \"admin\"\r             },\r             \"clusterLoginPassword\": {\r                 \"value\": \"changeme\"\r             },\r             \"sshUserName\": {\r                 \"value\": \"sshuser\"\r             },\r             \"sshPassword\": {\r                 \"value\": \"changeme\"\r             }\r         }\r     }\r }\r ```\r \r 本文档中的步骤使用了此示例。 将“参数”部分中的示例值替换为群集的值。\r \r > [!IMPORTANT]\r > 此模板对 HDInsight 群集使用默认数目（4 个）的辅助角色节点。 如果计划使用 32 个以上的辅助角色节点，则必须选择至少具有 8 个核心和 14GB ram 的头节点大小。\r >\r > 有关节点大小和相关费用的详细信息，请参阅 [HDInsight 定价](https://www.azure.cn/pricing/details/hdinsight/)。\r \r ## <a name=\"log-in-to-your-azure-subscription\"></a>登录到 Azure 订阅\r \r [!INCLUDE [azure-cli-2-azurechinacloud-environment-parameter](../../includes/azure-cli-2-azurechinacloud-environment-parameter.md)]\r \r 请按照 [Azure CLI 2.0 入门](https://docs.azure.cn/zh-cn/cli/get-started-with-azure-cli?view=azure-cli-lastest)中所述的步骤操作，并使用 `az login` 命令连接到订阅。\r \r ## <a name=\"create-a-service-principal\"></a>创建服务主体\r \r > [!NOTE]\r > 这些步骤是[使用 Azure CLI 创建服务主体以访问资源](../azure-resource-manager/resource-group-authenticate-service-principal-cli.md)文档的“使用密码创建服务主体”部分的缩减版本。 这些步骤创建用于向 Azure REST API 进行身份验证的服务主体。\r \r 1. 从命令行使用以下命令列出 Azure 订阅。\r \r    ```bash\r    az account list --query '[].{Subscription_ID:id,Tenant_ID:tenantId,Name:name}'  --output table\r    ```\r \r     在列表中，选择要使用的订阅并记下 **Subscription_ID** 和 __Tenant_ID__ 列。 保存这些值。\r \r 2. 使用以下命令在 Azure Active Directory 中创建应用程序。\r \r    ```bash\r    az ad app create --display-name \"exampleapp\" --homepage \"https://www.contoso.org\" --identifier-uris \"https://www.contoso.org/example\" --password <Your password> --query 'appId'\r    ```\r \r     将 `--display-name`、`--homepage` 和 `--identifier-uris` 的值替换为自己的值。 为新的 Active Directory 条目提供密码。\r \r    > [!NOTE]\r    > `--home-page` 和 `--identifier-uris` 值无需引用 Internet 上托管的实际网页。 它们必须是唯一 URI。\r \r    此命令返回的值是新应用程序的 __应用 ID__ 。 保存此值。\r \r 3. 通过以下命令使用 **应用 ID**创建服务主体。\r \r    ```bash\r    az ad sp create --id <App ID> --query 'objectId'\r    ```\r \r      此命令返回的值是 __对象 ID__。 保存此值。\r \r 4. 使用**对象 ID** 值向服务主体分配**所有者**角色。 使用前面获取的 **订阅 ID** 。\r \r    ```bash\r    az role assignment create --assignee <Object ID> --role Owner --scope /subscriptions/<Subscription ID>/\r    ```\r \r ## <a name=\"get-an-authentication-token\"></a>获取身份验证令牌\r \r 使用以下命令检索身份验证令牌：\r \r ```bash\r curl -X \"POST\" \"https://login.chinacloudapi.cn/$TENANTID/oauth2/token\" \\\r -H \"Cookie: flight-uxoptin=true; stsservicecookie=ests; x-ms-gateway-slice=productionb; stsservicecookie=ests\" \\\r -H \"Content-Type: application/x-www-form-urlencoded\" \\\r --data-urlencode \"client_id=$APPID\" \\\r --data-urlencode \"grant_type=client_credentials\" \\\r --data-urlencode \"client_secret=$PASSWORD\" \\\r --data-urlencode \"resource=https://management.chinacloudapi.cn/\"\r ```\r \r 将 `$TENANTID`、`$APPID` 和 `$PASSWORD` 设置为以前获取或使用的值。\r \r 如果此请求成功，你将收到 200 系列响应，且响应正文包含一个 JSON 文档。\r \r 此请求返回的 JSON 文档包含一个名为 **access_token** 的元素。 **access_token** 的值用来对向 REST API 发出的请求进行身份验证。\r \r ```json\r {\r     \"token_type\":\"Bearer\",\r     \"expires_in\":\"3599\",\r     \"expires_on\":\"1463409994\",\r     \"not_before\":\"1463406094\",\r     \"resource\":\"https://management.chinacloudapi.cn/\",\"access_token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ik1uQ19WWoNBVGZNNXBPWWlKSE1iYTlnb0VLWSIsImtpZCI6Ik1uQ19WWmNBVGZNNXBPWWlKSE1iYTlnb0VLWSJ9.eyJhdWQiOiJodHRwczovL21hbmFnZW1lbnQuYXp1cmUuY29tLyIsImlzcyI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzcyZjk4OGJmLTg2ZjEtNDFhZi05MWFiLTJkN2NkMDExZGI2Ny8iLCJpYXQiOjE0NjM0MDYwOTQsIm5iZiI6MTQ2MzQwNjA5NCwiZXhwIjoxNDYzNDA5OTk5LCJhcHBpZCI6IjBlYzcyMzM0LTZkMDMtNDhmYi04OWU1LTU2NTJiODBiZDliYiIsImFwcGlkYWNyIjoiMSIsImlkcCI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzcyZjk4OGJmLTg2ZjEtNDFhZi05MWFiLTJkN2NkMDExZGI0Ny8iLCJvaWQiOiJlNjgxZTZiMi1mZThkLTRkZGUtYjZiMS0xNjAyZDQyNWQzOWYiLCJzdWIiOiJlNjgxZTZiMi1mZThkLTRkZGUtYjZiMS0xNjAyZDQyNWQzOWYiLCJ0aWQiOiI3MmY5ODhiZi04NmYxLTQxYWYtOTFhYi0yZDdjZDAxMWRiNDciLCJ2ZXIiOiIxLjAifQ.nJVERbeDHLGHn7ZsbVGBJyHOu2PYhG5dji6F63gu8XN2Cvol3J1HO1uB4H3nCSt9DTu_jMHqAur_NNyobgNM21GojbEZAvd0I9NY0UDumBEvDZfMKneqp7a_cgAU7IYRcTPneSxbD6wo-8gIgfN9KDql98b0uEzixIVIWra2Q1bUUYETYqyaJNdS4RUmlJKNNpENllAyHQLv7hXnap1IuzP-f5CNIbbj9UgXxLiOtW5JhUAwWLZ3-WMhNRpUO2SIB7W7tQ0AbjXw3aUYr7el066J51z5tC1AK9UC-mD_fO_HUP6ZmPzu5gLA6DxkIIYP3grPnRVoUDltHQvwgONDOw\"\r }\r ```\r \r ## <a name=\"create-a-resource-group\"></a>创建资源组\r \r 使用以下命令创建资源组。\r \r * 将 `$SUBSCRIPTIONID` 设置为创建服务主体时收到的订阅 ID。\r * 将 `$ACCESSTOKEN` 设置为在上一步骤中收到的访问令牌。\r * 将 `DATACENTERLOCATION` 替换为要在其中创建资源组和资源的数据中心。 例如“China East”。\r * 将 `$RESOURCEGROUPNAME` 设置为要用于此组的名称：\r \r ```bash\r curl -X \"PUT\" \"https://management.chinacloudapi.cn/subscriptions/$SUBSCRIPTIONID/resourcegroups/$RESOURCEGROUPNAME?api-version=2015-01-01\" \\\r     -H \"Authorization: Bearer $ACCESSTOKEN\" \\\r     -H \"Content-Type: application/json\" \\\r     -d $'{\r \"location\": \"DATACENTERLOCATION\"\r }'\r ```\r \r 如果此请求成功，将收到 200 系列响应，且响应正文包含一个 JSON 文档，其中包含有关该组的信息。 `\"provisioningState\"` 元素包含值 `\"Succeeded\"`。\r \r ## <a name=\"create-a-deployment\"></a>创建部署\r \r 使用以下命令将模板部署到资源组。\r \r * 将 `$DEPLOYMENTNAME` 设置为要用于此部署的名称。\r \r ```bash\r curl -X \"PUT\" \"https://management.chinacloudapi.cn/subscriptions/$SUBSCRIPTIONID/resourcegroups/$RESOURCEGROUPNAME/providers/microsoft.resources/deployments/$DEPLOYMENTNAME?api-version=2015-01-01\" \\\r -H \"Authorization: Bearer $ACCESSTOKEN\" \\\r -H \"Content-Type: application/json\" \\\r -d \"{set your body string to the template and parameters}\"\r ```\r \r > [!NOTE]\r > 如果将模板保存到了文件中，则可以使用以下命令而不是 `-d \"{ template and parameters}\"`：\r >\r > `--data-binary \"@/path/to/file.json\"`\r \r 如果此请求成功，将收到 200 系列响应，且响应正文包含一个 JSON 文档，其中包含有关部署操作的信息。\r \r > [!IMPORTANT]\r > 部署已提交，但尚未完成。 部署通常需要大约 15 分钟才能完成。\r \r ## <a name=\"check-the-status-of-a-deployment\"></a>检查部署状态\r \r 若要检查部署状态，请使用以下命令：\r \r ```bash\r curl -X \"GET\" \"https://management.chinacloudapi.cn/subscriptions/$SUBSCRIPTIONID/resourcegroups/$RESOURCEGROUPNAME/providers/microsoft.resources/deployments/$DEPLOYMENTNAME?api-version=2015-01-01\" \\\r -H \"Authorization: Bearer $ACCESSTOKEN\" \\\r -H \"Content-Type: application/json\"\r ```\r \r 此命令返回包含有关部署操作的信息的 JSON 文档。 `\"provisioningState\"` 元素包含部署的状态。 如果此元素包含 `\"Succeeded\"` 值，则部署已成功完成。\r \r ## <a name=\"troubleshoot\"></a>故障排除\r \r 如果在创建 HDInsight 群集时遇到问题，请参阅[访问控制要求](hdinsight-administer-use-portal-linux.md#create-clusters)。\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r 成功创建 HDInsight 群集后，请参考以下主题来了解如何使用群集。\r \r ### <a name=\"hadoop-clusters\"></a>Hadoop 群集\r \r * [将 Hive 与 HDInsight 配合使用](hadoop/hdinsight-use-hive.md)\r * [将 Pig 与 HDInsight 配合使用](hadoop/hdinsight-use-pig.md)\r * [将 MapReduce 与 HDInsight 配合使用](hadoop/hdinsight-use-mapreduce.md)\r \r ### <a name=\"hbase-clusters\"></a>HBase 群集\r \r * [HBase on HDInsight 入门](hbase/apache-hbase-tutorial-get-started-linux.md)\r * [为 HBase on HDInsight 开发 Java 应用程序](hbase/apache-hbase-build-java-maven-linux.md)\r \r ### <a name=\"storm-clusters\"></a>Storm 群集\r \r * [为 Storm on HDInsight 开发 Java 拓扑](storm/apache-storm-develop-java-topology.md)\r * [在 Storm on HDInsight 中使用 Python 组件](storm/apache-storm-develop-python-topology.md)\r * [使用 Storm on HDInsight 部署和监视拓扑](storm/apache-storm-deploy-monitor-topology-linux.md)\r <!--Update_Description: update wording and link references-->"}