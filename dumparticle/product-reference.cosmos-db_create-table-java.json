{"Title":"快速入门：将表 API 与 Java 配合使用 - Azure Cosmos DB","Description":"本快速入门介绍如何在 Azure 门户和 Java 中使用 Azure Cosmos DB 表 API 创建应用程序","Content":"# <a name=\"quickstart-build-a-table-api-app-with-java-and-azure-cosmos-db\"></a>快速入门：使用 Java 和 Azure Cosmos DB 生成表 API 应用\r \r 本快速入门介绍如何使用 Java 和 Azure Cosmos DB [表 API](table-introduction.md)，通过克隆 GitHub 中的示例来生成应用。 此外，本快速入门还介绍了如何创建 Azure Cosmos DB 帐户，以及如何在基于 Web 的 Azure 门户中使用数据资源管理器创建表和实体。\r \r Azure Cosmos DB 由 世纪互联 提供，是多个区域分布的多模型数据库服务。 可快速创建和查询文档、键/值和图形数据库，所有这些都受益于 Azure Cosmos DB 核心的多个区域分布和水平缩放功能。 \r <!-- Notice: 全球分布 to 多个区域分布 -->\r \r ## <a name=\"prerequisites\"></a>先决条件\r \r [!INCLUDE [quickstarts-free-trial-note](../../includes/quickstarts-free-trial-note.md)]\r [!INCLUDE [cosmos-db-emulator-docdb-api](../../includes/cosmos-db-emulator-docdb-api.md)]\r \r 此外： \r \r * [Java 开发工具包 (JDK) 1.7+](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)\r     * 在 Ubuntu 上运行 `apt-get install default-jdk`，以便安装 JDK。\r     * 请确保设置 JAVA_HOME 环境变量，使之指向在其中安装了 JDK 的文件夹。\r * [下载](http://maven.apache.org/download.cgi)和[安装](http://maven.apache.org/install.html) [Maven](http://maven.apache.org/) 二进制存档\r     * 在 Ubuntu 上，可以通过运行 `apt-get install maven` 来安装 Maven。\r * [Git](https://www.git-scm.com/)\r     * 在 Ubuntu 上，可以通过运行 `sudo apt-get install git` 来安装 Git。\r \r ## <a name=\"create-a-database-account\"></a>创建数据库帐户\r \r > [!IMPORTANT] \r > 需创建新的适用于公开发表版表 API SDK 的表 API 帐户。 在预览期间创建的表 API 帐户不受公开发布版 SDK 的支持。\r >\r \r [!INCLUDE [cosmos-db-create-dbaccount-table](../../includes/cosmos-db-create-dbaccount-table.md)]\r \r ## <a name=\"add-a-table\"></a>添加表\r \r [!INCLUDE [cosmos-db-create-table](../../includes/cosmos-db-create-table.md)]\r \r ## <a name=\"add-sample-data\"></a>添加示例数据\r \r 现在可以使用数据资源管理器将数据添加到新表。\r \r 1. 在数据资源管理器中，展开 **sample-table**，单击“实体”，然后单击“添加实体”。\r \r    ![在 Azure 门户的数据资源管理器中创建新实体](./media/create-table-dotnet/azure-cosmosdb-data-explorer-new-document.png)\r 2. 现在请将数据添加到 PartitionKey 值框和 RowKey 值框，然后单击“添加实体”。\r \r    ![为新实体设置分区键和行键](./media/create-table-dotnet/azure-cosmosdb-data-explorer-new-entity.png)\r \r     现在可以在数据资源管理器中将更多实体添加到表、编辑实体或查询数据。 使用数据资源管理器还可以缩放吞吐量，并将存储过程、用户定义的函数和触发器添加到表中。\r \r ## <a name=\"clone-the-sample-application\"></a>克隆示例应用程序\r \r 现在让我们从 github 克隆表应用、设置连接字符串，并运行。 你会看到以编程方式处理数据是多么容易。 \r \r 1. 打开诸如 git bash 之类的 git 终端窗口，并使用 `cd` 命令更改为相应的示例应用程序安装文件夹。 \r \r     ```bash\r     cd \"C:\\git-samples\"\r     ```\r \r 2. 运行下列命令，克隆示例存储库。 此命令在计算机上创建示例应用程序的副本。 \r \r     ```bash\r     git clone https://github.com/Azure-Samples/storage-table-java-getting-started.git \r     ```\r \r ## <a name=\"update-your-connection-string\"></a>更新连接字符串\r \r 现在返回到 Azure 门户，获取连接字符串信息，并将其复制到应用。 这样，应用程序就可以与托管的数据库进行通信。 \r \r 1. 在 [Azure 门户](http://portal.azure.cn/)中，单击“连接字符串”。 \r \r    ![在“连接字符串”窗格中查看并复制所需的连接字符串信息](./media/create-table-java/connection-string.png)\r \r 2. 使用右侧的复制按钮，复制主连接字符串。\r \r 3. 打开 C:\\git-samples\\storage-table-java-getting-started\\src\\main\\resources 文件夹中的 config.properties。 \r \r 5. 注释掉第 1 行，并取消注释掉第 2 行。 前两行现在应如下所示。\r \r     ```\r     #StorageConnectionString = UseDevelopmentStorage=true\r     StorageConnectionString = DefaultEndpointsProtocol=https;AccountName=[ACCOUNTNAME];AccountKey=[ACCOUNTKEY];TableEndpoint=[TableEndpoint]\r     ```\r \r 6. 将从门户复制的主连接字符串粘贴到第 2 行的 StorageConnectionString 值中。 \r \r     > [!IMPORTANT]\r     > 如果终结点使用 documents.azure.cn，则意味着帐户为预览版帐户，需创建适用于公开发布版表 API SDK 的[新的表 API 帐户](#create-a-database-account)。\r     >\r \r 7. 保存 config.properties 文件。\r \r 现已使用与 Azure Cosmos DB 进行通信所需的所有信息更新应用。 \r \r ## <a name=\"run-the-app\"></a>运行应用程序\r \r 1. 在 git 终端窗口中，运行 `cd` 切换到 storage-table-java-getting-started 文件夹。\r \r     ```git\r     cd \"C:\\git-samples\\storage-table-java-getting-started\"\r     ```\r \r 2. 在 git 终端窗口中，运行以下命令启动 Java 应用程序。\r \r     ```git\r     mvn compile exec:java \r     ```\r \r     控制台窗口显示，正在将表数据添加到 Azure Cosmos DB 中的新表数据库。\r \r     现可返回到数据资源管理器，查看查询、修改和处理此新数据。 \r \r ## <a name=\"review-slas-in-the-azure-portal\"></a>在 Azure 门户中查看 SLA\r \r [!INCLUDE [cosmosdb-tutorial-review-slas](../../includes/cosmos-db-tutorial-review-slas.md)]\r \r ## <a name=\"clean-up-resources\"></a>清理资源\r \r [!INCLUDE [cosmosdb-delete-resource-group](../../includes/cosmos-db-delete-resource-group.md)]\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r 在本快速入门教程中，已了解如何创建 Azure Cosmos DB 帐户、使用数据资源管理器创建表和运行应用。  现在可以使用表 API 进行数据查询了。  \r \r > [!div class=\"nextstepaction\"]\r > [将表数据导入表 API](table-import.md)\r \r <!-- Update_Description: new articles on creating table with java  -->"}