{"Title":"使用 PowerShell 脚本为 Windows 虚拟机开启 Azure 磁盘加密功能","Description":"使用 PowerShell 脚本为 Windows 虚拟机开启 Azure 磁盘加密功能","Content":"\r # 使用 PowerShell 脚本为 Windows 虚拟机开启 Azure 磁盘加密功能\r \r 本脚本提供了使用 PowerShell 脚本新建 Azure Key Vault 和 Azure AD 应用，并为现有 Windows 虚拟机开启 Azure 磁盘加密功能。\r \r > [!TIP]\r > 只有使用密钥加密密钥 ( KEK ) 配置加密的 VM 才支持已加密 VM 的备份和还原。 \r > 未使用 KEK 加密的 VM 不支持。 \r \r > [!NOTE]\r > 目前暂时不支持更新已加密的高级存储 VM 的加密设置。\r \r 创建 Azure 密钥保管库 :\r \r ```PowerShell\r $RGName = \"< yourResourcegroup >\"\r $Location = \"<China East or China North>\"\r $VaultName= \"<yourKeyVaultname>\"\r $KeyVault = New-AzureRmKeyVault -VaultName $VaultName -ResourceGroupName $RGName -Location $Location\r ```\r \r 设置 Azure AD 应用程序 :\r \r 为在 Azure 中正在运行的 VM 上启用加密时，Azure 磁盘加密将生成加密密钥并将其写入 Key Vault。 在 Key Vault 中管理加密密钥需要 Azure AD 身份验证，可以使用基于客户端机密的身份验证或基于客户端证书的 Azure AD 身份验证。请根据实际需要选择下列四种方式之一配置 Azure AD 应用程序。\r \r 1. 创建基于客户端机密的 Azure AD 应用程序 :\r     \r     ```PowerShell\r     $aadClientSecret = \"<yourAadClientSecret>\"\r     $azureAdApplication = New-AzureRmADApplication -DisplayName \"<Your Application Display Name>\" -HomePage \"<https://YourApplicationHomePage>\" -IdentifierUris \"<https://YouApplicationUri>\" -Password $aadClientSecret\r     $servicePrincipal = New-AzureRmADServicePrincipal –ApplicationId $azureAdApplication.ApplicationId\r     ```\r \r 2. 为现有的 Azure AD 应用程序配置客户端机密\r \r     若要执行以下命令，请获取并使用 [Azure AD PowerShell 模块](https://technet.microsoft.com/zh-cn/library/jj151815.aspx)。\r     \r     ```PowerShell\r     $aadclientSecret = \"<yourAadClientSecret>\"\r     $aadClientID = \"<Client ID of your Azure AD application>\"\r     Connect-MsolService -AzureEnvironment azurechinacloud\r     New-MsolServicePrincipalCredential -AppPrincipalId $aadClientID -Type password -Value $aadclientSecret\r     ```\r \r 3. 创建基于证书的 Azure AD 应用程序 :\r \r     > [!TIP]\r     > 请将 `<yourpassword>` 字符串替换为 pfx 证书的安全密码。\r \r     ```PowerShell\r     $Cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate(\"C:\\certificates\\examplecert.pfx\", \"<yourpassword>\")\r     $CertValue = [System.Convert]::ToBase64String($Cert.GetRawCertData())\r     $azureAdApplication = New-AzureRmADApplication -DisplayName \"<Your Application Display Name>\" -HomePage \"<https://YourApplicationHomePage>\" -IdentifierUris \"<https://YouApplicationUri>\" -CertValue $CertValue -StartDate $Cert.StartDate -EndDate $Cert.EndDate\r     $AADClientID = $AzureAdApplication.ApplicationId\r     $aadClientCertThumbprint= $cert.Thumbprint\r     $servicePrincipal = New-AzureRmADServicePrincipal –ApplicationId $AADClientID\r     ```\r \r 4. 为现有的 Azure AD 应用程序配置证书 :\r \r     若要执行以下命令，请获取并使用 [Azure AD PowerShell 模块](https://technet.microsoft.com/zh-cn/library/jj151815.aspx)。\r \r     > [!TIP]\r     > 请将 `<yourpassword>` 字符串替换为 pfx 证书的安全密码。\r \r     ```PowerShell\r     $Cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate(\"C:\\certificates\\examplecert.pfx\", \"<yourpassword>\")\r     $CertValue = [System.Convert]::ToBase64String($Cert.GetRawCertData())\r     $aadClientID = \"<Client ID of your Azure AD application>\"\r     $aadClientCertThumbprint= $cert.Thumbprint\r     Connect-MsolService -AzureEnvironment azurechinacloud\r     New-MsolServicePrincipalCredential -AppPrincipalId $aadClientID -Type asymmetric -Value $credValue -Usage verify\r     ```\r \r 将 PFX 证书文件上传到 Key Vault, 机密名变量 `$keyVaultSecretName` 的值可以任意设置。 \r \r > [!NOTE]\r > 使用基于客户端机密的身份验证可跳过这一步。  \r \r > [!TIP]\r > 请将 `<yourpassword>` 字符串替换为 pfx 证书的安全密码。\r \r ```PowerShell\r $certLocalPath = \"C:\\certificates\\examplecert.pfx\"\r $certPassword = \"<yourpassword>\"\r $resourceGroupName = \"<yourResourcegroup>\"\r $keyVaultName = \"<yourKeyVaultName>\"\r $keyVaultSecretName = \"<yourAadCertSecretName>\"\r \r $fileContentBytes = get-content $certLocalPath -Encoding Byte\r $fileContentEncoded = [System.Convert]::ToBase64String($fileContentBytes)\r $jsonObject = @\"\r {\r \"data\": \"$filecontentencoded\",\r \"dataType\": \"pfx\",\r \"password\": \"$certPassword\"\r }\r \"@\r $jsonObjectBytes = [System.Text.Encoding]::UTF8.GetBytes($jsonObject)\r $jsonEncoded = [System.Convert]::ToBase64String($jsonObjectBytes)\r $secret = ConvertTo-SecureString -String $jsonEncoded -AsPlainText -Force\r Set-AzureKeyVaultSecret -VaultName $keyVaultName -Name $keyVaultSecretName -SecretValue $secret\r Set-AzureRmKeyVaultAccessPolicy -VaultName $keyVaultName -ResourceGroupName $resourceGroupName –EnabledForDeployment\r ```\r \r 将 Key Vault 中的证书部署到现有 VM。\r \r > [!NOTE]\r > 使用基于客户端机密的身份验证可跳过这一步。\r \r ```PowerShell\r $resourceGroupName = \"<yourResourcegroup>\"\r $keyVaultName = \"<yourKeyVaultName>\"\r $keyVaultSecretName = \"<yourAadCertSecretName>\"\r $vmName = \"<yourVMName>\"\r $certUrl = (Get-AzureKeyVaultSecret -VaultName $keyVaultName -Name $keyVaultSecretName).Id\r $sourceVaultId = (Get-AzureRmKeyVault -VaultName $keyVaultName -ResourceGroupName $resourceGroupName).ResourceId\r $vm = Get-AzureRmVM -ResourceGroupName $resourceGroupName -Name $vmName\r $vm = Add-AzureRmVMSecret -VM $vm -SourceVaultId $sourceVaultId -CertificateStore \"My\" -CertificateUrl $certUrl\r Update-AzureRmVM -VM $vm -ResourceGroupName $resourceGroupName\r ```\r \r 为 Azure AD 应用程序设置 Key Vault 访问策略 :\r \r ```PowerShell\r $keyVaultName = \"<yourKeyVaultName>\"\r $AADClientID = $AzureAdApplication.ApplicationId \r $RGName = \"<yourResourceGroup>\"\r Set-AzureRmKeyVaultAccessPolicy -VaultName $keyVaultName -ServicePrincipalName $AADClientID -PermissionsToKeys \"WrapKey\" -PermissionsToSecrets \"Set\" -ResourceGroupName $RGName\r ```\r \r 设置密钥加密密钥（可选）:\r \r ```PowerShell\r $KEKName = \"<yourKEKName>\"\r $KEK = Add-AzureKeyVaultKey -VaultName $VaultName -Name $KEKName -Destination \"Software\"\r $KeyEncryptionKeyUrl = $KEK.Key.kid\r ```\r \r 设置 Key Vault 权限 :\r \r ```PowerShell\r $keyVaultName = \"<yourKeyVaultName>\"\r $RGName = \"<yourResourceGroup>\"\r Set-AzureRmKeyVaultAccessPolicy -VaultName $keyVaultName -ResourceGroupName $RGName -EnabledForDiskEncryption\r ```\r \r 为 Azure VM 开启磁盘加密功能\r \r 请根据之前配置的 Azure AD 应用程序和密钥加密密钥的情况选择以下四种方式之一配置 Azure VM 磁盘加密功能。\r \r 1. 使用基于客户端机密的身份验证\r \r     ```PowerShell\r     Set-AzureRmVMDiskEncryptionExtension -ResourceGroupName $rgname -VMName $vmName -AadClientID $aadClientID -AadClientSecret $aadClientSecret -DiskEncryptionKeyVaultUrl $diskEncryptionKeyVaultUrl -DiskEncryptionKeyVaultId $KeyVaultResourceId\r     ```\r \r 2. 使用基于客户端机密的身份验证，并使用密钥加密密钥\r \r     ```PowerShell\r     Set-AzureRmVMDiskEncryptionExtension -ResourceGroupName $RGName -VMName $vmName -AadClientID $AADClientID -AadClientSecret $AADClientSecret -DiskEncryptionKeyVaultUrl $DiskEncryptionKeyVaultUrl -DiskEncryptionKeyVaultId $KeyVaultResourceId -KeyEncryptionKeyUrl $KeyEncryptionKeyUrl -KeyEncryptionKeyVaultId $KeyVaultResourceId\r     ```\r \r 3. 使用基于证书的身份验证\r \r     ```PowerShell\r     Set-AzureRmVMDiskEncryptionExtension -ResourceGroupName $RGName -VMName $VMName -AadClientID $AADClientID -AadClientCertThumbprint $AADClientCertThumbprint -DiskEncryptionKeyVaultUrl $DiskEncryptionKeyVaultUrl -DiskEncryptionKeyVaultId $KeyVaultResourceId\r     ```\r \r 4. 使用基于证书的身份验证，并使用密钥加密密钥\r \r     ```PowerShell\r     Set-AzureRmVMDiskEncryptionExtension -ResourceGroupName $RGName -VMName $VMName -AadClientID $AADClientID -AadClientCertThumbprint $AADClientCertThumbprint -DiskEncryptionKeyVaultUrl $DiskEncryptionKeyVaultUrl -DiskEncryptionKeyVaultId $KeyVaultResourceId -KeyEncryptionKeyUrl $KeyEncryptionKeyUrl -KeyEncryptionKeyVaultId $KeyVaultResourceId\r     ```\r \r 查看当前订阅内的VM 磁盘加密状态\r \r ```PowerShell\r $osVolEncrypted = {(Get-AzureRmVMDiskEncryptionStatus -ResourceGroupName $_.ResourceGroupName -VMName $_.Name).OsVolumeEncrypted}\r $dataVolEncrypted= {(Get-AzureRmVMDiskEncryptionStatus -ResourceGroupName $_.ResourceGroupName -VMName $_.Name).DataVolumesEncrypted}\r Get-AzureRmVm | Format-Table @{Label=\"MachineName\"; Expression={$_.Name}}, @{Label=\"OsVolumeEncrypted\"; Expression=$osVolEncrypted}, @{Label=\"DataVolumesEncrypted\"; Expression=$dataVolEncrypted}\r ```\r \r ## 脚本链接\r \r [Enforce-DiskEncryptionwithKEK](https://github.com/wacn/AOG-CodeSample/tree/master/PowerShell/Enforce-DiskEncryptionwithKEK.ps1)\r "}