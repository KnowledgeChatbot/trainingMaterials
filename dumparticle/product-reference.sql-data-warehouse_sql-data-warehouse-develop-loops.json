{"Title":"在 Azure SQL 数据仓库中利用 T-SQL 循环","Description":"有关在开发解决方案时使用 Azure SQL 数据仓库中的 Transact-SQL 循环和替换游标的技巧。","Content":"\r # SQL 数据仓库中的循环\r SQL 数据仓库支持对重复执行的语句块使用 [WHILE][WHILE] 循环。只要指定的条件为 true，或者在代码专门使用 `BREAK` 关键字终止循环之前，这些语句将不断继续。循环特别适合用于替换 SQL 代码中定义的游标。幸运的是，几乎所有以 SQL 代码编写的游标都是快进的只读变体。因此，如果发现自己必须替换一个游标，[WHILE] 循环是绝佳的替代方案。\r \r ## 利用循环并替换 SQL 数据仓库中的游标\r 但是，深入学习之前，应先自问以下问题：“此游标是否可重写以使用基于集的操作？”。在许多情况下，答案是肯定的，通常这也是最佳方法。基于集的操作的执行速度通常比迭代性的逐行方法要快得多。\r \r 可以轻松使用循环构造来替换快进只读游标。下面是一个简单的示例。此代码示例将更新数据库中每个表的统计信息。通过迭代循环中的表，我们就能够依次执行每个命令。\r \r 首先，创建一个临时表，其中包含用于标识各个语句的唯一行号：\r \r ```\r CREATE TABLE #tbl\r WITH\r ( DISTRIBUTION = ROUND_ROBIN\r )\r AS\r SELECT  ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS Sequence\r ,       [name]\r ,       'UPDATE STATISTICS '+QUOTENAME([name]) AS sql_code\r FROM    sys.tables\r ;\r ```\r \r 其次，初始化执行循环所需的变量：\r \r ```\r DECLARE @nbr_statements INT = (SELECT COUNT(*) FROM #tbl)\r ,       @i INT = 1\r ;\r ```\r \r 现在，每次对一个语句执行一次循环：\r \r ```\r WHILE   @i <= @nbr_statements\r BEGIN\r     DECLARE @sql_code NVARCHAR(4000) = (SELECT sql_code FROM #tbl WHERE Sequence = @i);\r     EXEC    sp_executesql @sql_code;\r     SET     @i +=1;\r END\r ```\r \r 最后，将第一个步骤创建的临时表删除\r \r ```\r DROP TABLE #tbl;\r ```\r \r <!--Every topic should have next steps and links to the next logical set of content to keep the customer engaged-->\r \r ## 后续步骤\r 有关更多开发技巧，请参阅[开发概述][development overview]。\r \r <!--Image references-->\r \r <!--Article references-->\r [development overview]: ./sql-data-warehouse-overview-develop.md\r \r <!--MSDN references-->\r [WHILE]: https://msdn.microsoft.com/zh-cn/library/ms178642.aspx\r \r <!--Other Web references-->\r \r <!---HONumber=Mooncake_0313_2017-->\r <!--Update_Description:update meta properties;wroding update-->"}