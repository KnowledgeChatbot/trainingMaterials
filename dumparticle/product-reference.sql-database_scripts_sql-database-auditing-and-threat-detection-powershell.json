{"Title":"PowerShell 示例 - 审核 - 威胁检测 - Azure SQL 数据库","Description":"在 Azure SQL 数据库中配置审核和威胁检测的 Azure PowerShell 示例脚本","Content":"# <a name=\"use-powershell-to-configure-sql-database-auditing-and-threat-detection\"></a>使用 PowerShell 配置 SQL 数据库审核和威胁检测  此 PowerShell 脚本示例配置 SQL 数据库审核和威胁检测。   [!INCLUDE [sample-powershell-install](../../../includes/sample-powershell-install-no-ssh.md)]  ## <a name=\"sample-script\"></a>示例脚本  ```powershell # Login-AzureRmAccount -EnvironmentName AzureChinaCloud # Set the resource group name and location for your server $resourcegroupname = \"myResourceGroup-$(Get-Random)\" $location = \"China North\" # Set an admin login and password for your server $adminlogin = \"ServerAdmin\" $password = \"ChangeYourAdminPassword1\" # The logical server name has to be unique in the system $servername = \"server-$(Get-Random)\" # The sample database name $databasename = \"mySampleDatabase\" # The ip address range that you want to allow to access your server $startip = \"0.0.0.0\" $endip = \"0.0.0.0\" # The storage account name has to be unique in the system $storageaccountname = $(\"sql$(Get-Random)\") # Specify the email recipients for the threat detection alerts $notificationemailreceipient = \"changeto@your.email;changeto@your.email\"  # Create a new resource group $resourcegroup = New-AzureRmResourceGroup -Name $resourcegroupname -Location $location  # Create a new server with a system wide unique server name $server = New-AzureRmSqlServer -ResourceGroupName $resourcegroupname `     -ServerName $servername `     -Location $location `     -SqlAdministratorCredentials $(New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $adminlogin, $(ConvertTo-SecureString -String $password -AsPlainText -Force))  # Create a server firewall rule that allows access from the specified IP range $serverfirewallrule = New-AzureRmSqlServerFirewallRule -ResourceGroupName $resourcegroupname `     -ServerName $servername `     -FirewallRuleName \"AllowedIPs\" -StartIpAddress $startip -EndIpAddress $endip  # Create a blank database with S0 performance level $database = New-AzureRmSqlDatabase  -ResourceGroupName $resourcegroupname `     -ServerName $servername `     -DatabaseName $databasename -RequestedServiceObjectiveName \"S0\"      # Create a Storage Account  $storageaccount = New-AzureRmStorageAccount -ResourceGroupName $resourcegroupname `     -AccountName $storageaccountname `     -Location $location `     -Type \"Standard_LRS\"  # Set an auditing policy Set-AzureRmSqlDatabaseAuditing -State Enabled `     -ResourceGroupName $resourcegroupname `     -ServerName $servername `     -DatabaseName $databasename `     -StorageAccountName $storageaccountname   # Set a threat detection policy Set-AzureRmSqlDatabaseThreatDetectionPolicy -ResourceGroupName $resourcegroupname `     -ServerName $servername `     -DatabaseName $databasename `     -StorageAccountName $storageaccountname `     -NotificationRecipientsEmails $notificationemailreceipient `     -EmailAdmins $False  # Clean up deployment  # Remove-AzureRmResourceGroup -ResourceGroupName $resourcegroupname  ```  ## <a name=\"clean-up-deployment\"></a>清理部署  运行脚本示例后，可以使用以下命令删除资源组以及与其关联的所有资源。  ```powershell Remove-AzureRmResourceGroup -ResourceGroupName $resourcegroupname ```  ## <a name=\"script-explanation\"></a>脚本说明  此脚本使用以下命令。 表中的每条命令均链接到特定于命令的文档。  | 命令 | 说明 | |---|---| | [New-AzureRmResourceGroup](https://docs.microsoft.com/powershell/module/azurerm.resources/new-azurermresourcegroup) | 创建用于存储所有资源的资源组。 | | [New-AzureRmSqlServer](https://docs.microsoft.com/powershell/module/azurerm.sql/new-azurermsqlserver) | 创建用于托管数据库或弹性池的逻辑服务器。 | | [New-AzureRmSqlDatabase](https://docs.microsoft.com/powershell/module/azurerm.sql/new-azurermsqldatabase) | 在逻辑服务器中创建数据库作为单一数据库或入池数据库。 | | [New-AzureRmStorageAccount](https://docs.microsoft.com/powershell/module/azurerm.storage/new-azurermstorageaccount) | 创建存储帐户。 | | [Set-AzureRmSqlDatabaseAuditingPolicy](https://docs.microsoft.com/powershell/module/azurerm.sql/set-azurermsqldatabaseauditingpolicy) | 设置数据库的审核策略。 | | [Set-AzureRmSqlDatabaseThreatDetectionPolicy](https://docs.microsoft.com/powershell/module/azurerm.sql/set-azurermsqldatabasethreatdetectionpolicy) | 在数据库上设置威胁检测策略。 | | [Remove-AzureRmResourceGroup](https://docs.microsoft.com/powershell/module/azurerm.resources/remove-azurermresourcegroup) | 删除资源组，包括所有嵌套的资源。 | |||  ## <a name=\"next-steps\"></a>后续步骤  有关 Azure PowerShell 的详细信息，请参阅 [Azure PowerShell 文档](https://docs.microsoft.com/powershell/azure/overview)。  可以在 [Azure SQL 数据库 PowerShell 脚本](../sql-database-powershell-samples.md)中找到更多 SQL 数据库 PowerShell 脚本示例。  <!--Update_Description: wording update-->"}