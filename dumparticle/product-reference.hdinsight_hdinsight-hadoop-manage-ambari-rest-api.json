{"Title":"使用 Ambari REST API 监视和管理 Hadoop - Azure HDInsight","Description":"了解如何使用 Ambari 监视和管理 Azure HDInsight 中的 Hadoop 群集。 在本文档中，学习如何使用 HDInsight 群集随附的 Ambari REST API。","Content":"# <a name=\"manage-hdinsight-clusters-by-using-the-ambari-rest-api\"></a>使用 Ambari REST API 管理 HDInsight 群集\r \r [!INCLUDE [ambari-selector](../../includes/hdinsight-ambari-selector.md)]\r \r 了解如何使用 Ambari REST API 监视和管理 Azure HDInsight 中的 Hadoop 群集。\r \r Apache Ambari 提供简单易用的 Web UI 和 REST API 来简化 Hadoop 群集的管理和监视。 Ambari 包含在使用 Linux 操作系统的 HDInsight 群集中。 可以使用 Ambari 监视群集和进行配置更改。\r \r ## <a id=\"whatis\"></a>什么是 Ambari\r \r [Apache Ambari](http://ambari.apache.org) 提供可用于管理和监视 Hadoop 群集的 Web UI。 开发人员可以使用 [Ambari REST API](https://github.com/apache/ambari/blob/trunk/ambari-server/docs/api/v1/index.md)在其应用程序中集成这些功能。\r \r 基于 Linux 的 HDInsight 群集已按默认提供 Ambari。\r \r ## <a name=\"how-to-use-the-ambari-rest-api\"></a>如何使用 Ambari REST API\r \r > [!IMPORTANT]\r > 本文档中的信息和示例需要使用 Linux 操作系统的 HDInsight 群集。 有关详细信息，请参阅 [HDInsight 入门](hadoop/apache-hadoop-linux-tutorial-get-started.md)。\r \r 本文档针对 Bourne 外壳 (bash) 和 PowerShell 都提供了示例。 测试 bash 示例时使用的是 GNU bash 版本 4.3.11，但应结合使用其他 Unix shell。 PowerShell 示例使用 PowerShell 5.0 进行了测试，但也应适用于 PowerShell 3.0 或更高版本。\r \r 如果使用 __Bourne 外壳__ (Bash)，则必须安装以下各项：\r \r * [cURL](http://curl.haxx.se/)：cURL 是一个可用于从命令行使用 REST API 的实用工具。 在本文档中，将使用它来与 Ambari REST API 通信。\r \r 不论使用 Bash 还是 PowerShell，还必须安装 [jq](https://stedolan.github.io/jq/) 。 Jq 是用于处理 JSON 文档的实用工具。 **所有** Bash 示例都使用了该实用工具，PowerShell 示例中有**一个**使用了该实用工具。\r \r ### <a name=\"base-uri-for-ambari-rest-api\"></a>用于 Ambari Rest API 的基 URI\r \r HDInsight 上 Ambari REST API 的基本 URI 是 https://CLUSTERNAME.azurehdinsight.cn/api/v1/clusters/CLUSTERNAME，其中 **CLUSTERNAME** 是群集的名称。\r \r > [!IMPORTANT]\r > URI 的完全限定域名 (FQDN) 部分 (CLUSTERNAME.azurehdinsight.cn) 中的群集名称不区分大小写，但 URI 中的其他部分则区分大小写。 例如，如果群集命名为 `MyCluster`，则有效的 URI 如下所示：\r > \r > `https://mycluster.azurehdinsight.cn/api/v1/clusters/MyCluster`\r >\r > `https://MyCluster.azurehdinsight.cn/api/v1/clusters/MyCluster`\r > \r > 下面的 URI 返回一个错误，因为第二个出现的名称的大小写不正确。\r > \r > `https://mycluster.azurehdinsight.cn/api/v1/clusters/mycluster`\r >\r > `https://MyCluster.azurehdinsight.cn/api/v1/clusters/mycluster`\r \r ### <a name=\"authentication\"></a>身份验证\r \r 连接到 HDInsight 上的 Ambari 需要 HTTPS。 使用在群集创建过程中提供的管理员帐户名称（默认值是 **admin**）和密码。\r \r ## <a name=\"examples-authentication-and-parsing-json\"></a>示例：身份验证和解析 JSON\r \r 以下示例演示如何针对基本 Ambari REST API 发出 GET 请求：\r \r ```bash\r curl -u admin -sS -G \"https://$CLUSTERNAME.azurehdinsight.cn/api/v1/clusters/$CLUSTERNAME\"\r ```\r \r > [!IMPORTANT]\r > 本文档中的 Bash 示例作出以下假设：\r >\r > * 群集的登录名是默认值 `admin`。\r > * `$CLUSTERNAME` 包含群集名称。 可以使用 `set CLUSTERNAME='clustername'` 设置此值\r > * 出现提示时，输入群集登录（管理员）帐户的密码。\r \r ```powershell\r $resp = Invoke-WebRequest -Uri \"https://$clusterName.azurehdinsight.cn/api/v1/clusters/$clusterName\" `\r     -Credential $creds\r $resp.Content\r ```\r \r > [!IMPORTANT]\r > 本文档中的 PowerShell 示例作出以下假设：\r >\r > * `$creds` 是一个凭据对象，包含群集的管理员登录名和密码。 可以通过使用 `$creds = Get-Credential -UserName \"admin\" -Message \"Enter the HDInsight login\"` 并在出现提示时提供凭据来设置此值。\r > * `$clusterName` 是一个包含群集名称的字符串。 可以使用 `$clusterName=\"clustername\"` 设置此值。\r \r 两个示例均返回一个 JSON 文档，该文档以类似于如下示例的信息开头：\r \r ```json\r {\r \"href\" : \"http://10.0.0.10:8080/api/v1/clusters/CLUSTERNAME\",\r \"Clusters\" : {\r     \"cluster_id\" : 2,\r     \"cluster_name\" : \"CLUSTERNAME\",\r     \"health_report\" : {\r     \"Host/stale_config\" : 0,\r     \"Host/maintenance_state\" : 0,\r     \"Host/host_state/HEALTHY\" : 7,\r     \"Host/host_state/UNHEALTHY\" : 0,\r     \"Host/host_state/HEARTBEAT_LOST\" : 0,\r     \"Host/host_state/INIT\" : 0,\r     \"Host/host_status/HEALTHY\" : 7,\r     \"Host/host_status/UNHEALTHY\" : 0,\r     \"Host/host_status/UNKNOWN\" : 0,\r     \"Host/host_status/ALERT\" : 0\r     ...\r ```\r \r ### <a name=\"parsing-json-data\"></a>分析 JSON 数据\r \r 以下示例使用 `jq` 来分析 JSON 响应文档并仅显示结果中的 `health_report` 信息。\r \r ```bash\r curl -u admin -sS -G \"https://$CLUSTERNAME.azurehdinsight.cn/api/v1/clusters/$CLUSTERNAME\" \\\r | jq '.Clusters.health_report'\r ```\r \r PowerShell 3.0 和更高版本提供了 `ConvertFrom-Json` cmdlet，该 cmdlet 可以将 JSON 文档转换为更容易通过 PowerShell 操作的对象。 以下示例使用 `ConvertFrom-Json` 来仅显示结果中的 `health_report` 信息。\r \r ```powershell\r $resp = Invoke-WebRequest -Uri \"https://$clusterName.azurehdinsight.cn/api/v1/clusters/$clusterName\" `\r     -Credential $creds\r $respObj = ConvertFrom-Json $resp.Content\r $respObj.Clusters.health_report\r ```\r \r > [!NOTE]\r > 虽然本文档中的大多数示例使用 `ConvertFrom-Json` 来显示响应文档中的元素，但[更新 Ambari 配置](#example-update-ambari-configuration)示例使用了 jq。 本示例中使用 Jq 从 JSON 响应文档构造一个新模板。\r \r 有关 REST API 的完整参考，请参阅 [Ambari API 参考 V1](https://github.com/apache/ambari/blob/trunk/ambari-server/docs/api/v1/index.md)。\r \r ## <a name=\"example-get-the-fqdn-of-cluster-nodes\"></a>示例：获取群集节点的 FQDN\r \r 使用 HDInsight 时，可能需要知道群集节点的完全限定域名 (FQDN)。 可使用以下示例轻松检索群集中各个节点的 FQDN：\r \r * **所有节点**\r \r     ```bash\r     curl -u admin -sS -G \"https://$CLUSTERNAME.azurehdinsight.cn/api/v1/clusters/$CLUSTERNAME/hosts\" \\\r     | jq '.items[].Hosts.host_name'\r     ```\r \r     ```powershell\r     $resp = Invoke-WebRequest -Uri \"https://$clusterName.azurehdinsight.cn/api/v1/clusters/$clusterName/hosts\" `\r         -Credential $creds\r     $respObj = ConvertFrom-Json $resp.Content\r     $respObj.items.Hosts.host_name\r     ```\r \r * **头节点**\r \r     ```bash\r     curl -u admin -sS -G \"https://$CLUSTERNAME.azurehdinsight.cn/api/v1/clusters/$CLUSTERNAME/services/HDFS/components/NAMENODE\" \\\r     | jq '.host_components[].HostRoles.host_name'\r     ```\r \r     ```powershell\r     $resp = Invoke-WebRequest -Uri \"https://$clusterName.azurehdinsight.cn/api/v1/clusters/$clusterName/services/HDFS/components/NAMENODE\" `\r         -Credential $creds\r     $respObj = ConvertFrom-Json $resp.Content\r     $respObj.host_components.HostRoles.host_name\r     ```\r \r * **辅助角色节点**\r \r     ```bash\r     curl -u admin -sS -G \"https://$CLUSTERNAME.azurehdinsight.cn/api/v1/clusters/CLUSTERNAME/services/HDFS/components/DATANODE\" \\\r     | jq '.host_components[].HostRoles.host_name'\r     ```\r \r     ```powershell\r     $resp = Invoke-WebRequest -Uri \"https://$clusterName.azurehdinsight.cn/api/v1/clusters/$clusterName/services/HDFS/components/DATANODE\" `\r         -Credential $creds\r     $respObj = ConvertFrom-Json $resp.Content\r     $respObj.host_components.HostRoles.host_name\r     ```\r \r * **Zookeeper 节点**\r \r     ```bash\r     curl -u admin -sS -G \"https://$CLUSTERNAME.azurehdinsight.cn/api/v1/clusters/$CLUSTERNAME/services/ZOOKEEPER/components/ZOOKEEPER_SERVER\" \\\r     | jq '.host_components[].HostRoles.host_name'\r     ```\r \r     ```powershell\r     $resp = Invoke-WebRequest -Uri \"https://$clusterName.azurehdinsight.cn/api/v1/clusters/$clusterName/services/ZOOKEEPER/components/ZOOKEEPER_SERVER\" `\r         -Credential $creds\r     $respObj = ConvertFrom-Json $resp.Content\r     $respObj.host_components.HostRoles.host_name\r     ```\r \r ## <a name=\"example-get-the-internal-ip-address-of-cluster-nodes\"></a>示例：获取群集节点的内部 IP 地址\r \r > [!IMPORTANT]\r > 本部分中的示例所返回的 IP 地址不可直接通过 Internet 进行访问。 仅可在包含 HDInsight 群集的 Azure 虚拟网络内部对其进行访问。\r >\r > 有关将 HDInsight 与虚拟网络配合使用的详细信息，请参阅[使用 Azure 虚拟网络扩展 HDInsight 功能](hdinsight-extend-hadoop-virtual-network.md)。\r \r 要查找 IP 地址，必须知道群集节点的内部完全限定的域名 (FQDN)。 在知悉 FQDN 后，可以获取主机的 IP 地址。 下面的示例首先会向 Ambari 查询所有主机节点的 FQDN，再向 Ambari 查询每个主机的 IP 地址。\r \r ```bash\r for HOSTNAME in $(curl -u admin:$PASSWORD -sS -G \"https://$CLUSTERNAME.azurehdinsight.cn/api/v1/clusters/$CLUSTERNAME/hosts\" | jq -r '.items[].Hosts.host_name')\r do\r     IP=$(curl -u admin:$PASSWORD -sS -G \"https://$CLUSTERNAME.azurehdinsight.cn/api/v1/clusters/$CLUSTERNAME/hosts/$HOSTNAME\" | jq -r '.Hosts.ip')\r   echo \"$HOSTNAME <--> $IP\"\r done\r ```\r \r > [!TIP]\r > 前面的示例会提示输入密码。 此示例将多次运行 `curl` 命令，因此将以 `$PASSWORD` 形式提供密码以避免出现多次提示。\r \r ```powershell\r $uri = \"https://$clusterName.azurehdinsight.cn/api/v1/clusters/$clusterName/hosts\"\r $resp = Invoke-WebRequest -Uri $uri -Credential $creds\r $respObj = ConvertFrom-Json $resp.Content\r foreach($item in $respObj.items) {\r     $hostName = [string]$item.Hosts.host_name\r     $hostInfoResp = Invoke-WebRequest -Uri \"$uri/$hostName\" `\r         -Credential $creds\r     $hostInfoObj = ConvertFrom-Json $hostInfoResp \r     $hostIp = $hostInfoObj.Hosts.ip\r     \"$hostName <--> $hostIp\"\r }\r ```\r \r ## <a name=\"example-get-the-default-storage\"></a>示例：获取默认存储\r \r 创建 HDInsight 群集时，必须使用 Azure 存储帐户作为群集的默认存储。 创建群集后，可以使用 Ambari 来检索此信息。 例如，如果要从 HDInsight 外部的容器读取数据或向其写入数据。\r \r 以下示例检索群集的默认存储配置：\r \r ```bash\r curl -u admin -sS -G \"https://$CLUSTERNAME.azurehdinsight.cn/api/v1/clusters/$CLUSTERNAME/configurations/service_config_versions?service_name=HDFS&service_config_version=1\" \\\r | jq '.items[].configurations[].properties[\"fs.defaultFS\"] | select(. != null)'\r ```\r \r ```powershell\r $resp = Invoke-WebRequest -Uri \"https://$clusterName.azurehdinsight.cn/api/v1/clusters/$clusterName/configurations/service_config_versions?service_name=HDFS&service_config_version=1\" `\r     -Credential $creds\r $respObj = ConvertFrom-Json $resp.Content\r $respObj.items.configurations.properties.'fs.defaultFS'\r ```\r \r > [!IMPORTANT]\r > 这些示例将返回应用于服务器的第一个配置 (`service_config_version=1`)，其中包含此信息。 如果要检索创建群集后修改的值，可能需要列出配置版本并检索最新版本。\r \r 返回值类似于以下其中一个示例：\r \r * `wasb://CONTAINER@ACCOUNTNAME.blob.core.chinacloudapi.cn` - 此值表示群集使用 Azure 存储帐户作为默认存储。 值 `ACCOUNTNAME` 是存储帐户的名称。 `CONTAINER` 部分是存储帐户中 Blob 容器的名称。 容器是群集的 HDFS 兼容存储的根。\r \r > [!NOTE]\r > [Azure PowerShell](https://docs.microsoft.com/powershell/azure/overview) 提供的 `Get-AzureRmHDInsightCluster` cmdlet 也返回群集的存储信息。\r \r ## <a name=\"example-get-configuration\"></a>示例：获取配置\r \r 1. 获取可用于群集的配置。\r \r     ```bash\r     curl -u admin -sS -G \"https://$CLUSTERNAME.azurehdinsight.cn/api/v1/clusters/$CLUSTERNAME?fields=Clusters/desired_configs\"\r     ```\r \r     ```powershell\r     $respObj = Invoke-WebRequest -Uri \"https://$clusterName.azurehdinsight.cn/api/v1/clusters/$clusterName`?fields=Clusters/desired_configs\" `\r         -Credential $creds\r     $respObj.Content\r     ```\r \r     此示例将返回一个 JSON 文档，其中包含群集上安装的组件的当前配置（由 *tag* 值标识）。 下面的示例是从 Spark 群集类型返回的数据摘录。\r \r    ```json\r    \"spark-metrics-properties\" : {\r        \"tag\" : \"INITIAL\",\r        \"user\" : \"admin\",\r        \"version\" : 1\r    },\r    \"spark-thrift-fairscheduler\" : {\r        \"tag\" : \"INITIAL\",\r        \"user\" : \"admin\",\r        \"version\" : 1\r    },\r    \"spark-thrift-sparkconf\" : {\r        \"tag\" : \"INITIAL\",\r        \"user\" : \"admin\",\r        \"version\" : 1\r    }\r    ```\r \r 2. 获取感兴趣的组件的配置。 在以下示例中，将 `INITIAL` 替换为从上一请求返回的标记值。\r \r     ```bash\r     curl -u admin -sS -G \"https://$CLUSTERNAME.azurehdinsight.cn/api/v1/clusters/$CLUSTERNAME/configurations?type=core-site&tag=INITIAL\"\r     ```\r \r     ```powershell\r     $resp = Invoke-WebRequest -Uri \"https://$clusterName.azurehdinsight.cn/api/v1/clusters/$clusterName/configurations?type=core-site&tag=INITIAL\" `\r         -Credential $creds\r     $resp.Content\r     ```\r \r     此示例返回的 JSON 文档包含 `core-site` 组件的当前配置。\r \r ## <a name=\"example-update-configuration\"></a>示例：更新配置\r \r 1. 获取当前配置，即 Ambari 存储为“所需配置”的配置：\r \r     ```bash\r     curl -u admin -sS -G \"https://$CLUSTERNAME.azurehdinsight.cn/api/v1/clusters/$CLUSTERNAME?fields=Clusters/desired_configs\"\r     ```\r \r     ```powershell\r     Invoke-WebRequest -Uri \"https://$clusterName.azurehdinsight.cn/api/v1/clusters/$clusterName`?fields=Clusters/desired_configs\" `\r         -Credential $creds\r     ```\r \r     此示例将返回一个 JSON 文档，其中包含群集上安装的组件的当前配置（由 *tag* 值标识）。 下面的示例是从 Spark 群集类型返回的数据摘录。\r \r     ```json\r     \"spark-metrics-properties\" : {\r         \"tag\" : \"INITIAL\",\r         \"user\" : \"admin\",\r         \"version\" : 1\r     },\r     \"spark-thrift-fairscheduler\" : {\r         \"tag\" : \"INITIAL\",\r         \"user\" : \"admin\",\r         \"version\" : 1\r     },\r     \"spark-thrift-sparkconf\" : {\r         \"tag\" : \"INITIAL\",\r         \"user\" : \"admin\",\r         \"version\" : 1\r     }\r     ```\r \r     需要从此列表中复制组件的名称（例如，**spark\\_thrift\\_sparkconf** 和 **tag** 值）。\r \r 2. 使用以下命令检索组件和标记的配置：\r \r     ```bash\r     curl -u admin -sS -G \"https://$CLUSTERNAME.azurehdinsight.cn/api/v1/clusters/$CLUSTERNAME/configurations?type=spark-thrift-sparkconf&tag=INITIAL\" \\\r     | jq --arg newtag $(echo version$(date +%s%N)) '.items[] | del(.href, .version, .Config) | .tag |= $newtag | {\"Clusters\": {\"desired_config\": .}}' > newconfig.json\r     ```\r \r     ```powershell\r     $epoch = Get-Date -Year 1970 -Month 1 -Day 1 -Hour 0 -Minute 0 -Second 0\r     $now = Get-Date\r     $unixTimeStamp = [math]::truncate($now.ToUniversalTime().Subtract($epoch).TotalMilliSeconds)\r     $resp = Invoke-WebRequest -Uri \"https://$clusterName.azurehdinsight.cn/api/v1/clusters/$clusterName/configurations?type=spark-thrift-sparkconf&tag=INITIAL\" `\r         -Credential $creds\r     $resp.Content | jq --arg newtag \"version$unixTimeStamp\" '.items[] | del(.href, .version, .Config) | .tag |= $newtag | {\"Clusters\": {\"desired_config\": .}}' > newconfig.json\r     ```\r \r     > [!NOTE]\r     > 将 **spark-thrift-sparkconf** 和 **INITIAL** 替换为要检索其配置的组件和标记。\r \r     Jq 用来将从 HDInsight 检索到的数据转变为新的配置模板。 具体而言，这些示例会执行以下操作：\r \r     * 创建一个包含字符串“version”和日期并存储在 `newtag`中的唯一值。\r \r     * 为新的所需配置创建根文档。\r \r     * 获取 `.items[]` 数组的内容，并将其添加在 **desired_config** 元素下。\r \r     * 删除 `href`、`version` 和 `Config` 元素，因为提交新配置时不需要这些元素。\r \r     * 添加一个值为 `version#################` 的 `tag` 元素。 数字部分基于当前日期。 每个配置必须有唯一的标记。\r \r     最后，将数据保存到 `newconfig.json` 文档。 该文档结构类似于下面的示例：\r \r      ```json\r     {\r         \"Clusters\": {\r             \"desired_config\": {\r             \"tag\": \"version1459260185774265400\",\r             \"type\": \"spark-thrift-sparkconf\",\r             \"properties\": {\r                 ....\r             },\r             \"properties_attributes\": {\r                 ....\r             }\r         }\r     }\r     ```\r \r 3. 打开 `newconfig.json` 文档并在 `properties` 对象中修改/添加值。 以下示例将 `\"spark.yarn.am.memory\"` 的值从 `\"1g\"` 更改为 `\"3g\"`。 它还添加了值为 `\"256m\"` 的 `\"spark.kryoserializer.buffer.max\"`。\r \r         \"spark.yarn.am.memory\": \"3g\",\r         \"spark.kyroserializer.buffer.max\": \"256m\",\r \r     完成修改后，保存该文件。\r \r 4. 使用以下命令将更新的配置提交到 Ambari。\r \r     ```bash\r     curl -u admin -sS -H \"X-Requested-By: ambari\" -X PUT -d @newconfig.json \"https://$CLUSTERNAME.azurehdinsight.cn/api/v1/clusters/$CLUSTERNAME\"\r     ```\r \r     ```powershell\r     $newConfig = Get-Content .\\newconfig.json\r     $resp = Invoke-WebRequest -Uri \"https://$clusterName.azurehdinsight.cn/api/v1/clusters/$clusterName\" `\r         -Credential $creds `\r         -Method PUT `\r         -Headers @{\"X-Requested-By\" = \"ambari\"} `\r         -Body $newConfig\r     $resp.Content\r     ```\r \r     这些命令将 **newconfig.json** 文件的内容作为新的所需配置提交到群集。 该请求会返回一个 JSON 文档。 此文档中的 **versionTag** 元素应该与提交的版本相匹配，并且 **configs** 对象包含你请求的配置更改。\r \r ### <a name=\"example-restart-a-service-component\"></a>示例：重新启动服务组件\r \r 此时，如果查看 Ambari Web UI，会发现 Spark 服务指出需要将它重新启动才能使新配置生效。 使用以下步骤重新启动该服务。\r \r 1. 使用以下命令启用 Spark 服务的维护模式。\r \r     ```bash\r     curl -u admin -sS -H \"X-Requested-By: ambari\" \\\r     -X PUT -d '{\"RequestInfo\": {\"context\": \"turning on maintenance mode for SPARK\"},\"Body\": {\"ServiceInfo\": {\"maintenance_state\":\"ON\"}}}' \\\r     \"https://$CLUSTERNAME.azurehdinsight.cn/api/v1/clusters/$CLUSTERNAME/services/SPARK\"\r     ```\r \r     ```powershell\r     $resp = Invoke-WebRequest -Uri \"https://$clusterName.azurehdinsight.cn/api/v1/clusters/$clusterName/services/SPARK\" `\r         -Credential $creds `\r         -Method PUT `\r         -Headers @{\"X-Requested-By\" = \"ambari\"} `\r         -Body '{\"RequestInfo\": {\"context\": \"turning on maintenance mode for SPARK\"},\"Body\": {\"ServiceInfo\": {\"maintenance_state\":\"ON\"}}}'\r     $resp.Content\r     ```\r \r     这些命令将向服务器发送用于开启维护模式的 JSON 文档。 可以使用以下请求来验证服务当前是否处于维护模式：\r \r     ```bash\r     curl -u admin -sS -H \"X-Requested-By: ambari\" \\\r     \"https://$CLUSTERNAME.azurehdinsight.cn/api/v1/clusters/$CLUSTERNAME/services/SPARK\" \\\r     | jq .ServiceInfo.maintenance_state\r     ```\r \r     ```powershell\r     $resp = Invoke-WebRequest -Uri \"https://$clusterName.azurehdinsight.cn/api/v1/clusters/$clusterName/services/SPARK2\" `\r         -Credential $creds\r     $respObj = ConvertFrom-Json $resp.Content\r     $respObj.ServiceInfo.maintenance_state\r     ```\r \r     返回值为 `ON`。\r \r 2. 接下来，使用以下命令关闭服务：\r \r     ```bash\r     curl -u admin -sS -H \"X-Requested-By: ambari\" \\\r     -X PUT -d '{\"RequestInfo\":{\"context\":\"_PARSE_.STOP.SPARK\",\"operation_level\":{\"level\":\"SERVICE\",\"cluster_name\":\"CLUSTERNAME\",\"service_name\":\"SPARK\"}},\"Body\":{\"ServiceInfo\":{\"state\":\"INSTALLED\"}}}' \\\r     \"https://$CLUSTERNAME.azurehdinsight.cn/api/v1/clusters/$CLUSTERNAME/services/SPARK\"\r     ```\r \r     ```powershell\r     $resp = Invoke-WebRequest -Uri \"https://$clusterName.azurehdinsight.cn/api/v1/clusters/$clusterName/services/SPARK\" `\r         -Credential $creds `\r         -Method PUT `\r         -Headers @{\"X-Requested-By\" = \"ambari\"} `\r         -Body '{\"RequestInfo\":{\"context\":\"_PARSE_.STOP.SPARK\",\"operation_level\":{\"level\":\"SERVICE\",\"cluster_name\":\"CLUSTERNAME\",\"service_name\":\"SPARK\"}},\"Body\":{\"ServiceInfo\":{\"state\":\"INSTALLED\"}}}'\r     $resp.Content\r     ```\r \r     其响应类似于如下示例：\r \r     ```json\r     {\r         \"href\" : \"http://10.0.0.18:8080/api/v1/clusters/CLUSTERNAME/requests/29\",\r         \"Requests\" : {\r             \"id\" : 29,\r             \"status\" : \"Accepted\"\r         }\r     }\r     ```\r \r     > [!IMPORTANT]\r     > 值 `href` 值正在使用群集节点的内部 IP 地址。 若要从群集外部使用该地址，请将“10.0.0.18:8080”部分替换为群集的 FQDN。 \r \r     以下命令检索请求的状态：\r \r     ```bash\r     curl -u admin -sS -H \"X-Requested-By: ambari\" \\\r     \"https://$CLUSTERNAME.azurehdinsight.cn/api/v1/clusters/$CLUSTERNAME/requests/29\" \\\r     | jq .Requests.request_status\r     ```\r \r     ```powershell\r     $resp = Invoke-WebRequest -Uri \"https://$clusterName.azurehdinsight.cn/api/v1/clusters/$clusterName/requests/29\" `\r         -Credential $creds\r     $respObj = ConvertFrom-Json $resp.Content\r     $respObj.Requests.request_status\r     ```\r \r     响应 `COMPLETED` 指示请求已完成。\r \r 3. 完成前一个请求后，请使用以下命令来启动服务。\r \r     ```bash\r     curl -u admin -sS -H \"X-Requested-By: ambari\" \\\r     -X PUT -d '{\"RequestInfo\":{\"context\":\"_PARSE_.STOP.SPARK\",\"operation_level\":{\"level\":\"SERVICE\",\"cluster_name\":\"CLUSTERNAME\",\"service_name\":\"SPARK\"}},\"Body\":{\"ServiceInfo\":{\"state\":\"STARTED\"}}}' \\\r     \"https://$CLUSTERNAME.azurehdinsight.cn/api/v1/clusters/$CLUSTERNAME/services/SPARK\"\r     ```\r \r     ```powershell\r     $resp = Invoke-WebRequest -Uri \"https://$clusterName.azurehdinsight.cn/api/v1/clusters/$clusterName/services/SPARK\" `\r         -Credential $creds `\r         -Method PUT `\r         -Headers @{\"X-Requested-By\" = \"ambari\"} `\r         -Body '{\"RequestInfo\":{\"context\":\"_PARSE_.STOP.SPARK\",\"operation_level\":{\"level\":\"SERVICE\",\"cluster_name\":\"CLUSTERNAME\",\"service_name\":\"SPARK\"}},\"Body\":{\"ServiceInfo\":{\"state\":\"STARTED\"}}}'\r     ```\r     服务现在正在使用新配置。\r \r 4. 最后，使用以下命令关闭维护模式。\r \r     ```bash\r     curl -u admin -sS -H \"X-Requested-By: ambari\" \\\r     -X PUT -d '{\"RequestInfo\": {\"context\": \"turning off maintenance mode for SPARK\"},\"Body\": {\"ServiceInfo\": {\"maintenance_state\":\"OFF\"}}}' \\\r     \"https://$CLUSTERNAME.azurehdinsight.cn/api/v1/clusters/$CLUSTERNAME/services/SPARK\"\r     ```\r \r     ```powershell\r     $resp = Invoke-WebRequest -Uri \"https://$clusterName.azurehdinsight.cn/api/v1/clusters/$clusterName/services/SPARK\" `\r         -Credential $creds `\r         -Method PUT `\r         -Headers @{\"X-Requested-By\" = \"ambari\"} `\r         -Body '{\"RequestInfo\": {\"context\": \"turning off maintenance mode for SPARK\"},\"Body\": {\"ServiceInfo\": {\"maintenance_state\":\"OFF\"}}}'\r     ```\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r 有关 REST API 的完整参考，请参阅 [Ambari API 参考 V1](https://github.com/apache/ambari/blob/trunk/ambari-server/docs/api/v1/index.md)。\r <!--Update_Description: update wording and link references-->"}