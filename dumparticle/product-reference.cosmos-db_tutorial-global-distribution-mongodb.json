{"Title":"MongoDB API 的 Azure Cosmos DB 全局分发教程","Description":"了解如何使用 MongoDB API 设置 Azure Cosmos DB 全局分发。","Content":"# <a name=\"how-to-setup-azure-cosmos-db-global-distribution-using-the-mongodb-api\"></a>如何使用 MongoDB API 设置 Azure Cosmos DB 全局分发\r \r 本文介绍了如何使用 Azure 门户设置 Azure Cosmos DB 全局分发，然后使用 MongoDB API 进行连接。\r \r 本文涵盖以下任务： \r \r > [!div class=\"checklist\"]\r > * 使用 Azure 门户配置全局分发\r > * 使用 [MongoDB API](mongodb-introduction.md) 配置全局分发\r \r [!INCLUDE [cosmos-db-tutorial-global-distribution-portal](../../includes/cosmos-db-tutorial-global-distribution-portal.md)]\r \r ## <a name=\"verifying-your-regional-setup-using-the-mongodb-api\"></a>使用 MongoDB API 验证区域设置\r 仔细检查 MongoDB 的 API 中的全局配置的最简单方法是从 Mongo Shell 运行 *isMaster()* 命令。\r \r 从 Mongo Shell：\r \r    ```\r       db.isMaster()\r    ```\r \r 示例结果：\r \r    ```JSON\r       {\r          \"_t\": \"IsMasterResponse\",\r          \"ok\": 1,\r          \"ismaster\": true,\r          \"maxMessageSizeBytes\": 4194304,\r          \"maxWriteBatchSize\": 1000,\r          \"minWireVersion\": 0,\r          \"maxWireVersion\": 2,\r          \"tags\": {\r             \"region\": \"South India\"\r          },\r          \"hosts\": [\r             \"vishi-api-for-mongodb-chinaeast.documents.azure.cn:10255\",\r             \"vishi-api-for-mongodb-chinanorth.documents.azure.cn:10255\",\r          ],\r          \"setName\": \"globaldb\",\r          \"setVersion\": 1,\r          \"primary\": \"vishi-api-for-mongodb-chinaeast.documents.azure.cn:10255\",\r          \"me\": \"vishi-api-for-mongodb-chinanorth.documents.azure.cn:10255\"\r       }\r    ```\r \r ## <a name=\"connecting-to-a-preferred-region-using-the-mongodb-api\"></a>使用 MongoDB API 连接到首选区域\r \r 使用 MongoDB API，可以为全局分布式数据库指定集合的读取首选项。 为实现低延迟读取和全局高可用性，建议将集合的读取首选项设置为“就近”。 当读取首选项配置为“就近”时，将从最近的区域进行读取。\r \r ```csharp\r var collection = database.GetCollection<BsonDocument>(collectionName);\r collection = collection.WithReadPreference(new ReadPreference(ReadPreferenceMode.Nearest));\r ```\r \r 对于具有主读取/写入区域和用于灾难恢复 (DR) 方案的辅助区域的应用程序，建议将集合的读取首选项设置为“辅助优先”。 当读取首选项配置为“辅助优先”时，如果主区域不可用，将从辅助区域进行读取。\r \r ```csharp\r var collection = database.GetCollection<BsonDocument>(collectionName);\r collection = collection.WithReadPreference(new ReadPreference(ReadPreferenceMode.SecondaryPreferred));\r ```\r \r 最后，如果愿意，可以手动指定读取区域。 可以在读取首选项内设置区域标记。\r \r ```csharp\r var collection = database.GetCollection<BsonDocument>(collectionName);\r var tag = new Tag(\"region\", \"China East\");\r collection = collection.WithReadPreference(new ReadPreference(ReadPreferenceMode.Secondary, new[] { new TagSet(new[] { tag }) }));\r ```\r \r 本教程到此结束。 阅读 [Azure Cosmos DB 中的一致性级别](consistency-levels.md)，了解如何管理全局复制帐户的一致性。 若要深入了解 Azure Cosmos DB 中全局数据库复制的工作原理，请参阅[使用 Azure Cosmos DB 全局分发数据](distribute-data-globally.md)。\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r 在本教程中已完成以下操作：\r \r > [!div class=\"checklist\"]\r > * 使用 Azure 门户配置全局分发\r > * 使用 DocumentDB API 配置全局分发\r \r 现可继续学习下一个教程，了解如何使用 Azure Cosmos DB 本地模拟器在本地开发。\r \r > [!div class=\"nextstepaction\"]\r > [通过模拟器在本地开发](local-emulator.md)\r \r <!--Update_Description: update meta properties,wording update-->"}