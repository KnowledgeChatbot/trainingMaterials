{"Title":"如何使用 Docker Machine 在 Azure 中创建主机","Description":"介绍如何使用 Docker Machine 在 Azure 中创建 Docker 主机。","Content":"# <a name=\"how-to-use-docker-machine-to-create-hosts-in-azure\"></a>如何使用 Docker Machine 在 Azure 中创建主机\r 本文详细介绍如何使用 [Docker Machine](https://docs.docker.com/machine/) 在 Azure 中创建主机。 `docker-machine` 命令在 Azure 中创建一个 Linux 虚拟机 (VM)，然后安装 Docker。 然后，可以使用相同的本地工具和工作流来管理 Azure 中的 Docker 主机。 若要在 Windows 10 中使用 docker-machine，必须使用 Linux bash。\r \r ## <a name=\"create-vms-with-docker-machine\"></a>使用 Docker 计算机创建 VM\r 首先，使用 [az account show](https://docs.azure.cn/zh-cn/cli/account?view=azure-cli-latest#show) 获取 Azure 订阅 ID，如下所示：\r \r ```azurecli\r sub=$(az account show --query \"id\" -o tsv)\r ```\r \r 通过指定 *azure* 作为驱动程序，在 Azure 中使用 `docker-machine create` 创建 Docker 主机 VM。 有关详细信息，请参阅 [Docker Azure 驱动程序文档](https://docs.docker.com/machine/drivers/azure/)\r \r 以下示例基于“标准 D2 v2”计划创建一个名为“myVM”的 VM，创建一个名为“azureuser”的用户帐户，并在主 VM 上打开端口 *80*。 按照任何提示登录 Azure 帐户，并授予 Docker Machine 创建和管理资源的权限。\r \r ```bash\r docker-machine create -d azure \\\r     --azure-subscription-id $sub \\\r     --azure-ssh-user azureuser \\\r     --azure-open-port 80 \\\r     --azure-size \"Standard_D2_v2\" \\\r     myvm\r ```\r \r 输出内容类似于下面的示例：\r \r ```bash\r Creating CA: /Users/user/.docker/machine/certs/ca.pem\r Creating client certificate: /Users/user/.docker/machine/certs/cert.pem\r Running pre-create checks...\r (myvmdocker) Completed machine pre-create checks.\r Creating machine...\r (myvmdocker) Querying existing resource group.  name=\"docker-machine\"\r (myvmdocker) Creating resource group.  name=\"docker-machine\" location=\"chinanorth\"\r (myvmdocker) Configuring availability set.  name=\"docker-machine\"\r (myvmdocker) Configuring network security group.  name=\"myvmdocker-firewall\" location=\"chinanorth\"\r (myvmdocker) Querying if virtual network already exists.  rg=\"docker-machine\" location=\"chinanorth\" name=\"docker-machine-vnet\"\r (myvmdocker) Creating virtual network.  name=\"docker-machine-vnet\" rg=\"docker-machine\" location=\"chinanorth\"\r (myvmdocker) Configuring subnet.  name=\"docker-machine\" vnet=\"docker-machine-vnet\" cidr=\"192.168.0.0/16\"\r (myvmdocker) Creating public IP address.  name=\"myvmdocker-ip\" static=false\r (myvmdocker) Creating network interface.  name=\"myvmdocker-nic\"\r (myvmdocker) Creating storage account.  sku=Standard_LRS name=\"vhdski0hvfazyd8mn991cg50\" location=\"chinanorth\"\r (myvmdocker) Creating virtual machine.  location=\"chinanorth\" size=\"Standard_A2\" username=\"azureuser\" osImage=\"canonical:UbuntuServer:16.04.0-LTS:latest\" name=\"myvmdocker\"\r Waiting for machine to be running, this may take a few minutes...\r Detecting operating system of created instance...\r Waiting for SSH to be available...\r Detecting the provisioner...\r Provisioning with ubuntu(systemd)...\r Installing Docker...\r Copying certs to the local machine directory...\r Copying certs to the remote machine...\r Setting Docker configuration on the remote daemon...\r Checking connection to Docker...\r Docker is up and running!\r To see how to connect your Docker Client to the Docker Engine running on this virtual machine, run: docker-machine env myvmdocker\r ```\r \r ## <a name=\"configure-your-docker-shell\"></a>配置 Docker shell\r 若要连接到 Azure 中的 Docker 主机，请定义适当的连接设置。 按输出末尾所示，查看 Docker 主机的连接信息，如下所示： \r \r ```bash\r docker-machine env myvmdocker\r ```\r \r 输出类似于以下示例：\r \r ```bash\r export DOCKER_TLS_VERIFY=\"1\"\r export DOCKER_HOST=\"tcp://40.68.254.142:2376\"\r export DOCKER_CERT_PATH=\"/Users/user/.docker/machine/machines/machine\"\r export DOCKER_MACHINE_NAME=\"machine\"\r # Run this command to configure your shell:\r # eval $(docker-machine env myvmdocker)\r ```\r \r 若要定义连接设置，可以运行建议的配置命令 (`eval $(docker-machine env myvmdocker)`)，也可以手动设置环境变量。 \r \r ## <a name=\"run-a-container\"></a>运行容器\r 若要查看运行中的容器，请运行一个基本的 NGINX Web 服务器。 使用 `docker run` 创建一个容器，并为 Web 流量公开端口 80，如下所示：\r \r ```bash\r docker run -d -p 80:80 --restart=always nginx\r ```\r \r 输出类似于以下示例：\r \r ```bash\r Unable to find image 'nginx:latest' locally\r latest: Pulling from library/nginx\r ff3d52d8f55f: Pull complete\r 226f4ec56ba3: Pull complete\r 53d7dd52b97d: Pull complete\r Digest: sha256:41ad9967ea448d7c2b203c699b429abe1ed5af331cd92533900c6d77490e0268\r Status: Downloaded newer image for nginx:latest\r 675e6056cb81167fe38ab98bf397164b01b998346d24e567f9eb7a7e94fba14a\r ```\r \r 使用 `docker ps` 查看正在运行的容器。 以下示例输出显示使用公开的端口 80 运行的 NGINX 容器：\r \r ```bash\r CONTAINER ID    IMAGE    COMMAND                   CREATED          STATUS          PORTS                          NAMES\r d5b78f27b335    nginx    \"nginx -g 'daemon off\"    5 minutes ago    Up 5 minutes    0.0.0.0:80->80/tcp, 443/tcp    festive_mirzakhani\r ```\r \r ## <a name=\"test-the-container\"></a>测试容器\r 获取 Docker 主机的公共 IP 地址，如下所示：\r \r ```bash\r docker-machine ip myvmdocker\r ```\r \r 若要查看运行中的容器，请打开 Web 浏览器并输入上述命令输出中注明的公共 IP 地址：\r \r ![运行 ngnix 容器](./media/docker-machine/nginx.png)\r \r ## <a name=\"next-steps\"></a>后续步骤\r 也可以使用 [Docker VM 扩展](dockerextension.md)创建主机。 有关使用 Docker Compose 的示例，请参阅 [Azure 中的 Docker 和 Compose 入门](docker-compose-quickstart.md)。\r \r <!--Update_Description: wording update-->"}