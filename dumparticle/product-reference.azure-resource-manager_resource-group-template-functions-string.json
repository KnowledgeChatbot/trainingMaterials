{"Title":"Azure Resource Manager 模板函数 - 字符串","Description":"介绍了可在 Azure Resource Manager 模板中用来处理字符串的函数。","Content":"# <a name=\"string-functions-for-azure-resource-manager-templates\"></a>用于 Azure Resource Manager 模板的字符串函数\r \r Resource Manager 提供以下用于处理字符串的函数：\r \r * [base64](#base64)\r * [base64ToJson](#base64tojson)\r * [base64ToString](#base64tostring)\r * [concat](#concat)\r * [contains](#contains)\r * [dataUri](#datauri)\r * [dataUriToString](#datauritostring)\r * [empty](#empty)\r * [endsWith](#endswith)\r * [first](#first)\r * [guid](#guid)\r * [indexOf](#indexof)\r * [last](#last)\r * [lastIndexOf](#lastindexof)\r * [length](#length)\r * [padLeft](#padleft)\r * [replace](#replace)\r * [skip](#skip)\r * [split](#split)\r * [startsWith](resource-group-template-functions-string.md#startswith)\r * [字符串](#string)\r * [substring](#substring)\r * [take](#take)\r * [toLower](#tolower)\r * [toUpper](#toupper)\r * [trim](#trim)\r * [uniqueString](#uniquestring)\r * [uri](#uri)\r * [uriComponent](resource-group-template-functions-string.md#uricomponent)\r * [uriComponentToString](resource-group-template-functions-string.md#uricomponenttostring)\r \r <a id=\"base64\" />\r \r ## <a name=\"base64\"></a>base64\r `base64(inputString)`\r \r 返回输入字符串的 base64 表示形式。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | inputString |是 |字符串 |要以 base64 表示形式返回的值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 包含 base64 表示形式的字符串。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/base64.json)演示如何使用 base64 函数。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"stringData\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"one, two, three\"\r         },\r         \"jsonFormattedData\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"{'one': 'a', 'two': 'b'}\"\r         }\r     },\r     \"variables\": {\r         \"base64String\": \"[base64(parameters('stringData'))]\",\r         \"base64Object\": \"[base64(parameters('jsonFormattedData'))]\"\r     },\r     \"resources\": [\r     ],\r     \"outputs\": {\r         \"base64Output\": {\r             \"type\": \"string\",\r             \"value\": \"[variables('base64String')]\"\r         },\r         \"toStringOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[base64ToString(variables('base64String'))]\"\r         },\r         \"toJsonOutput\": {\r             \"type\": \"object\",\r             \"value\": \"[base64ToJson(variables('base64Object'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | base64Output | String | b25lLCB0d28sIHRocmVl |\r | toStringOutput | String | one, two, three |\r | toJsonOutput | 对象 | {\"one\": \"a\", \"two\": \"b\"} |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/base64.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/base64.json\r ```\r \r <a id=\"base64tojson\" />\r \r ## <a name=\"base64tojson\"></a>base64ToJson\r `base64tojson`\r \r 将 base64 表示形式转换为 JSON 对象。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | base64Value |是 |字符串 |要转换为 JSON 对象的 base64 表示形式。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 一个 JSON 对象。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/base64.json)使用 base64ToJson 函数转换 base64 值：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"stringData\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"one, two, three\"\r         },\r         \"jsonFormattedData\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"{'one': 'a', 'two': 'b'}\"\r         }\r     },\r     \"variables\": {\r         \"base64String\": \"[base64(parameters('stringData'))]\",\r         \"base64Object\": \"[base64(parameters('jsonFormattedData'))]\"\r     },\r     \"resources\": [\r     ],\r     \"outputs\": {\r         \"base64Output\": {\r             \"type\": \"string\",\r             \"value\": \"[variables('base64String')]\"\r         },\r         \"toStringOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[base64ToString(variables('base64String'))]\"\r         },\r         \"toJsonOutput\": {\r             \"type\": \"object\",\r             \"value\": \"[base64ToJson(variables('base64Object'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | base64Output | String | b25lLCB0d28sIHRocmVl |\r | toStringOutput | String | one, two, three |\r | toJsonOutput | 对象 | {\"one\": \"a\", \"two\": \"b\"} |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/base64.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/base64.json\r ```\r \r <a id=\"base64tostring\" />\r \r ## <a name=\"base64tostring\"></a>base64ToString\r `base64ToString(base64Value)`\r \r 将 base64 表示形式转换为字符串。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | base64Value |是 |字符串 |要转换为字符串的 base64 表示形式。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 转换后的 base64 值的字符串。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/base64.json)使用 base64ToString 函数转换 base64 值：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"stringData\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"one, two, three\"\r         },\r         \"jsonFormattedData\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"{'one': 'a', 'two': 'b'}\"\r         }\r     },\r     \"variables\": {\r         \"base64String\": \"[base64(parameters('stringData'))]\",\r         \"base64Object\": \"[base64(parameters('jsonFormattedData'))]\"\r     },\r     \"resources\": [\r     ],\r     \"outputs\": {\r         \"base64Output\": {\r             \"type\": \"string\",\r             \"value\": \"[variables('base64String')]\"\r         },\r         \"toStringOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[base64ToString(variables('base64String'))]\"\r         },\r         \"toJsonOutput\": {\r             \"type\": \"object\",\r             \"value\": \"[base64ToJson(variables('base64Object'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | base64Output | String | b25lLCB0d28sIHRocmVl |\r | toStringOutput | String | one, two, three |\r | toJsonOutput | 对象 | {\"one\": \"a\", \"two\": \"b\"} |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/base64.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/base64.json\r ```\r \r <a id=\"concat\" />\r \r ## <a name=\"concat\"></a>concat\r `concat (arg1, arg2, arg3, ...)`\r \r 合并多个字符串值并返回串联的字符串，或合并多个数组并返回串联的数组。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | arg1 |是 |字符串或数组 |串联的第一个值。 |\r | 其他参数 |否 |字符串 |要按顺序串联的其他值。 |\r \r ### <a name=\"return-value\"></a>返回值\r 由串联值构成的字符串或数组。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/concat-string.json)演示如何组合两个字符串值并返回串联的字符串。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"prefix\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"prefix\"\r         }\r     },\r     \"resources\": [],\r     \"outputs\": {\r         \"concatOutput\": {\r             \"value\": \"[concat(parameters('prefix'), '-', uniqueString(resourceGroup().id))]\",\r             \"type\" : \"string\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | concatOutput | String | prefix-5yj4yjf5mbg72 |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/concat-string.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/concat-string.json\r ```\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/concat-array.json)演示如何组合两个数组。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": { \r         \"firstArray\": { \r             \"type\": \"array\", \r             \"defaultValue\": [ \r                 \"1-1\", \r                 \"1-2\", \r                 \"1-3\" \r             ] \r         },\r         \"secondArray\": {\r             \"type\": \"array\", \r             \"defaultValue\": [ \r                 \"2-1\", \r                 \"2-2\",\r                 \"2-3\" \r             ] \r         }\r     },\r     \"resources\": [\r     ],\r     \"outputs\": {\r         \"return\": {\r             \"type\": \"array\",\r             \"value\": \"[concat(parameters('firstArray'), parameters('secondArray'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | return | Array | [\"1-1\", \"1-2\", \"1-3\", \"2-1\", \"2-2\", \"2-3\"] |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/concat-array.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/concat-array.json\r ```\r \r <a id=\"contains\" />\r \r ## <a name=\"contains\"></a>contains\r `contains (container, itemToFind)`\r \r 检查数组是否包含某个值、某个对象是否包含某个键，或者某个字符串是否包含某个子字符串。\r \r ### <a name=\"parameters\"></a>Parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | container |是 |数组、对象或字符串 |包含要查找的值的值。 |\r | itemToFind |是 |字符串或整数 |要查找的值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 如果找到该项，则为 **True**；否则为 **False**。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/contains.json)演示如何对不同的类型使用 contains：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"stringToTest\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"OneTwoThree\"\r         },\r         \"objectToTest\": {\r             \"type\": \"object\",\r             \"defaultValue\": {\"one\": \"a\", \"two\": \"b\", \"three\": \"c\"}\r         },\r         \"arrayToTest\": {\r             \"type\": \"array\",\r             \"defaultValue\": [\"one\", \"two\", \"three\"]\r         }\r     },\r     \"resources\": [\r     ],\r     \"outputs\": {\r         \"stringTrue\": {\r             \"type\": \"bool\",\r             \"value\": \"[contains(parameters('stringToTest'), 'e')]\"\r         },\r         \"stringFalse\": {\r             \"type\": \"bool\",\r             \"value\": \"[contains(parameters('stringToTest'), 'z')]\"\r         },\r         \"objectTrue\": {\r             \"type\": \"bool\",\r             \"value\": \"[contains(parameters('objectToTest'), 'one')]\"\r         },\r         \"objectFalse\": {\r             \"type\": \"bool\",\r             \"value\": \"[contains(parameters('objectToTest'), 'a')]\"\r         },\r         \"arrayTrue\": {\r             \"type\": \"bool\",\r             \"value\": \"[contains(parameters('arrayToTest'), 'three')]\"\r         },\r         \"arrayFalse\": {\r             \"type\": \"bool\",\r             \"value\": \"[contains(parameters('arrayToTest'), 'four')]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | stringTrue | Bool | True |\r | stringFalse | Bool | False |\r | objectTrue | Bool | True |\r | objectFalse | Bool | False |\r | arrayTrue | Bool | True |\r | arrayFalse | Bool | False |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/contains.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/contains.json\r ```\r \r <a id=\"datauri\" />\r \r ## <a name=\"datauri\"></a>dataUri\r `dataUri(stringToConvert)`\r \r 将一个值转换为数据 URI。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | stringToConvert |是 |字符串 |要转换为数据 URI 的值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 格式为数据 URI 的字符串。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/datauri.json)将值转换为数据 URI，然后将数据 URI 转换为字符串：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"stringToTest\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"Hello\"\r         },\r         \"dataFormattedString\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"data:;base64,SGVsbG8sIFdvcmxkIQ==\"\r         }\r     },\r     \"resources\": [],\r     \"outputs\": {\r         \"dataUriOutput\": {\r             \"value\": \"[dataUri(parameters('stringToTest'))]\",\r             \"type\" : \"string\"\r         },\r         \"toStringOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[dataUriToString(parameters('dataFormattedString'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | dataUriOutput | String | data:text/plain;charset=utf8;base64,SGVsbG8= |\r | toStringOutput | String | Hello, World! |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/datauri.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/datauri.json\r ```\r \r <a id=\"datauritostring\" />\r \r ## <a name=\"datauritostring\"></a>dataUriToString\r `dataUriToString(dataUriToConvert)`\r \r 将采用数据 URI 格式的值转换为字符串。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | dataUriToConvert |是 |字符串 |要转换的数据 URI 值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 包含转换后的值的字符串。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/datauri.json)将值转换为数据 URI，然后将数据 URI 转换为字符串：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"stringToTest\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"Hello\"\r         },\r         \"dataFormattedString\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"data:;base64,SGVsbG8sIFdvcmxkIQ==\"\r         }\r     },\r     \"resources\": [],\r     \"outputs\": {\r         \"dataUriOutput\": {\r             \"value\": \"[dataUri(parameters('stringToTest'))]\",\r             \"type\" : \"string\"\r         },\r         \"toStringOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[dataUriToString(parameters('dataFormattedString'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | dataUriOutput | String | data:text/plain;charset=utf8;base64,SGVsbG8= |\r | toStringOutput | String | Hello, World! |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/datauri.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/datauri.json\r ```\r \r <a id=\"empty\" /> \r \r ## <a name=\"empty\"></a>empty\r `empty(itemToTest)`\r \r 确定数组、对象或字符串是否为空。\r \r ### <a name=\"parameters\"></a>Parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | itemToTest |是 |数组、对象或字符串 |要检查是否为空的值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 如果该值为空，则返回 **True**；否则返回 **False**。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/empty.json)检查某个数组、对象和字符串是否为空。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"testArray\": {\r             \"type\": \"array\",\r             \"defaultValue\": []\r         },\r         \"testObject\": {\r             \"type\": \"object\",\r             \"defaultValue\": {}\r         },\r         \"testString\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"\"\r         }\r     },\r     \"resources\": [\r     ],\r     \"outputs\": {\r         \"arrayEmpty\": {\r             \"type\": \"bool\",\r             \"value\": \"[empty(parameters('testArray'))]\"\r         },\r         \"objectEmpty\": {\r             \"type\": \"bool\",\r             \"value\": \"[empty(parameters('testObject'))]\"\r         },\r         \"stringEmpty\": {\r             \"type\": \"bool\",\r             \"value\": \"[empty(parameters('testString'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | arrayEmpty | Bool | True |\r | objectEmpty | Bool | True |\r | stringEmpty | Bool | True |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/empty.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/empty.json\r ```\r \r <a id=\"endswith\" />\r \r ## <a name=\"endswith\"></a>endsWith\r `endsWith(stringToSearch, stringToFind)`\r \r 确定某个字符串是否以某个值结尾。 比较不区分大小写。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | stringToSearch |是 |字符串 |包含要查找的项的值。 |\r | stringToFind |是 |字符串 |要查找的值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 如果字符串的最后一个或多个字符与该值匹配，则为 **True**；否则为 **False**。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/startsendswith.json)演示如何使用 startsWith 和 endsWith 函数：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"resources\": [],\r     \"outputs\": {\r         \"startsTrue\": {\r             \"value\": \"[startsWith('abcdef', 'ab')]\",\r             \"type\" : \"bool\"\r         },\r         \"startsCapTrue\": {\r             \"value\": \"[startsWith('abcdef', 'A')]\",\r             \"type\" : \"bool\"\r         },\r         \"startsFalse\": {\r             \"value\": \"[startsWith('abcdef', 'e')]\",\r             \"type\" : \"bool\"\r         },\r         \"endsTrue\": {\r             \"value\": \"[endsWith('abcdef', 'ef')]\",\r             \"type\" : \"bool\"\r         },\r         \"endsCapTrue\": {\r             \"value\": \"[endsWith('abcdef', 'F')]\",\r             \"type\" : \"bool\"\r         },\r         \"endsFalse\": {\r             \"value\": \"[endsWith('abcdef', 'e')]\",\r             \"type\" : \"bool\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | startsTrue | Bool | True |\r | startsCapTrue | Bool | True |\r | startsFalse | Bool | False |\r | endsTrue | Bool | True |\r | endsCapTrue | Bool | True |\r | endsFalse | Bool | False |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/startsendswith.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/startsendswith.json\r ```\r \r <a id=\"first\" />\r \r ## <a name=\"first\"></a>first\r `first(arg1)`\r \r 返回字符串的第一个字符，或数组的第一个元素。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | arg1 |是 |数组或字符串 |要检索第一个元素或字符的值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 第一个字符的字符串，或者数组中第一个元素的类型（字符串、整数、数组或对象）。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/first.json)演示如何对数组和字符串使用 first 函数。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"arrayToTest\": {\r             \"type\": \"array\",\r             \"defaultValue\": [\"one\", \"two\", \"three\"]\r         }\r     },\r     \"resources\": [\r     ],\r     \"outputs\": {\r         \"arrayOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[first(parameters('arrayToTest'))]\"\r         },\r         \"stringOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[first('One Two Three')]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | arrayOutput | String | one |\r | stringOutput | String | O |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/first.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/first.json\r ```\r \r ## <a name=\"guid\"></a>GUID\r \r `guid (baseString, ...)`\r \r 基于以参数形式提供的值创建一个采用全局唯一标识符格式的值。\r \r ### <a name=\"parameters\"></a>Parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | baseString |是 |字符串 |哈希函数中用于创建 GUID 的值。 |\r | 根据需要使用其他参数 |否 |字符串 |可以添加任意数目的字符串，以创建指定唯一性级别的值。 |\r \r ### <a name=\"remarks\"></a>备注\r \r 当需要以全局唯一标识符格式创建值时，此功能十分有用。 提供参数值，这些值用于限制结果的唯一性范围。 可以指定该名称对于订阅、资源组或部署是否唯一。\r \r 返回的值不是随机字符串，而是哈希函数的结果。 返回的值长度为 36 个字符。 并非全局唯一。\r \r 以下示例演示如何使用 guid 创建常用级别唯一值。\r \r 仅对订阅唯一\r \r ```json\r \"[guid(subscription().subscriptionId)]\"\r ```\r \r 仅对资源组唯一\r \r ```json\r \"[guid(resourceGroup().id)]\"\r ```\r \r 仅对资源组的部署唯一\r \r ```json\r \"[guid(resourceGroup().id, deployment().name)]\"\r ```\r \r ### <a name=\"return-value\"></a>返回值\r \r 包含 36 个字符的全局唯一标识符格式的字符串。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/guid.json)从 guid 返回结果：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {},\r     \"variables\": {},\r     \"resources\": [],\r     \"outputs\": {\r         \"guidPerSubscription\": {\r             \"value\": \"[guid(subscription().subscriptionId)]\",\r             \"type\": \"string\"\r         },\r         \"guidPerResourceGroup\": {\r             \"value\": \"[guid(resourceGroup().id)]\",\r             \"type\": \"string\"\r         },\r         \"guidPerDeployment\": {\r             \"value\": \"[guid(resourceGroup().id, deployment().name)]\",\r             \"type\": \"string\"\r         }\r     }\r }\r ```\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/guid.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/guid.json\r ```\r \r <a id=\"indexof\" />\r \r ## <a name=\"indexof\"></a>indexOf\r `indexOf(stringToSearch, stringToFind)`\r \r 返回字符串中某个值的第一个位置。 比较不区分大小写。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | stringToSearch |是 |字符串 |包含要查找的项的值。 |\r | stringToFind |是 |字符串 |要查找的值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 一个整数，表示要查找的项的位置。 该值从零开始。 如果未找到该项，则返回 -1。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/indexof.json)演示如何使用 indexOf 和 lastIndexOf 函数：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"resources\": [],\r     \"outputs\": {\r         \"firstT\": {\r             \"value\": \"[indexOf('test', 't')]\",\r             \"type\" : \"int\"\r         },\r         \"lastT\": {\r             \"value\": \"[lastIndexOf('test', 't')]\",\r             \"type\" : \"int\"\r         },\r         \"firstString\": {\r             \"value\": \"[indexOf('abcdef', 'CD')]\",\r             \"type\" : \"int\"\r         },\r         \"lastString\": {\r             \"value\": \"[lastIndexOf('abcdef', 'AB')]\",\r             \"type\" : \"int\"\r         },\r         \"notFound\": {\r             \"value\": \"[indexOf('abcdef', 'z')]\",\r             \"type\" : \"int\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | firstT | int | 0 |\r | lastT | int | 3 |\r | firstString | int | 2 |\r | lastString | int | 0 |\r | notFound | int | -1 |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/indexof.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/indexof.json\r ```\r \r <a id=\"last\" />\r \r ## <a name=\"last\"></a>last\r `last (arg1)`\r \r 返回字符串的最后一个字符，或数组的最后一个元素。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | arg1 |是 |数组或字符串 |要检索最后一个元素或字符的值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 最后一个字符的字符串，或者数组中最后一个元素的类型（字符串、整数、数组或对象）。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/last.json)演示如何对数组和字符串使用 last 函数。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"arrayToTest\": {\r             \"type\": \"array\",\r             \"defaultValue\": [\"one\", \"two\", \"three\"]\r         }\r     },\r     \"resources\": [\r     ],\r     \"outputs\": {\r         \"arrayOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[last(parameters('arrayToTest'))]\"\r         },\r         \"stringOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[last('One Two Three')]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | arrayOutput | String | three |\r | stringOutput | String | e |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/last.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/last.json\r ```\r \r <a id=\"lastindexof\" />\r \r ## <a name=\"lastindexof\"></a>lastIndexOf\r `lastIndexOf(stringToSearch, stringToFind)`\r \r 返回字符串中某个值的最后一个位置。 比较不区分大小写。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | stringToSearch |是 |字符串 |包含要查找的项的值。 |\r | stringToFind |是 |字符串 |要查找的值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 一个整数，表示要查找的项的最后一个位置。 该值从零开始。 如果未找到该项，则返回 -1。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/indexof.json)演示如何使用 indexOf 和 lastIndexOf 函数：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"resources\": [],\r     \"outputs\": {\r         \"firstT\": {\r             \"value\": \"[indexOf('test', 't')]\",\r             \"type\" : \"int\"\r         },\r         \"lastT\": {\r             \"value\": \"[lastIndexOf('test', 't')]\",\r             \"type\" : \"int\"\r         },\r         \"firstString\": {\r             \"value\": \"[indexOf('abcdef', 'CD')]\",\r             \"type\" : \"int\"\r         },\r         \"lastString\": {\r             \"value\": \"[lastIndexOf('abcdef', 'AB')]\",\r             \"type\" : \"int\"\r         },\r         \"notFound\": {\r             \"value\": \"[indexOf('abcdef', 'z')]\",\r             \"type\" : \"int\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | firstT | int | 0 |\r | lastT | int | 3 |\r | firstString | int | 2 |\r | lastString | int | 0 |\r | notFound | int | -1 |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/indexof.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/indexof.json\r ```\r \r <a id=\"length\" />\r \r ## <a name=\"length\"></a>length\r `length(string)`\r \r 返回字符串中的字符数，或数组中的元素数。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | arg1 |是 |数组或字符串 |用于获取元素数的数组，或用于获取字符数的字符串。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 一个整数。 \r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/length.json)演示如何对数组和字符串使用 length：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"arrayToTest\": {\r             \"type\": \"array\",\r             \"defaultValue\": [\r                 \"one\",\r                 \"two\",\r                 \"three\"\r             ]\r         },\r         \"stringToTest\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"One Two Three\"\r         }\r     },\r     \"resources\": [],\r     \"outputs\": {\r         \"arrayLength\": {\r             \"type\": \"int\",\r             \"value\": \"[length(parameters('arrayToTest'))]\"\r         },\r         \"stringLength\": {\r             \"type\": \"int\",\r             \"value\": \"[length(parameters('stringToTest'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | arrayLength | int | 3 |\r | stringLength | int | 13 |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/length.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/length.json\r ```\r \r <a id=\"padleft\" />\r \r ## <a name=\"padleft\"></a>padLeft\r `padLeft(valueToPad, totalLength, paddingCharacter)`\r \r 通过向左侧添加字符直至到达指定的总长度返回右对齐的字符串。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | valueToPad |是 |字符串或整数 |要右对齐的值。 |\r | totalLength |是 |int |返回字符串中的字符总数。 |\r | paddingCharacter |否 |单个字符 |要用于向左填充直到达到总长度的字符。 默认值为空格。 |\r \r 如果原始字符串的长度超过要填充的字符数，则不会添加任何字符。\r \r ### <a name=\"return-value\"></a>返回值\r \r 一个字符串，其中至少包含指定的字符数。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/padleft.json)演示如何通过添加零字符直至达到字符总数，来填充用户提供的参数值。 \r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"testString\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"123\"\r         }\r     },\r     \"resources\": [],\r     \"outputs\": {\r         \"stringOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[padLeft(parameters('testString'),10,'0')]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | stringOutput | String | 0000000123 |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/padleft.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/padleft.json\r ```\r \r <a id=\"replace\" />\r \r ## <a name=\"replace\"></a>replace\r `replace(originalString, oldString, newString)`\r \r 返回其中某个字符串的所有实例均替换为另一个字符串的新字符串。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | originalString |是 |字符串 |包含某一个字符串的所有实例均替换为另一个字符串的值。 |\r | oldString |是 |字符串 |要从原始字符串中删除的字符串。 |\r | newString |是 |字符串 |要添加以替代已删除字符串的字符串。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 包含被替换字符的字符串。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/replace.json)演示如何从用户提供的字符串中删除所有短划线，以及如何将字符串的一部分替换为其他字符串。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"testString\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"123-123-1234\"\r         }\r     },\r     \"resources\": [],\r     \"outputs\": {\r         \"firstOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[replace(parameters('testString'),'-', '')]\"\r         },\r         \"secodeOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[replace(parameters('testString'),'1234', 'xxxx')]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | firstOutput | String | 1231231234 |\r | secodeOutput | String | 123-123-xxxx |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/replace.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/replace.json\r ```\r \r <a id=\"skip\" />\r \r ## <a name=\"skip\"></a>skip\r `skip(originalValue, numberToSkip)`\r \r 返回一个字符串，其中包含指定字符数后面的所有字符；或者返回一个数组，其中包含指定元素数后面的所有元素。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | originalValue |是 |数组或字符串 |用于跳过的数组或字符串。 |\r | numberToSkip |是 |int |要跳过的元素数或字符数。 如果此值小于或等于 0，则返回值中的所有元素或字符。 如果此值大于数组或字符串的长度，则返回空数组或字符串。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 数组或字符串。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/skip.json)跳过数组中指定数目的元素，以及字符串中指定数目的字符。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"testArray\": {\r             \"type\": \"array\",\r             \"defaultValue\": [\r                 \"one\",\r                 \"two\",\r                 \"three\"\r             ]\r         },\r         \"elementsToSkip\": {\r             \"type\": \"int\",\r             \"defaultValue\": 2\r         },\r         \"testString\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"one two three\"\r         },\r         \"charactersToSkip\": {\r             \"type\": \"int\",\r             \"defaultValue\": 4\r         }\r     },\r     \"resources\": [],\r     \"outputs\": {\r         \"arrayOutput\": {\r             \"type\": \"array\",\r             \"value\": \"[skip(parameters('testArray'),parameters('elementsToSkip'))]\"\r         },\r         \"stringOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[skip(parameters('testString'),parameters('charactersToSkip'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | arrayOutput | Array | [\"three\"] |\r | stringOutput | String | two three |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/skip.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/skip.json\r ```\r \r <a id=\"split\" />\r \r ## <a name=\"split\"></a>split\r `split(inputString, delimiter)`\r \r 返回包含输入字符串的子字符串的字符串数组，其中的子字符串使用指定的分隔符进行分隔。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | inputString |是 |字符串 |要拆分的字符串。 |\r | delimiter |是 |字符串或字符串数组 |用于拆分字符串的分隔符。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 字符串数组。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/split.json)使用逗号以及使用逗号或分号拆分输入字符串。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"firstString\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"one,two,three\"\r         },\r         \"secondString\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"one;two,three\"\r         }\r     },\r     \"variables\": {\r         \"delimiters\": [ \",\", \";\" ]\r     },\r     \"resources\": [],\r     \"outputs\": {\r         \"firstOutput\": {\r             \"type\": \"array\",\r             \"value\": \"[split(parameters('firstString'),',')]\"\r         },\r         \"secondOutput\": {\r             \"type\": \"array\",\r             \"value\": \"[split(parameters('secondString'),variables('delimiters'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | firstOutput | Array | [\"one\", \"two\", \"three\"] |\r | secondOutput | Array | [\"one\", \"two\", \"three\"] |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/split.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/split.json\r ```\r \r <a id=\"startswith\" />\r \r ## <a name=\"startswith\"></a>startsWith\r `startsWith(stringToSearch, stringToFind)`\r \r 确定某个字符串是否以某个值开头。 比较不区分大小写。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | stringToSearch |是 |字符串 |包含要查找的项的值。 |\r | stringToFind |是 |字符串 |要查找的值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 如果字符串的最前面一个或多个字符与该值匹配，则为 **True**；否则为 **False**。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/startsendswith.json)演示如何使用 startsWith 和 endsWith 函数：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"resources\": [],\r     \"outputs\": {\r         \"startsTrue\": {\r             \"value\": \"[startsWith('abcdef', 'ab')]\",\r             \"type\" : \"bool\"\r         },\r         \"startsCapTrue\": {\r             \"value\": \"[startsWith('abcdef', 'A')]\",\r             \"type\" : \"bool\"\r         },\r         \"startsFalse\": {\r             \"value\": \"[startsWith('abcdef', 'e')]\",\r             \"type\" : \"bool\"\r         },\r         \"endsTrue\": {\r             \"value\": \"[endsWith('abcdef', 'ef')]\",\r             \"type\" : \"bool\"\r         },\r         \"endsCapTrue\": {\r             \"value\": \"[endsWith('abcdef', 'F')]\",\r             \"type\" : \"bool\"\r         },\r         \"endsFalse\": {\r             \"value\": \"[endsWith('abcdef', 'e')]\",\r             \"type\" : \"bool\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | startsTrue | Bool | True |\r | startsCapTrue | Bool | True |\r | startsFalse | Bool | False |\r | endsTrue | Bool | True |\r | endsCapTrue | Bool | True |\r | endsFalse | Bool | False |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/startsendswith.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/startsendswith.json\r ```\r \r <a id=\"string\" />\r \r ## <a name=\"string\"></a>string\r `string(valueToConvert)`\r \r 将指定的值转换为字符串。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | valueToConvert |是 | 任意 |要转换为字符串的值。 可以转换任何类型的值，包括对象和数组。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 转换后的值的字符串。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/string.json)演示如何将不同类型的值转换为字符串：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"testObject\": {\r             \"type\": \"object\",\r             \"defaultValue\": {\r                 \"valueA\": 10,\r                 \"valueB\": \"Example Text\"\r             }\r         },\r         \"testArray\": {\r             \"type\": \"array\",\r             \"defaultValue\": [\r                 \"a\",\r                 \"b\",\r                 \"c\"\r             ]\r         },\r         \"testInt\": {\r             \"type\": \"int\",\r             \"defaultValue\": 5\r         }\r     },\r     \"resources\": [],\r     \"outputs\": {\r         \"objectOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[string(parameters('testObject'))]\"\r         },\r         \"arrayOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[string(parameters('testArray'))]\"\r         },\r         \"intOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[string(parameters('testInt'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | objectOutput | String | {\"valueA\":10,\"valueB\":\"Example Text\"} |\r | arrayOutput | String | [\"a\",\"b\",\"c\"] |\r | intOutput | String | 5 |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/string.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/string.json\r ```\r \r <a id=\"substring\" />\r \r ## <a name=\"substring\"></a>substring\r `substring(stringToParse, startIndex, length)`\r \r 返回从指定的字符位置开始且包含指定数量的字符的子字符串。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | stringToParse |是 |字符串 |从中提取子字符串的原始字符串。 |\r | startIndex |否 |int |子字符串的从零开始的字符位置。 |\r | length |否 |int |子字符串的字符数。 必须引用该字符串内的一个位置。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 子字符串。\r \r ### <a name=\"remarks\"></a>备注\r \r 如果子字符串超出了字符串的末尾，该函数将会失败。 以下示例将失败，并出现错误“索引和长度参数必须引用字符串内的一个位置。 索引参数“0”，长度参数“11”，字符串参数长度“10”。”。\r \r ```json\r \"parameters\": {\r     \"inputString\": { \"type\": \"string\", \"value\": \"1234567890\" }\r },\r \"variables\": { \r     \"prefix\": \"[substring(parameters('inputString'), 0, 11)]\"\r }\r ```\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/substring.json)从参数中提取子字符串。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"testString\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"one two three\"\r         }\r     },\r     \"resources\": [],\r     \"outputs\": {\r         \"substringOutput\": {\r             \"value\": \"[substring(parameters('testString'), 4, 3)]\",\r             \"type\": \"string\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | substringOutput | String | two |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/substring.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/substring.json\r ```\r \r <a id=\"take\" />\r \r ## <a name=\"take\"></a>take\r `take(originalValue, numberToTake)`\r \r 返回一个字符串，其中包含从字符串开头位置算起的指定数目的字符；或返回一个数组，其中包含从数组开头位置算起的指定数目的元素。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | originalValue |是 |数组或字符串 |要从中提取元素的数组或字符串。 |\r | numberToTake |是 |int |要提取的元素或字符数。 如果此值为 0 或更小，则返回一个空数组或字符串。 如果此值大于给定数组或字符串的长度，则返回数组或字符串中的所有元素。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 数组或字符串。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/take.json)从数组中提取指定数目的元素，并从字符串中提取指定数目的字符。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"testArray\": {\r             \"type\": \"array\",\r             \"defaultValue\": [\r                 \"one\",\r                 \"two\",\r                 \"three\"\r             ]\r         },\r         \"elementsToTake\": {\r             \"type\": \"int\",\r             \"defaultValue\": 2\r         },\r         \"testString\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"one two three\"\r         },\r         \"charactersToTake\": {\r             \"type\": \"int\",\r             \"defaultValue\": 2\r         }\r     },\r     \"resources\": [],\r     \"outputs\": {\r         \"arrayOutput\": {\r             \"type\": \"array\",\r             \"value\": \"[take(parameters('testArray'),parameters('elementsToTake'))]\"\r         },\r         \"stringOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[take(parameters('testString'),parameters('charactersToTake'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | arrayOutput | Array | [\"one\", \"two\"] |\r | stringOutput | String | on |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/take.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/take.json\r ```\r \r <a id=\"tolower\" />\r \r ## <a name=\"tolower\"></a>toLower\r `toLower(stringToChange)`\r \r 将指定的字符串转换为小写。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | stringToChange |是 |字符串 |要转换为小写的值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 已转换为小写的字符串。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/tolower.json)将参数值转换为小写和大写。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"testString\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"One Two Three\"\r         }\r     },\r     \"resources\": [],\r     \"outputs\": {\r         \"toLowerOutput\": {\r             \"value\": \"[toLower(parameters('testString'))]\",\r             \"type\": \"string\"\r         },\r         \"toUpperOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[toUpper(parameters('testString'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | toLowerOutput | String | one two three |\r | toUpperOutput | String | ONE TWO THREE |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/tolower.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/tolower.json\r ```\r \r <a id=\"toupper\" />\r \r ## <a name=\"toupper\"></a>toUpper\r `toUpper(stringToChange)`\r \r 将指定的字符串转换为大写。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | stringToChange |是 |字符串 |要转换为大写的值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 已转换为大写的字符串。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/tolower.json)将参数值转换为小写和大写。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"testString\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"One Two Three\"\r         }\r     },\r     \"resources\": [],\r     \"outputs\": {\r         \"toLowerOutput\": {\r             \"value\": \"[toLower(parameters('testString'))]\",\r             \"type\": \"string\"\r         },\r         \"toUpperOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[toUpper(parameters('testString'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | toLowerOutput | String | one two three |\r | toUpperOutput | String | ONE TWO THREE |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/tolower.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/tolower.json\r ```\r \r <a id=\"trim\" />\r \r ## <a name=\"trim\"></a>trim\r `trim (stringToTrim)`\r \r 从指定的字符串中删除所有前导和尾随空白字符。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | stringToTrim |是 |字符串 |要剪裁的值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 不带前导和尾随空白字符的字符串。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/trim.json)裁剪掉参数中的空白字符。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"testString\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"    one two three   \"\r         }\r     },\r     \"resources\": [],\r     \"outputs\": {\r         \"return\": {\r             \"type\": \"string\",\r             \"value\": \"[trim(parameters('testString'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | return | String | one two three |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/trim.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/trim.json\r ```\r \r <a id=\"uniquestring\" />\r \r ## <a name=\"uniquestring\"></a>uniqueString\r `uniqueString (baseString, ...)`\r \r 根据作为参数提供的值创建确定性哈希字符串。 \r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | baseString |是 |字符串 |哈希函数中用于创建唯一字符串的值。 |\r | 根据需要使用其他参数 |否 |字符串 |可以添加任意数目的字符串，以创建指定唯一性级别的值。 |\r \r ### <a name=\"remarks\"></a>备注\r \r 当需要创建资源的唯一名称时，此函数很有帮助。 提供参数值，这些值用于限制结果的唯一性范围。 可以指定该名称对于订阅、资源组或部署是否唯一。 \r \r 返回的值不是随机字符串，而是哈希函数的结果。 返回的值长度为 13 个字符。 并非全局唯一。 可能需要根据命名约定使用前缀来组合值，以创建有意义的名称。 以下示例显示了返回值的格式。 实际值取决于提供的参数。\r \r     tcvhiyu5h2o5o\r \r 以下示例演示如何使用 uniqueString 创建通用级别唯一值。\r \r 仅对订阅唯一\r \r ```json\r \"[uniqueString(subscription().subscriptionId)]\"\r ```\r \r 仅对资源组唯一\r \r ```json\r \"[uniqueString(resourceGroup().id)]\"\r ```\r \r 仅对资源组的部署唯一\r \r ```json\r \"[uniqueString(resourceGroup().id, deployment().name)]\"\r ```\r \r 以下示例演示显示如何根据资源组创建存储帐户的唯一名称。 在资源组中，如果构造方式相同，则名称不唯一。\r \r ```json\r \"resources\": [{ \r     \"name\": \"[concat('storage', uniqueString(resourceGroup().id))]\", \r     \"type\": \"Microsoft.Storage/storageAccounts\", \r     ...\r ```\r \r ### <a name=\"return-value\"></a>返回值\r \r 包含 13 个字符的字符串。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/uniquestring.json)从唯一字符串返回结果：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"resources\": [],\r     \"outputs\": {\r         \"uniqueRG\": {\r             \"value\": \"[uniqueString(resourceGroup().id)]\",\r             \"type\" : \"string\"\r         },\r         \"uniqueDeploy\": {\r             \"value\": \"[uniqueString(resourceGroup().id, deployment().name)]\",\r             \"type\" : \"string\"\r         }\r     }\r }\r ```\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/uniquestring.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/uniquestring.json\r ```\r \r <a id=\"uri\" />\r \r ## <a name=\"uri\"></a>uri\r `uri (baseUri, relativeUri)`\r \r 通过组合 baseUri 和 relativeUri 字符串来创建绝对 URI。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | baseUri |是 |字符串 |基本 uri 字符串。 |\r | relativeUri |是 |字符串 |要添加到基本 uri 字符串的相对 uri 字符串。 |\r \r **baseUri** 参数的值可包含特定文件，但在构造 URI 时，只使用基路径。 例如，将 `http://contoso.com/resources/azuredeploy.json`作为 baseUri 参数传递会生成 `http://contoso.com/resources/` 的基 URI。\r \r ### <a name=\"return-value\"></a>返回值\r \r 表示基值和相对值的绝对 URI 的字符串。\r \r ### <a name=\"examples\"></a>示例\r \r 以下示例演示如何根据父模板的值构造嵌套模板的链接。\r \r ```json\r \"templateLink\": \"[uri(deployment().properties.templateLink.uri, 'nested/azuredeploy.json')]\"\r ```\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/uri.json)演示如何使用 uri、uriComponent 和 uriComponentToString：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"variables\": {\r         \"uriFormat\": \"[uri('http://contoso.com/resources/', 'nested/azuredeploy.json')]\",\r         \"uriEncoded\": \"[uriComponent(variables('uriFormat'))]\" \r     },\r     \"resources\": [\r     ],\r     \"outputs\": {\r         \"uriOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[variables('uriFormat')]\"\r         },\r         \"componentOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[variables('uriEncoded')]\"\r         },\r         \"toStringOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[uriComponentToString(variables('uriEncoded'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | uriOutput | String | http://contoso.com/resources/nested/azuredeploy.json |\r | componentOutput | String | http%3A%2F%2Fcontoso.com%2Fresources%2Fnested%2Fazuredeploy.json |\r | toStringOutput | String | http://contoso.com/resources/nested/azuredeploy.json |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/uri.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/uri.json\r ```\r \r <a id=\"uricomponent\" />\r \r ## <a name=\"uricomponent\"></a>uriComponent\r `uricomponent(stringToEncode)`\r \r 将 URI 编码。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | stringToEncode |是 |字符串 |要编码的值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r URI 编码值的字符串。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/uri.json)演示如何使用 uri、uriComponent 和 uriComponentToString：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"variables\": {\r         \"uriFormat\": \"[uri('http://contoso.com/resources/', 'nested/azuredeploy.json')]\",\r         \"uriEncoded\": \"[uriComponent(variables('uriFormat'))]\" \r     },\r     \"resources\": [\r     ],\r     \"outputs\": {\r         \"uriOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[variables('uriFormat')]\"\r         },\r         \"componentOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[variables('uriEncoded')]\"\r         },\r         \"toStringOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[uriComponentToString(variables('uriEncoded'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | uriOutput | String | http://contoso.com/resources/nested/azuredeploy.json |\r | componentOutput | String | http%3A%2F%2Fcontoso.com%2Fresources%2Fnested%2Fazuredeploy.json |\r | toStringOutput | String | http://contoso.com/resources/nested/azuredeploy.json |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/uri.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/uri.json\r ```\r \r <a id=\"uricomponenttostring\" />\r \r ## <a name=\"uricomponenttostring\"></a>uriComponentToString\r `uriComponentToString(uriEncodedString)`\r \r 返回 URI 编码值的字符串。\r \r ### <a name=\"parameters\"></a>参数\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | uriEncodedString |是 |字符串 |要转换为字符串的 URI 编码值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r URI 编码值的解码后字符串。\r \r ### <a name=\"examples\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/uri.json)演示如何使用 uri、uriComponent 和 uriComponentToString：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"variables\": {\r         \"uriFormat\": \"[uri('http://contoso.com/resources/', 'nested/azuredeploy.json')]\",\r         \"uriEncoded\": \"[uriComponent(variables('uriFormat'))]\" \r     },\r     \"resources\": [\r     ],\r     \"outputs\": {\r         \"uriOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[variables('uriFormat')]\"\r         },\r         \"componentOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[variables('uriEncoded')]\"\r         },\r         \"toStringOutput\": {\r             \"type\": \"string\",\r             \"value\": \"[uriComponentToString(variables('uriEncoded'))]\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | uriOutput | String | http://contoso.com/resources/nested/azuredeploy.json |\r | componentOutput | String | http%3A%2F%2Fcontoso.com%2Fresources%2Fnested%2Fazuredeploy.json |\r | toStringOutput | String | http://contoso.com/resources/nested/azuredeploy.json |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/uri.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/uri.json\r ```\r \r ## <a name=\"next-steps\"></a>后续步骤\r * 有关 Azure Resource Manager 模板中各部分的说明，请参阅 [Authoring Azure Resource Manager templates](resource-group-authoring-templates.md)（创作 Azure Resource Manager 模板）。\r * 若要合并多个模板，请参阅[将链接的模板与 Azure Resource Manager 配合使用](resource-group-linked-templates.md)。\r * 若要在创建资源类型时迭代指定的次数，请参阅[在 Azure Resource Manager 中创建多个资源实例](resource-group-create-multiple.md)。\r * 若要查看如何部署已创建的模板，请参阅[使用 Azure Resource Manager 模板部署应用程序](resource-group-template-deploy.md)。\r \r <!--Update_Description: update meta properties, add guid command example block such as powershell and CLI-->"}