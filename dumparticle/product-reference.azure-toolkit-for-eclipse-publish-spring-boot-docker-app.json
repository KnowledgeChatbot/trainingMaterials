{"Title":"使用用于 Eclipse 的 Azure 工具包将 Spring Boot 应用作为 Docker 容器发布","Description":"了解如何使用用于 Eclipse 的 Azure 工具包将 Web 应用作为 Docker 容器发布到 Azure。","Content":"# <a name=\"publish-a-spring-boot-app-as-a-docker-container-by-using-the-azure-toolkit-for-eclipse\"></a>使用用于 Eclipse 的 Azure 工具包将 Spring Boot 应用作为 Docker 容器发布\r \r [Spring Framework] 是一种开放源代码解决方案，可帮助 Java 开发人员创建企业级应用程序。 基于该平台构建的其中一个更常用的项目是 [Spring Boot]，该项目提供了简化的方法来创建独立的 Java 应用程序。\r \r [Docker] 是一种开放源代码解决方案，可帮助开发人员自动部署、扩展和管理在容器中运行的应用程序。\r \r 本教程介绍使用用于 Eclipse 的 Azure 工具包将 Spring Boot 应用程序作为 Docker 容器部署到 Azure 的步骤。\r \r [!INCLUDE [azure-toolkit-for-eclipse-prerequisites](../includes/azure-toolkit-for-eclipse-prerequisites.md)]\r \r ## <a name=\"clone-the-default-spring-boot-docker-repository\"></a>克隆默认 Spring Boot Docker 存储库\r \r ### <a name=\"import-the-public-repository\"></a>导入公共存储库\r \r 以下步骤介绍如何使用 IntelliJ 将 Spring Boot Docker 存储库克隆到本地计算机。\r \r 1. 打开 Eclipse。\r \r 1. 单击“文件” > “导入”。\r \r    ![文件导入菜单][CL01]\r \r 1. “导入”对话框打开后：\r \r    a. 展开 Git。\r \r    b. 选择“来自 Git 的项目”。\r    \r    c. 单击“下一步”。\r \r    ![“导入”对话框][CL02]\r \r 1. 在“选择存储库源”页上：\r \r    a. 选择“克隆 URI”。\r    \r    b. 单击“下一步”。\r \r    ![选择\"存储库源\"页][CL03]\r \r 1. 在“源 Git 存储库”页上：\r \r    a. 对于“URI”，请输入 `https://github.com/spring-guides/gs-spring-boot-docker.git`。 此步骤应该会为“主机”和“存储库路径”字段自动填充正确的值。\r    \r    b. Spring Boot 存储库是公开的，因此不必输入 Git 用户名和密码。\r    \r    c. 单击“下一步”。\r \r    ![“源 Git 存储库”页][CL04]\r \r 1. 在“分支选择”页上，单击“下一步”。\r \r    ![“分支选择”页][CL05]\r \r 1. 在“本地目标”页上：\r \r    a. 指定放置本地存储库的本地文件夹。\r    \r    b. 单击“下一步”。\r \r    ![“本地目标”页][CL06]\r \r 1. 在“选择用于导入项目的向导”页上：\r \r    a. 选择“作为常规项目导入”。\r    \r    b. 单击“下一步”。\r \r    ![“选择用于导入项目的向导”页][CL07]\r \r 1. 在“导入项目”页上：\r \r    a. 指定项目名称。\r    \r    b. 单击“完成” 。\r \r    ![“导入项目”页][CL08]\r \r 1. 当存储库成功克隆时，可以看到 Eclipse 中列出的所有文件。\r \r    ![本地存储库][CL09]\r \r ### <a name=\"create-a-maven-project-from-your-local-repository\"></a>从本地存储库创建 Maven 项目\r \r Spring Boot Docker 存储库包含一个已完成的 Maven 项目，可用于本教程。 \r \r 1. 单击“文件” > “导入”。\r \r    ![“文件”菜单上的“导入”命令][CL01]\r \r 1. “导入”对话框打开后：\r \r    a. 展开 Maven。\r    \r    b. 选择“现有 Maven 项目”。\r    \r    c. 单击“下一步”。\r \r    ![“导入”对话框][MV01]\r \r 1. 在“Maven 项目”页上：\r \r    a. 对于“根目录”，在本地存储库中指定“complete”文件夹。\r    \r    b. 展开“高级”部分，并为“名称模板”输入自定义名称。\r    \r    c. 选择项目中 pom.xml 文件对应的框。\r    \r    d.单击“下一步”。 单击“完成” 。\r \r    ![“Maven 项目”页][MV02]\r \r 1. 当 Maven 项目成功打开后，可以看到 Eclipse 中列出了第二个项目。\r \r    ![本地 Maven 项目][MV03]\r \r ## <a name=\"build-your-spring-boot-app-by-using-maven\"></a>使用 Maven 生成 Spring Boot 应用程序\r \r 1. 在 Eclipse 项目资源管理器中，选择“Maven 项目”。\r \r 1. 单击“运行” > “运行方式” > “Maven 生成”。\r \r    ![以 Maven 生成方式运行的命令][BU01]\r \r 1. 成功生成应用程序后，控制台窗口会显示状态。\r \r    ![Maven 生成成功][BU02]\r \r ## <a name=\"publish-your-web-app-to-azure-by-using-a-docker-container\"></a>使用 Docker 容器将 Web 应用发布到 Azure\r \r 1. 在 Eclipse 项目资源管理器中，选择“Maven 项目”。\r \r 1. 单击 Azure 的“发布”菜单，然后单击“发布为 Docker 容器”。\r \r    ![“发布为 Docker 容器”命令][PU01]\r \r 1. 出现“在 Azure 上部署 Docker 容器”对话框时：\r \r    a. 输入自定义的 Docker 映像名称。\r    \r    b. 对于“要部署的项目”，指定刚生成的 gs-spring-boot-docker-0.1.0.jar 文件的路径。\r \r    ![指定 Docker 选项][PU02]\r \r    现在显示所有现有的 Docker 主机。 \r \r 1. 如果选择部署到现有主机，可以跳到步骤 5。 否则，使用以下步骤创建主机：\r \r    a. 单击“添加” 。\r \r       ![添加新的 Docker 主机][PU03]\r \r    b. 当显示“创建 Docker 主机”对话框时，可以选择接受默认设置，也可以为新的 Docker 主机指定任何自定义设置。 （有关各种设置的详细说明，请参阅[使用用于 IntelliJ 的 Azure 工具包将 Web 应用发布为 Docker 容器][Publish Container with Azure Toolkit]。）在指定了要使用的设置后，单击“下一步”。\r \r       ![指定 Docker 主机选项][PU04]\r \r    c. 可以选择使用 Azure Key Vault 中的现有登录凭据，也可以选择输入新的 Docker 登录凭据。 在指定了选项后单击“完成”。\r \r       ![指定 Docker 主机凭据][PU05]\r \r 1. 选择 Docker 主机，然后单击“下一步”。\r \r    ![选择要使用的 Docker 主机][PU06]\r \r 1. 在“在 Azure 上部署 Docker 容器”对话框的最后一页上，指定以下选项：\r \r    a. 可以选择为要托管 Docker 容器的容器指定一个自定义名称，也可以接受默认设置。\r \r    b. 使用以下语法输入 Docker 主机的 TCP 端口：[外部端口]:[内部端口]。 例如，“80:8080”指定外部端口为“80”，默认的内部 Spring Boot 端口为“8080”。\r    \r       如果已自定义内部端口（例如通过编辑 application.yml 文件进行自定义），则需指定端口号，以便在 Azure 中进行正确路由。\r \r    c. 在配置这些选项后，单击“完成”。\r \r    ![在 Azure 上部署 Docker 容器][PU07]\r \r 1. Azure 工具包完成发布后，Azure 活动日志显示状态为“已发布”。\r \r    ![已成功部署 Docker 主机][PU08]\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r [!INCLUDE [azure-toolkit-additional-resources](../includes/azure-toolkit-additional-resources.md)]\r \r <!-- URL List -->\r \r [Azure Management Portal]: https://manage.windowsazure.cn\r [Docker]: https://www.docker.com/\r [Publish Container with Azure Toolkit]: ./azure-toolkit-for-intellij-publish-as-docker-container.md\r [Spring Boot]: http://projects.spring.io/spring-boot/\r [Spring Framework]: https://spring.io/\r \r <!-- IMG List -->\r \r [CL01]: ./media/azure-toolkit-for-eclipse-publish-spring-boot-docker-app/CL01.png\r [CL02]: ./media/azure-toolkit-for-eclipse-publish-spring-boot-docker-app/CL02.png\r [CL03]: ./media/azure-toolkit-for-eclipse-publish-spring-boot-docker-app/CL03.png\r [CL04]: ./media/azure-toolkit-for-eclipse-publish-spring-boot-docker-app/CL04.png\r [CL05]: ./media/azure-toolkit-for-eclipse-publish-spring-boot-docker-app/CL05.png\r [CL06]: ./media/azure-toolkit-for-eclipse-publish-spring-boot-docker-app/CL06.png\r [CL07]: ./media/azure-toolkit-for-eclipse-publish-spring-boot-docker-app/CL07.png\r [CL08]: ./media/azure-toolkit-for-eclipse-publish-spring-boot-docker-app/CL08.png\r [CL09]: ./media/azure-toolkit-for-eclipse-publish-spring-boot-docker-app/CL09.png\r \r [MV01]: ./media/azure-toolkit-for-eclipse-publish-spring-boot-docker-app/MV01.png\r [MV02]: ./media/azure-toolkit-for-eclipse-publish-spring-boot-docker-app/MV02.png\r [MV03]: ./media/azure-toolkit-for-eclipse-publish-spring-boot-docker-app/MV03.png\r \r [BU01]: ./media/azure-toolkit-for-eclipse-publish-spring-boot-docker-app/BU01.png\r [BU02]: ./media/azure-toolkit-for-eclipse-publish-spring-boot-docker-app/BU02.png\r \r [PU01]: ./media/azure-toolkit-for-eclipse-publish-spring-boot-docker-app/PU01.png\r [PU02]: ./media/azure-toolkit-for-eclipse-publish-spring-boot-docker-app/PU02.png\r [PU03]: ./media/azure-toolkit-for-eclipse-publish-spring-boot-docker-app/PU03.png\r [PU04]: ./media/azure-toolkit-for-eclipse-publish-spring-boot-docker-app/PU04.png\r [PU05]: ./media/azure-toolkit-for-eclipse-publish-spring-boot-docker-app/PU05.png\r [PU06]: ./media/azure-toolkit-for-eclipse-publish-spring-boot-docker-app/PU06.png\r [PU07]: ./media/azure-toolkit-for-eclipse-publish-spring-boot-docker-app/PU07.png\r [PU08]: ./media/azure-toolkit-for-eclipse-publish-spring-boot-docker-app/PU08.png\r \r "}