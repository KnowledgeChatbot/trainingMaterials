{"Title":"Key Vault 机密与 Azure 资源管理器模板","Description":"说明在部署期间如何以参数形式从密钥保管库传递机密。","Content":"# <a name=\"use-azure-key-vault-to-pass-secure-parameter-value-during-deployment\"></a>在部署过程中使用 Azure Key Vault 传递安全参数值\r \r 在部署过程中，需要将安全值（例如密码）作为参数传递时，可从 [Azure Key Vault](../key-vault/key-vault-whatis.md) 检索值。 通过引用参数文件中的密钥保管库和密钥来检索值。 值永远不会公开，因为仅引用其密钥保管库 ID。 不需要每次部署资源时手动输入机密的值。 密钥保管库与部署到的资源组不需要位于同一订阅中。 引用密钥保管库时，需要包括订阅 ID。\r \r 创建密钥保管库时，将 enabledForTemplateDeployment 属性设置为 true。 通过将该值设置为 true，在部署过程中可允许来自资源管理器模板的访问。\r \r ## <a name=\"deploy-a-key-vault-and-secret\"></a>部署密钥保管库和机密\r \r 若要创建密钥保管库和机密，请使用 Azure CLI 或 PowerShell。 请注意，已为模板部署启用密钥保管库。 \r \r 对于 Azure CLI，请使用：\r \r ```azurecli\r vaultname={your-unique-vault-name}\r password={password-value}\r \r az group create --name examplegroup --location 'China East'\r az keyvault create \\\r   --name $vaultname \\\r   --resource-group examplegroup \\\r   --location 'China East' \\\r   --enabled-for-template-deployment true\r az keyvault secret set --vault-name $vaultname --name examplesecret --value $password\r ```\r \r 对于 PowerShell，请使用：\r \r ```powershell\r $vaultname = \"{your-unique-vault-name}\"\r $password = \"{password-value}\"\r \r New-AzureRmResourceGroup -Name examplegroup -Location \"China East\"\r New-AzureRmKeyVault `\r   -VaultName $vaultname `\r   -ResourceGroupName examplegroup `\r   -Location \"China East\" `\r   -EnabledForTemplateDeployment\r $secretvalue = ConvertTo-SecureString $password -AsPlainText -Force\r Set-AzureKeyVaultSecret -VaultName $vaultname -Name \"examplesecret\" -SecretValue $secretvalue\r ```\r \r ## <a name=\"enable-access-to-the-secret\"></a>启用密钥访问权限\r \r 无论使用的是新密钥保管库还是现有密钥保管库，请确保部署模板的用户可以访问密钥。 部署引用某个密钥的模板的用户必须具有密钥保管库的 `Microsoft.KeyVault/vaults/deploy/action` 权限。 [所有者](../active-directory/role-based-access-built-in-roles.md#owner)和[参与者](../active-directory/role-based-access-built-in-roles.md#contributor)角色均授予该访问权限。\r \r ## <a name=\"reference-a-secret-with-static-id\"></a>通过静态 ID 引用机密\r \r 接收 key vault 机密的模板与任何其他模板类似。 这是因为在参数文件（而不是在模板）中引用 key vault。 例如，以下模板部署包含管理员密码的 SQL 数据库。 密码参数设置为安全字符串。 但是，此模板未指定该值的来源。\r \r ```json\r {\r   \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r   \"contentVersion\": \"1.0.0.0\",\r   \"parameters\": {\r     \"adminLogin\": {\r       \"type\": \"string\"\r     },\r     \"adminPassword\": {\r       \"type\": \"securestring\"\r     },\r     \"sqlServerName\": {\r       \"type\": \"string\"\r     }\r   },\r   \"resources\": [\r     {\r       \"name\": \"[parameters('sqlServerName')]\",\r       \"type\": \"Microsoft.Sql/servers\",\r       \"apiVersion\": \"2015-05-01-preview\",\r       \"location\": \"[resourceGroup().location]\",\r       \"tags\": {},\r       \"properties\": {\r         \"administratorLogin\": \"[parameters('adminLogin')]\",\r         \"administratorLoginPassword\": \"[parameters('adminPassword')]\",\r         \"version\": \"12.0\"\r       }\r     }\r   ],\r   \"outputs\": {\r   }\r }\r ```\r \r 现在，为上述模板创建参数文件。 在参数文件中，指定与模板中的参数名称匹配的参数。 对于参数值，请从密钥保管库中引用机密。 可以通过传递密钥保管库的资源标识符和机密的名称来引用机密。 在以下示例中，密钥保管库机密必须已存在，而且用户提供其资源 ID 的静态值。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"adminLogin\": {\r             \"value\": \"exampleadmin\"\r         },\r         \"adminPassword\": {\r             \"reference\": {\r               \"keyVault\": {\r                 \"id\": \"/subscriptions/<subscription-id>/resourceGroups/examplegroup/providers/Microsoft.KeyVault/vaults/<vault-name>\"\r               },\r               \"secretName\": \"examplesecret\"\r             }\r         },\r         \"sqlServerName\": {\r             \"value\": \"<your-server-name>\"\r         }\r     }\r }\r ```\r \r 现在，部署模板并传入参数文件。 对于 Azure CLI，请使用：\r \r ```azurecli\r az group create --name datagroup --location \"China North\"\r az group deployment create \\\r     --name exampledeployment \\\r     --resource-group datagroup \\\r     --template-file sqlserver.json \\\r     --parameters @sqlserver.parameters.json\r ```\r \r 对于 PowerShell，请使用：\r \r ```powershell\r New-AzureRmResourceGroup -Name datagroup -Location \"China North\"\r New-AzureRmResourceGroupDeployment `\r   -Name exampledeployment `\r   -ResourceGroupName datagroup `\r   -TemplateFile sqlserver.json `\r   -TemplateParameterFile sqlserver.parameters.json\r ```\r \r ## <a name=\"reference-a-secret-with-dynamic-id\"></a>通过动态 ID 引用机密\r \r 上一节介绍了如何传递密钥保管库机密的静态资源 ID。 但是，在某些情况下，需要引用随当前部署而变的密钥保管库机密。 在这种情况下，不能在参数文件中对资源 ID 进行硬编码。 遗憾的是，不能在参数文件中动态生成资源 ID，因为参数文件中不允许模板表达式。\r \r 要动态生成密钥保管库机密的资源 ID，必须将需要机密的资源移至嵌套式模板中。 需要在主模板中添加嵌套式模板，并传入包含动态生成的资源 ID 的参数。 嵌套模板必须通过外部 URI 提供。 本文的其余部分假定已将前面的模板添加到存储帐户，并可通过 URI (`https://<storage-name>.blob.core.chinacloudapi.cn/templatecontainer/sqlserver.json`) 获得该模板。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r       \"vaultName\": {\r         \"type\": \"string\"\r       },\r       \"vaultResourceGroup\": {\r         \"type\": \"string\"\r       },\r       \"secretName\": {\r         \"type\": \"string\"\r       },\r       \"adminLogin\": {\r         \"type\": \"string\"\r       },\r       \"sqlServerName\": {\r         \"type\": \"string\"\r       }\r     },\r     \"resources\": [\r     {\r       \"apiVersion\": \"2015-01-01\",\r       \"name\": \"nestedTemplate\",\r       \"type\": \"Microsoft.Resources/deployments\",\r       \"properties\": {\r         \"mode\": \"incremental\",\r         \"templateLink\": {\r           \"uri\": \"https://<storage-name>.blob.core.chinacloudapi.cn/templatecontainer/sqlserver.json\",\r           \"contentVersion\": \"1.0.0.0\"\r         },\r         \"parameters\": {\r           \"adminPassword\": {\r             \"reference\": {\r               \"keyVault\": {\r                 \"id\": \"[resourceId(subscription().subscriptionId,  parameters('vaultResourceGroup'), 'Microsoft.KeyVault/vaults', parameters('vaultName'))]\"\r               },\r               \"secretName\": \"[parameters('secretName')]\"\r             }\r           },\r           \"adminLogin\": { \"value\": \"[parameters('adminLogin')]\" },\r           \"sqlServerName\": {\"value\": \"[parameters('sqlServerName')]\"}\r         }\r       }\r     }],\r     \"outputs\": {}\r }\r ```\r \r 部署前面的模板，并为参数提供值。\r \r ## <a name=\"next-steps\"></a>后续步骤\r * 有关密钥保管库的一般信息，请参阅 [Azure 密钥保管库入门](../key-vault/key-vault-get-started.md)。\r * 有关引用密钥机密的完整示例，请参阅 [密钥保管库示例](https://github.com/rjmax/ArmExamples/tree/master/keyvaultexamples)。\r \r <!--Update_Description: update meta properties, wording update, update cmdlet sample -->"}