{"Title":"如何查询 Azure Cosmos DB 中的表数据？","Description":"了解如何查询 Azure Cosmos DB 中的表数据","Content":"# <a name=\"azure-cosmos-db-how-to-query-table-data-by-using-the-table-api\"></a>Azure Cosmos DB：如何使用表 API 查询表数据\r \r Azure Cosmos DB [表 API](table-introduction.md) 支持针对键/值（表）数据进行 OData 和 [LINQ](https://docs.microsoft.com/rest/api/storageservices/fileservices/writing-linq-queries-against-the-table-service) 查询。  \r \r 本文涵盖以下任务： \r \r > [!div class=\"checklist\"]\r > * 使用表 API 查询数据\r \r 本文中的查询使用如下示例 `People` 表：\r \r | PartitionKey | RowKey | Email | PhoneNumber |\r | --- | --- | --- | --- |\r | Harp | Walter | Walter@contoso.com| 425-555-0101 |\r | Smith | Ben | Ben@contoso.com| 425-555-0102 |\r | Smith | Jeff | Jeff@contoso.com| 425-555-0104 | \r \r 有关如何使用表 API 进行查询的详细信息，请参阅[查询表和实体] (https://docs.microsoft.com/rest/api/storageservices/fileservices/querying-tables-and-entities)。 \r \r 有关 Azure Cosmos DB 所提供的高级功能的详细信息，请参阅 [Azure Cosmos DB 表 API](table-introduction.md) 和[使用 .NET 通过表 API 进行开发](tutorial-develop-table-dotnet.md)。 \r \r ## <a name=\"prerequisites\"></a>先决条件\r \r 若要使这些查询生效，必须拥有 Azure Cosmos DB 帐户，且容器中必须包含实体数据。 没有这些内容？ 请学习[五分钟快速入门](create-table-dotnet.md)或者[开发人员教程](tutorial-develop-table-dotnet.md)，创建帐户并填充数据库。\r \r ## <a name=\"query-on-partitionkey-and-rowkey\"></a>PartitionKey 和 RowKey 的查询\r 由于 PartitionKey 和 RowKey 属性构成实体的主键，因此可以使用以下特殊语法来识别实体： \r \r **查询**\r \r ```\r https://<mytableendpoint>/People(PartitionKey='Harp',RowKey='Walter')  \r ```\r **结果**\r \r | PartitionKey | RowKey | Email | PhoneNumber |\r | --- | --- | --- | --- |\r | Harp | Walter | Walter@contoso.com| 425-555-0104 |\r \r 或者，可将这些属性指定为 `$filter` 选项的一部分，如以下部分中所示。 请注意，键属性名称和常量值区分大小写。 PartitionKey 和 RowKey 属性皆为 String 类型。 \r \r ## <a name=\"query-by-using-an-odata-filter\"></a>使用 OData 筛选器进行查询\r 构造筛选器字符串时，请记住以下规则： \r \r * 使用由 OData 协议规范定义的逻辑运算符比较属性和值。 请注意，不能将属性与动态值进行比较。 表达式的一侧必须是常量。 \r * 必须使用 URL 编码空格分隔属性名称、运算符和常量值。 空格经 URL 编码后为 `%20`。 \r * 筛选器字符串的所有部分都区分大小写。 \r * 常量值的数据类型必须与属性的类型相同，这样筛选器才能返回有效的结果。 有关支持的属性类型的详细信息，请参阅 [Understanding the Table Service Data Model](https://docs.microsoft.com/rest/api/storageservices/understanding-the-table-service-data-model)（了解表服务数据模型）。 \r \r 以下示例查询演示如何使用 OData `$filter` 按 PartitionKey 和 Email 属性进行筛选。\r \r **查询**\r \r ```\r https://<mytableapi-endpoint>/People()?$filter=PartitionKey%20eq%20'Smith'%20and%20Email%20eq%20'Ben@contoso.com'\r ```\r \r 有关如何对不同数据类型构造筛选表达式的详细信息，请参阅 [Querying Tables and Entities](https://docs.microsoft.com/rest/api/storageservices/querying-tables-and-entities)（查询表和实体）。\r \r **结果**\r \r | PartitionKey | RowKey | Email | PhoneNumber |\r | --- | --- | --- | --- |\r | Ben |Smith | Ben@contoso.com| 425-555-0102 |\r \r ## <a name=\"query-by-using-linq\"></a>使用 LINQ 进行查询 \r 还可使用 LINQ 进行查询，这会转换为相应的 OData 查询表达式。 以下示例演示如何使用 .NET SDK 生成查询。\r \r ```csharp\r CloudTableClient tableClient = account.CreateCloudTableClient();\r CloudTable table = tableClient.GetTableReference(\"people\");\r \r TableQuery<CustomerEntity> query = new TableQuery<CustomerEntity>()\r     .Where(\r         TableQuery.CombineFilters(\r             TableQuery.GenerateFilterCondition(PartitionKey, QueryComparisons.Equal, \"Smith\"),\r             TableOperators.And,\r             TableQuery.GenerateFilterCondition(Email, QueryComparisons.Equal,\"Ben@contoso.com\")\r     ));\r \r await table.ExecuteQuerySegmentedAsync<CustomerEntity>(query, null);\r ```\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r 在本教程中已完成以下操作：\r \r > [!div class=\"checklist\"]\r > * 已了解如何使用表 API 进行查询\r \r 现可继续学习下一教程，了解如何全局分发数据。\r \r > [!div class=\"nextstepaction\"]\r > [全局分发数据](tutorial-global-distribution-table.md)\r \r <!-- Update_Description: update meta properties, update link -->"}