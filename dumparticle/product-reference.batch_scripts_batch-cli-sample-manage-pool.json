{"Title":"Azure CLI 脚本示例 - 管理批处理中的池","Description":"Azure CLI 脚本示例 - 管理批处理中的池","Content":"# <a name=\"managing-azure-batch-pools-with-azure-cli\"></a>使用 Azure CLI 管理 Azure Batch 池\r \r 这些脚本演示了 Azure CLI 中一些可用于在 Azure Batch 服务中创建和管理计算节点池的工具。\r \r > [!NOTE]\r > 本示例中的命令创建 Azure 虚拟机。 运行中的 VM 会在帐户中产生费用。 若要尽可能减少这些费用，请在运行完本示例后删除 VM。 请参阅[清理池](#clean-up-pools)。\r \r 可通过两种方式配置批处理池：使用云服务配置（仅适用于 Windows），或使用虚拟机配置（适用于 Windows 和 Linux）。 以下示例脚本显示如何使用这两个配置创建池。\r \r ## <a name=\"prerequisites\"></a>先决条件\r \r - 按照 [Azure CLI 安装指南](/cli/install-azure-cli)中提供的说明安装 Azure CLI（如果尚未这样做）。\r - 创建 Batch 帐户（如果还没有帐户）。 有关创建帐户的示例脚本，请参阅[使用 Azure CLI 创建 Batch 帐户](/batch/scripts/batch-cli-sample-create-account/)。\r - 将应用程序配置为从启动任务运行（如果尚未这样做）。 有关用于创建应用程序并将应用程序包上传到 Azure 的示例脚本，请参阅[使用 Azure CLI 将应用程序添加到 Azure Batch](/batch/scripts/batch-cli-sample-add-application/)。\r \r ## <a name=\"pool-with-cloud-service-configuration-sample-script\"></a>使用云服务配置来配置池的示例脚本\r ```azurecli\r #!/bin/bash\r \r # Authenticate Batch account CLI session.\r az batch account login -g myresourcegroup -n mybatchaccount\r \r # We want to add an application package reference to the pool, so first\r # we'll list the available applications.\r az batch application summary list\r \r # Create a new Windows cloud service platform pool with 3 Standard A1 VMs.\r # The pool has an application package reference (taken from the output of the\r # above command) and a start task that will copy the application files to a shared directory.\r az batch pool create \\\r     --id mypool-windows \\\r     --os-family 4 \\\r     --target-dedicated 3 \\\r     --vm-size small \\\r     --start-task-command-line \"cmd /c xcopy %AZ_BATCH_APP_PACKAGE_MYAPP% %AZ_BATCH_NODE_SHARED_DIR%\" \\\r     --start-task-wait-for-success \\\r     --application-package-references myapp\r \r # We can add some metadata to the pool.\r az batch pool set --pool-id mypool-windows --metadata IsWindows=true VMSize=StandardA1\r \r # Let's change the pool to enable automatic scaling of compute nodes.\r # This autoscale formula specifies that the number of nodes should be adjusted according\r # to the number of active tasks, up to a maximum of 10 compute nodes.\r az batch pool autoscale enable \\\r     --pool-id mypool-windows \\\r     --auto-scale-formula \"$averageActiveTaskCount = avg($ActiveTasks.GetSample(TimeInterval_Minute * 15));$TargetDedicated = min(10, $averageActiveTaskCount);\"\r \r # We can monitor the resizing of the pool.\r az batch pool show --pool-id mypool-windows\r \r # Once we no longer require the pool to automatically scale, we can disable it.\r az batch pool autoscale disable --pool-id mypool-windows\r ```\r \r ## <a name=\"pool-with-virtual-machine-configuration-sample-script\"></a>使用虚拟机配置来配置池的示例脚本\r ```azurecli\r #!/bin/bash\r \r # Authenticate Batch account CLI session.\r az batch account login -g myresourcegroup -n mybatchaccount\r \r # Retrieve a list of available images and node agent SKUs.\r az batch pool node-agent-skus list\r \r # Create a new Linux pool with a virtual machine configuration. The image reference \r # and node agent SKUs ID can be selected from the ouptputs of the above list command.\r # The image reference is in the format: {publisher}:{offer}:{sku}:{version} where {version} is\r # optional and will default to 'latest'.\r az batch pool create \\\r     --id mypool-linux \\\r     --vm-size Standard_A1 \\\r     --image canonical:ubuntuserver:16.04.0-LTS \\\r     --node-agent-sku-id batch.node.ubuntu 16.04\r \r # Now let's resize the pool to start up some VMs.\r az batch pool resize --pool-id mypool-linux --target-dedicated 5\r \r # We can check the status of the pool to see when it has finished resizing.\r az batch pool show --pool-id mypool-linux\r \r # List the compute nodes running in a pool.\r az batch node list --pool-id mypool-linux\r \r # If a particular node in the pool is having issues, it can be rebooted or reimaged.\r # The ID of the node can be retrieved with the list command above.\r # A typical node ID will be in the format 'tvm-xxxxxxxxxx_1-<timestamp>'.\r az batch node reboot --pool-id mypool-linux --node-id tvm-123_1-20170316t000000z\r \r # Alternatively, one or more compute nodes can be deleted from the pool, and any\r # work already assigned to it can be re-allocated to another node.\r az batch node delete \\\r     --pool-id mypool-linux \\\r     --node-list tvm-123_1-20170316t000000z tvm-123_2-20170316t000000z \\\r     --node-deallocation-option requeue\r ```\r \r ## <a name=\"clean-up-pools\"></a>清理池\r \r 运行上述示例脚本后，可运行以下命令删除池。\r ```azurecli\r az batch pool delete --pool-id mypool-windows\r az batch pool delete --pool-id mypool-linux\r ```\r \r ## <a name=\"script-explanation\"></a>脚本说明\r \r 此脚本使用以下命令创建和操作批处理池。\r 表中的每条命令链接到特定于命令的文档。\r \r | 命令 | 说明 |\r |---|---|\r | [az batch account login](/cli/batch/account#login) | 针对批处理帐户进行身份验证。  |\r | [az batch application summary list](/cli/batch/application/summary#list) | 列出批处理帐户中可用的应用程序。  |\r | [az batch pool create](/cli/batch/pool#create) | 创建 VM 池。  |\r | [az batch pool set](/cli/batch/pool#set) | 更新池的属性。  |\r | [az batch pool node-agent-skus list](/cli/batch/pool/node-agent-skus#list) | 列出可用节点代理 SKU 和映像信息。  |\r | [az batch pool resize](/cli/batch/pool#resize) | 调整指定池中正在运行的 VM 数目。  |\r | [az batch pool show](/cli/batch/pool#show) | 显示池的属性。  |\r | [az batch pool delete](/cli/batch/pool#delete) | 删除指定的池。  |\r | [az batch pool autoscale enable](/cli/batch/pool/autoscale#enable) | 对池启用自动缩放并应用公式。  |\r | [az batch pool autoscale disable](/cli/batch/pool/autoscale#disable) | 对池禁用自动缩放。  |\r | [az batch node list](/cli/batch/node#list) | 列出指定池中的所有计算节点。  |\r | [az batch node reboot](/cli/batch/node#reboot) | 重新启动指定的计算节点。  |\r | [az batch node delete](/cli/batch/node#delete) | 从指定的池中删除列出的节点。  |\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r 有关 Azure CLI 的详细信息，请参阅 [Azure CLI 文档](/cli/overview)。\r \r 可以在 [Azure Batch CLI 文档](../batch-cli-samples.md)中找到其他批处理 CLI 脚本示例。\r \r \r "}