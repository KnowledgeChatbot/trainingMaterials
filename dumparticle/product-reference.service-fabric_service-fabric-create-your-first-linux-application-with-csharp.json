{"Title":"在 Linux 上使用 C# 创建第一个 Azure 微服务应用","Description":"使用 C# 创建和部署 Service Fabric 应用程序","Content":"# <a name=\"create-your-first-azure-service-fabric-application\"></a>创建第一个 Azure Service Fabric 应用程序\r > [!div class=\"op_single_selector\"]\r > * [C# - Windows](service-fabric-create-your-first-application-in-visual-studio.md)\r > * [Java - Linux（预览版）](service-fabric-create-your-first-linux-application-with-java.md)\r > * [C# - Linux（预览版）](service-fabric-create-your-first-linux-application-with-csharp.md)\r >\r >\r \r Service Fabric 提供用于在 Linux 上使用 .NET Core 和 Java 构建服务的 SDK。 本教程介绍如何在 .NET Core 2.0 中使用 C# 创建适用于 Linux 的应用程序和生成服务。\r \r ## <a name=\"prerequisites\"></a>先决条件\r 开始之前，请确保已[设置 Linux 开发环境](service-fabric-get-started-linux.md)。 如果使用的是 Mac OS X，则可以[使用 Vagrant 在虚拟机中设置 Linux 单机环境](service-fabric-get-started-mac.md)。\r \r 还需要安装 [Service Fabric CLI](service-fabric-cli.md)\r \r ### <a name=\"install-and-set-up-the-generators-for-c\"></a>为 C# 安装和设置生成器\r Service Fabric 提供基架工具，可以借助此类工具，使用 Yeoman 模板生成器从终端创建 Service Fabric 应用程序。 遵循以下步骤安装适用于 C# 的 Service Fabric Yeoman 模板生成器：\r \r 1. 在计算机上安装 nodejs 和 NPM\r \r     ```bash\r     sudo apt-get install npm\r     sudo apt install nodejs-legacy\r     ```\r 2. 通过 NPM 在计算机上安装 [Yeoman](http://yeoman.io/) 模板生成器\r \r     ```bash\r     sudo npm install -g yo\r     ```\r 3. 通过 NPM 安装 Service Fabric Yeo Java 应用程序生成器\r \r     ```bash\r     sudo npm install -g generator-azuresfcsharp\r     ```\r \r ## <a name=\"create-the-application\"></a>创建应用程序\r Service Fabric 应用程序可以包含一个或多个服务，每个服务都在提供应用程序功能时具有特定角色。 用于 C# 的 Service Fabric [Yeoman](http://yeoman.io/) 生成器是在上一步安装的，利用它可以轻松地创建第一个服务，以及在以后添加其他服务。 让我们使用 Yeoman 创建包含单个服务的应用程序。\r \r 1. 在终端中，键入以下命令开始构建基架： `yo azuresfcsharp`\r 2. 为应用程序命名。\r 3. 选择第一个服务的类型并为其命名。 对于本教程，我们会选择“Reliable Actor 服务”。\r \r     ![适用于 C# 的 Service Fabric Yeoman 生成器][sf-yeoman]\r \r > [!NOTE]\r > 有关选项的详细信息，请参阅 [Service Fabric 编程模型概述](service-fabric-choose-framework.md)。\r >\r >\r \r ## <a name=\"build-the-application\"></a>构建应用程序\r Service Fabric Yeoman 模板包含构建脚本，可用于从终端构建应用程序（在导航到应用程序文件夹后）。\r \r ```sh\r cd myapp\r ./build.sh\r ```\r \r ## <a name=\"deploy-the-application\"></a>部署应用程序\r \r 生成应用程序后，可以将其部署到本地群集。\r \r 1. 连接到本地 Service Fabric 群集。\r \r     ```bash\r     sfctl cluster select --endpoint http://localhost:19080\r     ```\r \r 2. 运行模板中提供的安装脚本可将应用程序包复制到群集的映像存储区、注册应用程序类型和创建应用程序实例。\r \r     ```bash\r     ./install.sh\r     ```\r \r 部署生成的应用程序时，其方式与部署任何其他 Service Fabric 应用程序相同。 如需详细的说明，请参阅相关文档，了解如何[使用 Service Fabric CLI 管理 Service Fabric 应用程序](service-fabric-application-lifecycle-sfctl.md)。\r \r 这些命令的参数可以在应用程序包内的生成清单中找到。\r \r 应用程序部署完以后，请打开浏览器并导航到 [Service Fabric Explorer](service-fabric-visualizing-your-cluster.md)，其地址为 [http://localhost:19080/Explorer](http://localhost:19080/Explorer)。 然后，展开“应用程序”节点，注意现在有一个条目是用于应用程序类型，另一个条目用于该类型的第一个实例。\r \r ## <a name=\"start-the-test-client-and-perform-a-failover\"></a>启动测试客户端并执行故障转移\r 执行组件项目没有任何属于自己的项。 它们需要其他服务或客户端发送消息给它们。 执行组件模板包含简单的测试脚本，可用于与执行组件服务交互。\r \r 1. 使用监视实用工具运行脚本，查看执行组件服务的输出。\r \r     ```bash\r     cd myactorsvcTestClient\r     watch -n 1 ./testclient.sh\r     ```\r 2. 在 Service Fabric Explorer 中，找到托管执行组件服务主副本的节点。 在以下屏幕截图中，该节点是节点 3。\r \r     ![在 Service Fabric Explorer 中查找主副本][sfx-primary]\r 3. 单击上一步找到的节点，并在“操作”菜单中选择“停用(重启)”。 此操作在本地群集中重新启动一个节点，从而强制故障转移到在另一个节点上运行的一个辅助副本。 执行此操作时，请注意测试客户端的输出，可以看到，尽管是故障转移，计数器仍继续递增。\r \r ## <a name=\"adding-more-services-to-an-existing-application\"></a>将更多服务添加到现有应用程序\r \r 要将另一个服务添加到使用 `yo` 创建的应用程序，请执行以下步骤：\r 1. 将目录更改为现有应用程序的根目录。  例如 `cd ~/YeomanSamples/MyApplication`（如果 `MyApplication` 是 Yeoman 创建的应用程序）。\r 2. 运行 `yo azuresfcsharp:AddService`\r \r ## <a name=\"migrating-from-projectjson-to-csproj\"></a>从 project.json 迁移到 .csproj\r 1. 在项目根目录中运行“dotnet migrate”可将所有 project.json 迁移到 csproj 格式。\r 2. 将项目引用相应地更新到项目文件的 csproj 文件中。\r 3. 将项目文件名更新到 build.sh 格式的 csproj 文件。\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r * [使用 Service Fabric CLI 与 Service Fabric 群集交互](service-fabric-cli.md)\r * 了解 [Service Fabric 支持选项](service-fabric-support.md)\r * [Service Fabric CLI 入门](service-fabric-cli.md)\r \r <!-- Images -->\r [sf-yeoman]: ./media/service-fabric-create-your-first-linux-application-with-csharp/yeoman-csharp.png\r [sfx-primary]: ./media/service-fabric-create-your-first-linux-application-with-csharp/sfx-primary.png\r \r <!--Update_Description: update meta properties, update reference link, wording update -->"}