{"Title":"如何通过 Ruby 使用 Blob 存储（对象存储）","Description":"使用 Azure Blob 存储（对象存储）将非结构化数据存储在云中。","Content":"# <a name=\"how-to-use-blob-storage-from-ruby\"></a>如何通过 Ruby 使用 Blob 存储\r [!INCLUDE [storage-selector-blob-include](../../../includes/storage-selector-blob-include.md)]\r \r [!INCLUDE [storage-try-azure-tools-queues](../../../includes/storage-try-azure-tools-blobs.md)]\r \r ## <a name=\"overview\"></a>概述\r Azure Blob 存储是一种将非结构化数据作为对象/Blob 存储在云中的服务。 Blob 存储可以存储任何类型的文本或二进制数据，例如文档、媒体文件或应用程序安装程序。 Blob 存储也称为对象存储。\r \r 本指南将演示如何使用 Blob 存储执行常见方案。 相关示例是使用 Ruby API 编写的。 涉及的任务包括上传、列出、下载和删除 Blob。\r \r [!INCLUDE [storage-blob-concepts-include](../../../includes/storage-blob-concepts-include.md)]\r \r [!INCLUDE [storage-create-account-include](../../../includes/storage-create-account-include.md)]\r \r ## <a name=\"create-a-ruby-application\"></a>创建 Ruby 应用程序\r 创建 Ruby 应用程序。 有关说明，请参阅 [Azure VM 上的 Ruby on Rails Web 应用程序](../../virtual-machines/linux/classic/virtual-machines-linux-classic-ruby-rails-web-app.md)\r \r ## <a name=\"configure-your-application-to-access-storage\"></a>配置应用程序以访问存储\r 要使用 Azure 存储，需要下载和使用 Ruby azure 包，其中包括一组便于与存储 REST 服务进行通信的库。\r \r ### <a name=\"use-rubygems-to-obtain-the-package\"></a>使用 RubyGems 获取该程序包\r 1. 使用命令行接口，例如 **PowerShell** (Windows)、**Terminal** (Mac) 或 **Bash** (Unix)。\r 2. 在命令窗口中键入“gem install azure”以安装 gem 和依赖项。\r \r ### <a name=\"import-the-package\"></a>导入包\r 使用常用的文本编辑器将以下内容添加到要在其中使用存储的 Ruby 文件的顶部：\r \r ```ruby\r require \"azure\"\r ```\r \r ## <a name=\"set-up-an-azure-storage-connection\"></a>设置 Azure 存储连接\r Azure 模块会读取环境变量 **AZURE\\_STORAGE\\_ACCOUNT** 和 **AZURE\\_STORAGE\\_ACCESS_KEY** 以获取连接到 Azure 存储帐户所需的信息。 如果未设置这些环境变量，则在使用 **Azure::Blob::BlobService** 之前必须通过以下代码指定帐户信息：\r \r ```ruby\r Azure.config.storage_account_name = \"<your azure storage account>\"\r Azure.config.storage_access_key = \"<your azure storage access key>\"\r ```\r \r 从 Azure 门户中的经典或 Resource Manager 存储帐户中获取这些值：\r \r 1. 登录到 [Azure 门户](https://portal.azure.cn)。\r 2. 导航到要使用的存储帐户。\r 3. 在右侧的“设置”边栏选项卡中，单击“访问密钥” 。\r 4. 在显示的“访问密钥”边栏选项卡中，可看到访问密钥 1 和访问密钥 2。 可以使用其中任意一个密钥。\r 5. 单击复制图标以将密钥复制到剪贴板。\r \r ## <a name=\"create-a-container\"></a>创建容器\r [!INCLUDE [storage-container-naming-rules-include](../../../includes/storage-container-naming-rules-include.md)]\r \r 使用 **Azure::Blob::BlobService** 对象可以对容器和 blob 进行操作。 若要创建容器，请使用 **create\\_container()** 方法。\r \r 以下代码示例创建一个容器或输出存在的错误。\r \r ```ruby\r azure_blob_service = Azure::Blob::BlobService.new\r begin\r   container = azure_blob_service.create_container(\"test-container\")\r rescue\r   puts $!\r end\r ```\r \r 要将容器中的文件设为公用，可以设置容器的权限。\r \r 只需修改 <strong>create\\_container()</strong> 调用即可传递 **:public\\_access\\_level** 选项：\r \r ```ruby\r container = azure_blob_service.create_container(\"test-container\",\r   :public_access_level => \"<public access level>\")\r ```\r \r **:public\\_access\\_level** 选项的有效值为：\r \r * **blob：**指定对 Blob 的公共读取权限。 可以通过匿名请求读取此容器中的 Blob 数据，但容器数据不可用。 客户端无法通过匿名请求枚举容器中的 Blob。\r * **容器：**指定对容器和 blob 数据的完整公共读取权限。 客户端可以通过匿名请求枚举容器中的 Blob，但无法枚举存储帐户中的容器。\r \r 另外，还可以通过使用 **set\\_container\\_acl()** 方法指定公共访问级别来修改容器的公共访问级别。\r \r 以下代码示例更改 **容器**的公共访问级别：\r \r ```ruby\r azure_blob_service.set_container_acl('test-container', \"container\")\r ```\r \r ## <a name=\"upload-a-blob-into-a-container\"></a>将 Blob 上传到容器中\r 要将内容上传到 blob，请使用 **create\\_block\\_blob()** 方法创建 blob，将文件或字符串用作 blob 的内容。\r \r 以下代码会将文件 **test.png** 作为名为“image-blob”的新 blob 上传到容器中。\r \r ```ruby\r content = File.open(\"test.png\", \"rb\") { |file| file.read }\r blob = azure_blob_service.create_block_blob(container.name,\r   \"image-blob\", content)\r puts blob.name\r ```\r \r ## <a name=\"list-the-blobs-in-a-container\"></a>列出容器中的 Blob\r 若要列出容器，请使用 **list_containers()** 方法。\r 若要列出容器中的 blob，请使用 **list\\_blobs()** 方法。\r \r 这会输出帐户的所有容器中的所有 Blog 的 URL。\r \r ```ruby\r containers = azure_blob_service.list_containers()\r containers.each do |container|\r   blobs = azure_blob_service.list_blobs(container.name)\r   blobs.each do |blob|\r     puts blob.name\r   end\r end\r ```\r \r ## <a name=\"download-blobs\"></a>下载 Blob\r 若要下载 blob，请使用 **get\\_blob()** 方法来检索内容。\r \r 以下代码示例演示了如何使用 **get\\_blob()** 下载“image-blob”的内容并将其写入本地文件。\r \r ```ruby\r blob, content = azure_blob_service.get_blob(container.name,\"image-blob\")\r File.open(\"download.png\",\"wb\") {|f| f.write(content)}\r ```\r \r ## <a name=\"delete-a-blob\"></a>删除 Blob\r 最后，若要删除 blob，请使用 **delete\\_blob()** 方法。 以下代码示例演示了如何删除 blob。\r \r ```ruby\r azure_blob_service.delete_blob(container.name, \"image-blob\")\r ```\r \r ## <a name=\"next-steps\"></a>后续步骤\r 若要了解有关更复杂存储任务的信息，请访问下面的链接：\r \r * [Azure 存储团队博客](http://blogs.msdn.com/b/windowsazurestorage/)\r * [Azure SDK for Ruby](https://github.com/WindowsAzure/azure-sdk-for-ruby) 存储库\r * [使用 AzCopy 命令行实用程序传输数据](../common/storage-use-azcopy.md?toc=%2fstorage%2fblobs%2ftoc.json)\r \r "}