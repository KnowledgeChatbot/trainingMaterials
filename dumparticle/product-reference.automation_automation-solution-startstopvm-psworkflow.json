{"Title":"通过 Azure 自动化启动和停止虚拟机 - PowerShell 工作流","Description":"Azure 自动化方案的图形版本，包括启动和停止经典虚拟机所需的 Runbook。","Content":"# <a name=\"azure-automation-scenario---starting-and-stopping-virtual-machines\"></a>Azure 自动化方案 - 启动和停止虚拟机\r 此 Azure 自动化方案包括启动和停止经典虚拟机所需的 Runbook。  你可以将此方案用于以下任何情形：  \r \r * 在你自己的环境中使用 Runbook，无需修改。\r * 修改 Runbook 以执行自定义功能。  \r * 从另一作为整体解决方案一部分的 Runbook 调用 Runbook。\r * 使用 Runbook 作为教程来学习 Runbook 创作概念。\r \r [!INCLUDE [automation-azurechinacloud-environment-parameter](../../includes/automation-azurechinacloud-environment-parameter.md)]\r \r ## <a name=\"getting-the-scenario\"></a>获取方案\r 此方案包含两个可通过以下链接下载的 PowerShell 工作流 Runbook。\r \r | Runbook | 链接 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | Start-AzureVMs |[启动 Azure 经典 VM](https://gallery.technet.microsoft.com/Start-Azure-Classic-VMs-86ef746b) |PowerShell 工作流 |启动 Azure 订阅者中的所有经典虚拟机，或者启动所有具有特定服务名称的虚拟机。 |\r | Stop-AzureVMs |[停止 Azure 经典 VM](https://gallery.technet.microsoft.com/Stop-Azure-Classic-VMs-7a4ae43e) |PowerShell 工作流 |停止自动化帐户中的所有虚拟机，或者停止所有具有特定服务名称的虚拟机。 |\r \r ## <a name=\"installing-and-configuring-the-scenario\"></a>安装和配置方案\r ### <a name=\"1-install-the-runbooks\"></a>1.安装 Runbook\r 下载 Runbook 之后，可以使用[导入 Runbook](/automation/automation-creating-importing-runbook/#ImportRunbook) 中的流程导入它们。\r \r ### <a name=\"2-review-the-description-and-requirements\"></a>2.查看说明和要求\r Runbook 包括带注释的帮助文本，其中包括说明和所需的资产。  你也可以从本文中获取相同的信息。\r \r ### <a name=\"3-configure-assets\"></a>3.配置资产\r Runbook 需要以下资产，你必须创建这些资产并在其中填充适当的值。\r \r | 资产类型 | 资产名称 | 说明 |\r |:--- |:--- |:--- |:--- |\r | 凭据 |AzureCredential |包含帐户凭据，该帐户有权在 Azure 订阅中启动和停止虚拟机。  此外，也可以在 Add-AzureAccount -Environment AzureChinaCloud 活动的 Credential 参数中指定其他凭据资产。 |\r | 变量 |AzureSubscriptionId |包含 Azure 订阅的订阅 ID。 |\r \r ## <a name=\"using-the-scenario\"></a>使用方案\r ### <a name=\"parameters\"></a>Parameters\r 每个 Runbook 具有以下参数。  必需参数必须提供值，其他参数则可根据要求选择性地提供值。\r \r | 参数 | 类型 | 必需 | 说明 |\r |:--- |:--- |:--- |:--- |\r | ServiceName |字符串 |否 |如果提供了值，则会启动或停止具有该服务名称的所有虚拟机。  如果没有提供值，则会启动或停止 Azure 订阅中的所有经典虚拟机。 |\r | AzureSubscriptionIdAssetName |字符串 |否 |包含 [变量资产](#installing-and-configuring-the-scenario) 的名称，该资产中包含 Azure 订阅的订阅 ID。  如果不指定值，则会使用 *AzureSubscriptionId* 。 |\r | AzureCredentialAssetName |字符串 |否 |包含 [凭据资产](#installing-and-configuring-the-scenario) 的名称，该资产中包含要使用的 Runbook 的凭据。  如果不指定值，则会使用 *AzureCredential* 。 |\r \r ### <a name=\"starting-the-runbooks\"></a>启动 Runbook\r 可以使用[在 Azure 自动化中启动 Runbook](automation-starting-a-runbook.md) 中的任何方法启动此方案中的任一 Runbook。\r \r 以下示例命令使用 Windows PowerShell 来运行 **StartAzureVMs** ，以便启动服务名称为 *MyVMService*的所有虚拟机。\r \r     $params = @{\"ServiceName\"=\"MyVMService\"}\r     Start-AzureAutomationRunbook -AutomationAccountName \"MyAutomationAccount\" -Name \"Start-AzureVMs\" -Parameters $params\r \r ### <a name=\"output\"></a>输出\r 这些 Runbook 会为每个虚拟机[输出一条消息](automation-runbook-output-and-messages.md)，指示是否已成功提交启动或停止指令。  你可以在输出中查找特定字符串，以确定每个 Runbook 的结果。  可能的输出字符串列在下表中。\r \r | Runbook | 条件 | 消息 |\r |:--- |:--- |:--- |\r | Start-AzureVMs |虚拟机已运行 |MyVM 已运行 |\r | Start-AzureVMs |已成功提交虚拟机启动请求 |MyVM 已启动 |\r | Start-AzureVMs |虚拟机启动请求失败 |MyVM 无法启动 |\r | Stop-AzureVMs |虚拟机已停止 |MyVM 已停止 |\r | Stop-AzureVMs |已成功提交虚拟机停止请求 |MyVM 已停止 |\r | Stop-AzureVMs |虚拟机停止请求失败 |MyVM 无法停止 |\r \r 例如，Runbook 中的以下代码段尝试启动服务名称为 *MyServiceName*的所有虚拟机。  如果任何启动请求失败，则可能会执行错误操作。\r \r     $results = Start-AzureVMs -ServiceName \"MyServiceName\"\r     foreach ($result in $results) {\r         if ($result -like \"* has been started\" ) {\r             # Action to take in case of success.\r         }\r         else {\r             # Action to take in case of error.\r         }\r     }\r \r ## <a name=\"detailed-breakdown\"></a>明细\r 下面是此方案中 Runbook 的明细。  你可以使用此信息来自定义 Runbook，或只是从中学习如何创作自己的自动化方案。\r \r ### <a name=\"parameters\"></a>Parameters\r     param (\r         [Parameter(Mandatory=$false)]\r         [String]  $AzureCredentialAssetName = 'AzureCredential',\r \r         [Parameter(Mandatory=$false)]\r         [String] $AzureSubscriptionIdAssetName = 'AzureSubscriptionId',\r \r         [Parameter(Mandatory=$false)]\r         [String] $ServiceName\r     )\r \r 工作流开始时，会获取 [输入参数](#using-the-scenario)的值。  如果未提供资产名称，则使用默认名称。\r \r ### <a name=\"output\"></a>输出\r     # Returns strings with status messages\r     [OutputType([String])]\r \r 此行声明 Runbook 的输出将是一个字符串。  这不是必需的，但在将 Runbook 用作[子 Runbook](automation-child-runbooks.md) 的情况下，这是一种最佳做法，便于父 Runbook 了解应该期望哪种输出类型。\r \r ### <a name=\"authentication\"></a>身份验证\r     # Connect to Azure and select the subscription to work against\r     $Cred = Get-AutomationPSCredential -Name $AzureCredentialAssetName\r     $null = Add-AzureAccount -Environment AzureChinaCloud -Credential $Cred -ErrorAction Stop\r     $SubId = Get-AutomationVariable -Name $AzureSubscriptionIdAssetName\r     $null = Select-AzureSubscription -SubscriptionId $SubId -ErrorAction Stop\r \r 后续行设置将用于 Runbook 剩余部分的[凭据](automation-credentials.md)和 Azure 订阅。\r 首先，我们使用 **Get-AutomationPSCredential** 来获取用于存储凭据的资产，这些凭据具有相应的访问权限，可用于启动和停止 Azure 订阅中的虚拟机。 **Add-AzureAccount -Environment AzureChinaCloud** 然后就会使用此资产来设置凭据。  该输出已分配给一个虚拟变量，因此不会包括在 Runbook 输出中。  \r \r 然后将使用 Get-AutomationVariable 检索包含订阅 ID 的变量资产，并使用 Select-AzureSubscription 设置订阅。\r \r ### <a name=\"get-vms\"></a>获取 VM\r     # If there is a specific cloud service, then get all VMs in the service,\r     # otherwise get all VMs in the subscription.\r     if ($ServiceName)\r     {\r         $VMs = Get-AzureVM -ServiceName $ServiceName\r     }\r     else\r     {\r         $VMs = Get-AzureVM\r     }\r \r **Get-AzureVM** 用于检索兼容 Runbook 的虚拟机。  如果在 **ServiceName** 输入变量中提供了值，则仅检索使用该服务名称的虚拟机。  如果 **ServiceName** 为空，则检索所有虚拟机。\r \r ### <a name=\"startstop-virtual-machines-and-send-output\"></a>启动/停止虚拟机并发送输出。\r     # Start each of the stopped VMs\r     foreach ($VM in $VMs)\r     {\r         if ($VM.PowerState -eq \"Started\")\r         {\r             # The VM is already started, so send notice\r             Write-Output ($VM.InstanceName + \" is already running\")\r         }\r         else\r         {\r             # The VM needs to be started\r             $StartRtn = Start-AzureVM -Name $VM.Name -ServiceName $VM.ServiceName -ErrorAction Continue\r \r             if ($StartRtn.OperationStatus -ne 'Succeeded')\r             {\r                 # The VM failed to start, so send notice\r                 Write-Output ($VM.InstanceName + \" failed to start\")\r             }\r             else\r             {\r                 # The VM started, so send notice\r                 Write-Output ($VM.InstanceName + \" has been started\")\r             }\r         }\r     }\r \r 后续行将在每个虚拟机中执行。  首先会检查虚拟机的 **PowerState** ，看其是处于运行还是停止状态，具体取决于 Runbook。  如果该虚拟机已处于目标状态，则会将消息发送到输出中，Runbook 结束。  如果该虚拟机尚未处于目标状态，则会使用 Start-AzureVM 或 Stop-AzureVM 尝试启动或停止虚拟机，其结果就是将请求存储到某个变量中。  然后会将一条消息发送到输出，指出是否已成功提交启动或停止请求。\r \r ## <a name=\"next-steps\"></a>后续步骤\r * 若要了解有关使用子 Runbook 的详细信息，请参阅 [Azure 自动化中的子 Runbook](automation-child-runbooks.md)\r * 若要详细了解执行 Runbook 期间的输出消息和日志记录以帮助进行故障排除，请参阅 [Azure 自动化中的 Runbook 输出和消息](automation-runbook-output-and-messages.md)"}