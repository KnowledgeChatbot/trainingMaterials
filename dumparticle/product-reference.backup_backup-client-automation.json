{"Title":"使用 PowerShell 部署和管理 Windows Server/客户端的备份","Description":"了解如何使用 PowerShell 部署和管理 Azure 备份","Content":"\r # 使用 PowerShell 部署和管理 Windows Server/Windows 客户端的 Azure 备份\r \r > [!div class=\"op_single_selector\"]\r >- [ARM](./backup-client-automation.md)\r >- [经典](./backup-client-automation-classic.md)\r \r 本文说明如何使用 PowerShell 在 Windows Server 或 Windows 客户端上设置 Azure 备份，以及管理备份和恢复。\r \r ## 安装 Azure PowerShell\r \r [!INCLUDE [了解部署模型](../../includes/learn-about-deployment-models-include.md)]\r \r 本文重点介绍可用于在资源组中使用恢复服务保管库的 Azure资源管理器(ARM) PowerShell cmdlet。\r \r Azure PowerShell 1.0 已在 2015 年 10 月发布。此版本在 0.9.8 版本的基础上进行了一些重大的更改，尤其是对 cmdlet 的命名方式进行了更改。1.0 版 cmdlet 遵循命名模式 {谓词}-AzureRm{名词}；而 0.9.8 名称不包括 **Rm**（例如 New-AzureResourceGroup 取代了 New-AzureRmResourceGroup）。使用 Azure PowerShell 0.9.8 时，首先必须通过运行 **Switch-AzureMode AzureResourceManager** 命令启用资源管理器模式。1.0 或更高版中并不需要此命令在。\r \r 若要将针对 0.9.8 环境编写的脚本用在 1.0 或更高版本的环境中，应在预生产环境中对脚本进行仔细的测试，然后才能将其用在生产中，以免造成意外影响。\r \r [下载最新的 PowerShell 版本](https://github.com/Azure/azure-powershell/releases)（所需最低版本：1.0.0）\r \r [!INCLUDE [arm-getting-setup-powershell](../../includes/arm-getting-setup-powershell.md)]\r \r ## 创建恢复服务保管库\r 以下步骤将引导用户创建恢复服务保管库。恢复服务保管库不同于备份保管库。\r \r 1. 如果是首次使用 Azure 备份，则必须使用 **Register-AzureRMResourceProvider** cmdlet 将 Azure 恢复服务提供程序注册到订阅。\r \r     ```\r     PS C:\\> Register-AzureRmResourceProvider -ProviderNamespace \"Microsoft.RecoveryServices\"\r     ```\r \r 2. 恢复服务保管库是一种 ARM 资源，因此需要将它放在资源组中。可以使用现有资源组，也可以创建新组。创建新的资源组时，请指定资源组的名称和位置。\r \r     ```\r     PS C:\\> New-AzureRmResourceGroup -Name \"test-rg\" -Location \"China North\"\r     ```\r \r 3. 使用 **New-AzureRmRecoveryServicesVault** cmdlet 创建新的保管库。确保为保管库指定的位置与用于资源组的位置是相同的。\r \r     ```\r     PS C:\\> New-AzureRmRecoveryServicesVault -Name \"testvault\" -ResourceGroupName \"test-rg\" -Location \"China North\"\r     ```\r \r 4. 指定要使用的存储冗余类型；你可以使用[本地冗余存储 (LRS)](../storage/common/storage-redundancy.md#locally-redundant-storage) 或[异地冗余存储 (GRS)](../storage/common/storage-redundancy.md#geo-redundant-storage)。以下示例显示，testVault 的 -BackupStorageRedundancy 选项设置为 GeoRedundant。\r \r     > [!TIP]\r     > 许多 Azure 备份 cmdlet 要求使用恢复服务保管库对象作为输入。因此，在变量中存储备份恢复服务保管库对象可提供方便。\r     > \r     > \r \r     ```\r     PS C:\\> $vault1 = Get-AzureRmRecoveryServicesVault -Name \"testVault\"\r     PS C:\\> Set-AzureRmRecoveryServicesBackupProperties  -vault $vault1 -BackupStorageRedundancy GeoRedundant\r     ```\r \r ## 在订阅中查看保管库\r 使用 **Get-AzureRmRecoveryServicesVault** 查看当前订阅中所有保管库的列表。可以使用此命令来查看是否创建了新的保管库，或者查看订阅中的可用保管库。\r \r 运行 Get-AzureRmRecoveryServicesVault 命令即可列出订阅中的所有保管库。\r \r ```\r PS C:\\> Get-AzureRmRecoveryServicesVault\r Name              : Contoso-vault\r ID                : /subscriptions/1234\r Type              : Microsoft.RecoveryServices/vaults\r Location          : ChinaNorth\r ResourceGroupName : Contoso-docs-rg\r SubscriptionId    : 1234-567f-8910-abc\r Properties        : Microsoft.Azure.Commands.RecoveryServices.ARSVaultProperties\r ```\r \r ## 安装 Azure 备份代理\r 在安装 Azure 备份代理之前，必须先将安装程序下载到 Windows Server 上。可以从 [Microsoft 下载中心](http://aka.ms/azurebackup_agent)或恢复服务保管库的“仪表板”页获取最新版本的安装程序。将安装程序保存到方便访问的位置，例如 *C:\\\\Downloads*。\r \r 若要安装代理，请在已提升权限的 PowerShell 控制台中运行以下命令：\r \r ```\r PS C:\\> MARSAgentInstaller.exe /q\r ```\r \r 这将以所有默认选项安装代理。安装将在几分钟内在后台完成。如果不指定 */nu* 选项，则安装结束时，将打开“Windows 更新”窗口以检查更新。安装之后，代理将显示在已安装程序列表中。\r \r 若要查看已安装程序的列表，请转到“控制面板”>“程序”>“程序和功能”。\r \r ![已安装代理](./media/backup-client-automation/installed-agent-listing.png)\r \r ### 安装选项\r \r 若要查看可通过命令行运行的所有选项，请使用以下命令：\r \r ```\r PS C:\\> MARSAgentInstaller.exe /?\r ```\r \r 可用选项包括：\r \r | 选项 | 详细信息 | 默认 |\r | ---- | ----- | ----- |\r | /q | 静默安装 | - | \r | /p:\"location\" | Azure 备份代理的安装文件夹路径。| C:\\\\Program Files\\\\Microsoft Azure Recovery Services Agent | \r | /s:\"location\" | Azure 备份代理的缓存文件夹路径。| C:\\\\Program Files\\\\Microsoft Azure Recovery Services Agent\\\\Scratch | \r | /m | 选择启用 Microsoft 更新 | - | \r | /nu | 安装完成后不要检查更新 | - | \r | /d | 卸载 Azure 恢复服务代理 | - | \r | /ph | 代理主机地址 | - | \r | /po | 代理主机端口号 | - | \r | /pu | 代理主机用户名 | - | \r | /pw | 代理密码 | - |\r \r ## 将 Windows Server 或 Windows 客户端计算机注册到恢复服务保管库\r \r 创建恢复服务保管库后，请下载最新代理和保管库凭据，并将其存储在便于访问的位置（如 C:\\\\Downloads）。\r \r ```\r PS C:\\> $credspath = \"C:\\downloads\"\r PS C:\\> $credsfilename = Get-AzureRmRecoveryServicesVaultSettingsFile -Backup -Vault $vault1 -Path  $credspath\r PS C:\\> $credsfilename\r \r FilePath\r --------\r C:\\downloads\\testvault_Sun Apr 10 2016.VaultCredentials\r ```\r \r 在 Windows Server 或 Windows 客户端计算机上，运行 [Start-OBRegistration](https://technet.microsoft.com/zh-cn/library/hh770398%28v=wps.630%29.aspx) cmdlet 以将计算机注册到保管库。\r \r ```\r PS C:\\> $cred = $credspath + $credsfilename\r PS C:\\> Start-OBRegistration-VaultCredentials $cred -Confirm:$false\r CertThumbprint      :7a2ef2caa2e74b6ed1222a5e89288ddad438df2\r SubscriptionID      : ef4ab577-c2c0-43e4-af80-af49f485f3d1\r ServiceResourceName: testvault\r Region              :China North\r Machine registration succeeded.\r ```\r \r > [!IMPORTANT]\r 请勿使用相对路径来指定保管库凭据文件。必须提供绝对路径作为 cmdlet 的输入。\r > \r > \r \r ## 网络设置\r 如果 Windows 计算机通过代理服务器连接到 Internet，则也可以向代理提供代理设置。此示例未使用代理服务器，因此我们会显式清除任何与代理相关的信息。\r \r 也可针对给定的一组“星期几”，使用 ```work hour bandwidth``` 和 ```non-work hour bandwidth``` 选项来控制带宽使用。\r \r 使用 [Set-OBMachineSetting](https://technet.microsoft.com/zh-cn/library/hh770409%28v=wps.630%29.aspx) cmdlet 设置代理和带宽详细信息：\r \r ```\r PS C:\\> Set-OBMachineSetting -NoProxy\r Server properties updated successfully.\r \r PS C:\\> Set-OBMachineSetting -NoThrottle\r Server properties updated successfully.\r ```\r \r ## 加密设置\r 发送到 Azure 备份的备份数据将会加密，以保护数据的机密性。加密通行短语是在还原时用于解密数据的“密码”。\r \r ```\r PS C:\\> ConvertTo-SecureString -String \"Complex!123_STRING\" -AsPlainText -Force | Set-OBMachineSetting\r Server properties updated successfully\r ```\r \r > [!IMPORTANT]\r 请妥善保管设置好的通行短语，并保证其安全。如果没有此通行短语，则无法从 Azure 还原数据。\r > \r > \r \r ## 备份文件和文件夹\r 从 Windows Server 和客户端到 Azure 备份的所有备份由策略控制。策略由三个部分组成：\r \r 1. **备份计划**，用于指定需要备份并与服务保持同步的时间。\r 2. **保留计划**，用于指定要在 Azure 中保留恢复点的时长。\r 3. **文件包含/排除规范**，用于指示应备份的内容。\r \r 在本文档中，由于自动备份，因此假设尚未配置任何选项。首先，使用 [New-OBPolicy](https://technet.microsoft.com/zh-cn/library/hh770416.aspx) cmdlet 创建新的备份策略。\r \r ```\r PS C:\\> $newpolicy = New-OBPolicy\r ```\r \r 该策略暂时为空，需要使用其他 cmdlet 来定义要包含或排除的项、运行备份的时间，以及备份的存储位置。\r \r ### 配置备份计划\r 在策略的 3 个组成部分中，第 1 部分是使用 [New-OBSchedule](https://technet.microsoft.com/zh-cn/library/hh770401) cmdlet 创建的备份计划。备份计划将定义何时需要备份。创建计划时，需要指定 2 个输入参数：\r \r - 应在“星期几”运行备份。可以选择只在一周的某一天、一周的每一天或其中任意日期组合运行备份作业。\r - 应在“一天中的何时”运行备份。最多可以定义一天的 3 个不同日期时间来触发备份\r \r 例如，可以配置在每个星期六和星期日下午 4 点运行备份策略。\r \r ```\r PS C:\\> $sched = New-OBSchedule -DaysofWeek Saturday, Sunday -TimesofDay 16:00\r ```\r \r 备份计划需要与策略相关联，这可以使用 [Set-OBSchedule](https://technet.microsoft.com/zh-cn/library/hh770407) cmdlet 来实现。\r \r ```\r PS C:\\> Set-OBSchedule -Policy $newpolicy -Schedule $sched\r BackupSchedule : 4:00 PM Saturday, Sunday, Every 1 week(s) DsList : PolicyName : RetentionPolicy : State : New PolicyState : Valid\r ```\r \r ### 配置保留策略\r 保留策略定义基于备份作业创建的恢复点的保留时间。使用 [New-OBRetentionPolicy](https://technet.microsoft.com/zh-cn/library/hh770425) cmdlet 创建新的保留策略时，可以指定 Azure 备份需要保留备份恢复点的天数。以下示例将保留策略设置为 7 天。\r \r ```\r PS C:\\> $retentionpolicy = New-OBRetentionPolicy -RetentionDays 7\r ```\r \r 必须使用 [Set-OBRetentionPolicy](https://technet.microsoft.com/zh-cn/library/hh770405) cmdlet 将保留策略与主要策略相关联：\r \r ```\r PS C:\\> Set-OBRetentionPolicy -Policy $newpolicy -RetentionPolicy $retentionpolicy\r \r BackupSchedule  : 4:00 PM\r                   Saturday, Sunday,\r                   Every 1 week(s)\r DsList          :\r PolicyName      :\r RetentionPolicy : Retention Days : 7\r \r                   WeeklyLTRSchedule :\r                   Weekly schedule is not set\r \r                   MonthlyLTRSchedule :\r                   Monthly schedule is not set\r \r                   YearlyLTRSchedule :\r                   Yearly schedule is not set\r \r State           : New\r PolicyState     : Valid\r ```\r \r ### 包含和排除要备份的文件\r ```OBFileSpec``` 对象定义备份中要包含和排除的文件。这组规则可划分出计算机上要保护的文件和文件夹。可设置任意数量的文件包含或排除规则，并将其与策略相关联。创建新的 OBFileSpec 对象时，可执行以下操作：\r \r - 指定要包含的文件和文件夹\r - 指定要排除的文件和文件夹\r - 指定要递归备份文件夹中的数据，或是否仅备份指定文件夹中的顶级文件。\r \r 可以在 New-OBFileSpec 命令中使用 -NonRecursive 标志来完成后一种指定。\r \r 在以下示例中，备份卷 C: 和 D:，并排除 Windows 文件夹和任何临时文件夹中的操作系统二进制文件。为此，使用 [New-OBFileSpec](https://technet.microsoft.com/zh-cn/library/hh770408) cmdlet 创建两个文件规范 - 一个用于包含，一个用于排除。创建文件规范后，使用 [Add-OBFileSpec](https://technet.microsoft.com/zh-cn/library/hh770424) cmdlet 将它们与策略相关联。\r \r ```\r PS C:\\> $inclusions = New-OBFileSpec -FileSpec @(\"C:\", \"D:\")\r \r PS C:\\> $exclusions = New-OBFileSpec -FileSpec @(\"C:\\windows\", \"C:\\temp\") -Exclude\r \r PS C:\\> Add-OBFileSpec -Policy $newpolicy -FileSpec $inclusions\r \r BackupSchedule  : 4:00 PM\r                   Saturday, Sunday,\r                   Every 1 week(s)\r DsList          : {DataSource\r                   DatasourceId:0\r                   Name:C:\\\r                   FileSpec:FileSpec\r                   FileSpec:C:\\\r                   IsExclude:False\r                   IsRecursive:True\r \r                   , DataSource\r                   DatasourceId:0\r                   Name:D:\\\r                   FileSpec:FileSpec\r                   FileSpec:D:\\\r                   IsExclude:False\r                   IsRecursive:True\r \r                   }\r PolicyName      :\r RetentionPolicy : Retention Days : 7\r \r                   WeeklyLTRSchedule :\r                   Weekly schedule is not set\r \r                   MonthlyLTRSchedule :\r                   Monthly schedule is not set\r \r                   YearlyLTRSchedule :\r                   Yearly schedule is not set\r \r State           : New\r PolicyState     : Valid\r \r PS C:\\> Add-OBFileSpec -Policy $newpolicy -FileSpec $exclusions\r \r BackupSchedule  : 4:00 PM\r                   Saturday, Sunday,\r                   Every 1 week(s)\r DsList          : {DataSource\r                   DatasourceId:0\r                   Name:C:\\\r                   FileSpec:FileSpec\r                   FileSpec:C:\\\r                   IsExclude:False\r                   IsRecursive:True\r                   ,FileSpec\r                   FileSpec:C:\\windows\r                   IsExclude:True\r                   IsRecursive:True\r                   ,FileSpec\r                   FileSpec:C:\\temp\r                   IsExclude:True\r                   IsRecursive:True\r \r                   , DataSource\r                   DatasourceId:0\r                   Name:D:\\\r                   FileSpec:FileSpec\r                   FileSpec:D:\\\r                   IsExclude:False\r                   IsRecursive:True\r \r                   }\r PolicyName      :\r RetentionPolicy : Retention Days : 7\r \r                   WeeklyLTRSchedule :\r                   Weekly schedule is not set\r \r                   MonthlyLTRSchedule :\r                   Monthly schedule is not set\r \r                   YearlyLTRSchedule :\r                   Yearly schedule is not set\r \r State           : New\r PolicyState     : Valid\r ```\r \r ### 应用策略\r 现在已完成策略对象，并且具有关联的备份计划、保留策略及文件包含/排除列表。现在可以提交此策略以供 Azure 备份使用。应用新建策略之前，请使用 [Remove-OBPolicy](https://technet.microsoft.com/zh-cn/library/hh770415) cmdlet 确保没有与服务器相关联的现有备份策略。删除策略时，系统将提示用户确认。若要跳过确认，请在 cmdlet 中请使用 ```-Confirm:$false``` 标志。\r \r ```\r PS C:\\> Get-OBPolicy | Remove-OBPolicy\r Azure 备份 确定要删除此备份策略吗？这将删除所有已备份的数据。 [Y] 是 [A] 全部是 [N] 否 [L] 全部否 [S] 挂起 [?] 帮助（默认值为“Y”）：\r ```\r \r 使用 [Set-OBPolicy](https://technet.microsoft.com/zh-cn/library/hh770421) cmdlet 可以提交策略对象。这也将提示用户确认。若要跳过确认，请在 cmdlet 中请使用 ```-Confirm:$false``` 标志。\r \r ```\r PS C:\\> Set-OBPolicy -Policy $newpolicy\r Azure Backup Do you want to save this backup policy ? [Y] Yes [A] Yes to All [N] No [L] No to All [S] Suspend [?] Help (default is \"Y\"):\r BackupSchedule : 4:00 PM Saturday, Sunday, Every 1 week(s)\r DsList : {DataSource\r          DatasourceId:4508156004108672185\r          Name:C:\\\r          FileSpec:FileSpec\r          FileSpec:C:\\\r          IsExclude:False\r          IsRecursive:True,\r \r          FileSpec\r          FileSpec:C:\\windows\r          IsExclude:True\r          IsRecursive:True,\r \r          FileSpec\r          FileSpec:C:\\temp\r          IsExclude:True\r          IsRecursive:True,\r \r          DataSource\r          DatasourceId:4508156005178868542\r          Name:D:\\\r          FileSpec:FileSpec\r          FileSpec:D:\\\r          IsExclude:False\r          IsRecursive:True\r     }\r PolicyName : c2eb6568-8a06-49f4-a20e-3019ae411bac\r RetentionPolicy : Retention Days : 7\r               WeeklyLTRSchedule :\r               Weekly schedule is not set\r \r               MonthlyLTRSchedule :\r               Monthly schedule is not set\r \r               YearlyLTRSchedule :\r               Yearly schedule is not set\r State : Existing PolicyState : Valid\r ```\r \r 可以使用 [Get-OBPolicy](https://technet.microsoft.com/zh-cn/library/hh770406) cmdlet 来查看现有备份策略的详细信息。可以使用 [Get-OBSchedule](https://technet.microsoft.com/zh-cn/library/hh770423) cmdlet（适用于备份计划）和 [Get-OBRetentionPolicy](https://technet.microsoft.com/zh-cn/library/hh770427) cmdlet（适用于保留策略）向下钻取\r \r ```\r PS C:\\> Get-OBPolicy | Get-OBSchedule\r SchedulePolicyName : 71944081-9950-4f7e-841d-32f0a0a1359a\r ScheduleRunDays : {Saturday, Sunday}\r ScheduleRunTimes : {16:00:00}\r State : Existing\r \r PS C:\\> Get-OBPolicy | Get-OBRetentionPolicy\r RetentionDays : 7\r RetentionPolicyName : ca3574ec-8331-46fd-a605-c01743a5265e\r State : Existing\r \r PS C:\\> Get-OBPolicy | Get-OBFileSpec\r FileName : *\r FilePath : \\?\\Volume{b835d359-a1dd-11e2-be72-2016d8d89f0f}\\\r FileSpec : D:\\\r IsExclude : False\r IsRecursive : True\r \r FileName : *\r FilePath : \\?\\Volume{cdd41007-a22f-11e2-be6c-806e6f6e6963}\\\r FileSpec : C:\\\r IsExclude : False\r IsRecursive : True\r \r FileName : *\r FilePath : \\?\\Volume{cdd41007-a22f-11e2-be6c-806e6f6e6963}\\windows\r FileSpec : C:\\windows\r IsExclude : True\r IsRecursive : True\r \r FileName : *\r FilePath : \\?\\Volume{cdd41007-a22f-11e2-be6c-806e6f6e6963}\\temp\r FileSpec : C:\\temp\r IsExclude : True\r IsRecursive : True\r ```\r \r ### 执行即席备份\r 设置备份策略之后，将会根据计划进行备份。也可使用 [Start-OBBackup](https://technet.microsoft.com/zh-cn/library/hh770426) cmdlet 来触发即席备份：\r \r ```\r PS C:\\> Get-OBPolicy | Start-OBBackup\r Taking snapshot of volumes...\r Preparing storage...\r Estimating size of backup items...\r Estimating size of backup items...\r Transferring data...\r Verifying backup...\r Job completed.\r The backup operation completed successfully.\r ```\r \r ## 从 Azure 备份还原数据\r 本部分将引导用户完成自动从 Azure 备份恢复数据的步骤。此过程涉及以下步骤：\r \r 1. 选取源卷\r 2. 选择要还原的备份点\r 3. 选择要还原的项\r 4. 触发还原过程\r \r ### 选取源卷\r 若要从 Azure 备份还原某个项，需要先识别该项的源。由于我们要在 Windows Server 或 Windows 客户端的上下文中执行命令，因此已识别了计算机。识别源的下一步是识别它所在的卷。可通过运行 [Get-OBRecoverableSource](https://technet.microsoft.com/zh-cn/library/hh770410) cmdlet，检索从此计算机备份的卷或源的列表。此命令将返回从此服务器/客户端备份的所有源的数组。\r \r ```\r PS C:\\> $source = Get-OBRecoverableSource\r PS C:\\> $source\r FriendlyName : C:\\\r RecoverySourceName : C:\\\r ServerName : myserver.microsoft.com\r \r FriendlyName : D:\\\r RecoverySourceName : D:\\\r ServerName : myserver.microsoft.com\r ```\r \r ### 选择要还原的备份点\r 结合适当的参数运行 [Get-OBRecoverableItem](https://technet.microsoft.com/zh-cn/library/hh770399.aspx) cmdlet 可以检索备份点列表。在本示例中，我们将选择源卷 *D:* 的最新备份点，并使用它还原特定的文件。\r \r ```\r PS C:\\> $rps = Get-OBRecoverableItem -Source $source[1]\r IsDir : False\r ItemNameFriendly : D:\\\r ItemNameGuid : \\?\\Volume{b835d359-a1dd-11e2-be72-2016d8d89f0f}\\\r LocalMountPoint : D:\\\r MountPointName : D:\\\r Name : D:\\\r PointInTime : 18-Jun-15 6:41:52 AM\r ServerName : myserver.microsoft.com\r ItemSize :\r ItemLastModifiedTime :\r \r IsDir : False\r ItemNameFriendly : D:\\\r ItemNameGuid : \\?\\Volume{b835d359-a1dd-11e2-be72-2016d8d89f0f}\\\r LocalMountPoint : D:\\\r MountPointName : D:\\\r Name : D:\\\r PointInTime : 17-Jun-15 6:31:31 AM\r ServerName : myserver.microsoft.com\r ItemSize :\r ItemLastModifiedTime :\r ```\r \r 对象 ```$rps``` 是备份点数组。第一个元素是最新备份点，第 N 个元素是最旧的备份点。为了选择最新的点，使用 ```$rps[0]```。\r \r ### 选择要还原的项\r 为了识别要还原的确切文件或文件夹，请以递归方式使用 [Get-OBRecoverableItem](https://technet.microsoft.com/zh-cn/library/hh770399.aspx) cmdlet。这样，只需使用 ```Get-OBRecoverableItem``` 便可浏览文件夹层次结构。\r \r 在本示例中，如果要还原文件 *finances.xls*，可以使用对象 ```$filesFolders[1]``` 来引用该文件。\r \r ```\r PS C:\\> $filesFolders = Get-OBRecoverableItem $rps[0]\r PS C:\\> $filesFolders\r IsDir : True\r ItemNameFriendly : D:\\MyData\\\r ItemNameGuid : \\?\\Volume{b835d359-a1dd-11e2-be72-2016d8d89f0f}\\MyData\\\r LocalMountPoint : D:\\\r MountPointName : D:\\\r Name : MyData\r PointInTime : 18-Jun-15 6:41:52 AM\r ServerName : myserver.microsoft.com\r ItemSize :\r ItemLastModifiedTime : 15-Jun-15 8:49:29 AM\r \r PS C:\\> $filesFolders = Get-OBRecoverableItem $filesFolders[0]\r PS C:\\> $filesFolders\r IsDir : False\r ItemNameFriendly : D:\\MyData\\screenshot.oxps\r ItemNameGuid : \\?\\Volume{b835d359-a1dd-11e2-be72-2016d8d89f0f}\\MyData\\screenshot.oxps\r LocalMountPoint : D:\\\r MountPointName : D:\\\r Name : screenshot.oxps\r PointInTime : 18-Jun-15 6:41:52 AM\r ServerName : myserver.microsoft.com\r ItemSize : 228313\r ItemLastModifiedTime : 21-Jun-14 6:45:09 AM\r \r IsDir : False\r ItemNameFriendly : D:\\MyData\\finances.xls\r ItemNameGuid : \\?\\Volume{b835d359-a1dd-11e2-be72-2016d8d89f0f}\\MyData\\finances.xls\r LocalMountPoint : D:\\\r MountPointName : D:\\\r Name : finances.xls\r PointInTime : 18-Jun-15 6:41:52 AM\r ServerName : myserver.microsoft.com\r ItemSize : 96256\r ItemLastModifiedTime : 21-Jun-14 6:43:02 AM\r ```\r \r 也可使用 ```Get-OBRecoverableItem``` cmdlet 来搜索要还原的项。在本示例中，为了搜索 *finances.xls*，可通过运行以下命令来获取该文件上的句柄：\r \r ```\r PS C:\\> $item = Get-OBRecoverableItem -RecoveryPoint $rps[0] -Location \"D:\\MyData\" -SearchString \"finance*\"\r ```\r \r ### 触发还原过程\r 为了触发还原过程，首先需要指定恢复选项。可以使用 [New-OBRecoveryOption](https://technet.microsoft.com/zh-cn/library/hh770417.aspx) cmdlet 来完成此操作。在本示例中，假设要将文件还原到 *C:\\\\temp*。此外，假设要跳过目标文件夹 *C:\\\\temp* 中已存在的文件。若要创建此类恢复选项，请使用以下命令：\r \r ```\r PS C:\\> $recovery_option = New-OBRecoveryOption -DestinationPath \"C:\\temp\" -OverwriteType Skip\r ```\r \r 现在，请对 ```Get-OBRecoverableItem``` cmdlet 输出中的选定 ```$item``` 使用 [Start-OBRecovery](https://technet.microsoft.com/zh-cn/library/hh770402.aspx) 命令来触发还原：\r \r ```\r PS C:\\> Start-OBRecovery -RecoverableItem $item -RecoveryOption $recover_option\r Estimating size of backup items...\r Estimating size of backup items...\r Estimating size of backup items...\r Estimating size of backup items...\r Job completed.\r The recovery operation completed successfully.\r ```\r \r ## 卸载 Azure 备份代理\r 可以使用以下命令卸载 Azure 备份代理：\r \r ```\r PS C:\\> .\\MARSAgentInstaller.exe /d /q\r ```\r \r 若要从计算机中卸载代理二进制文件，请注意以下部分后果：\r \r - 这会从计算机中删除文件筛选器，并停止跟踪更改。\r - 所有的策略信息将从计算机中删除，但服务中会继续存储这些策略信息。\r - 将删除所有备份计划，且不会进一步创建备份。\r \r 不过，将根据设置的保留策略继续保留 Azure 中存储的数据。较旧的恢复点会自动过时。\r \r ## 远程管理\r 围绕 Azure 备份代理、策略和数据源的所有管理工作都可通过 Azure PowerShell 远程完成。要远程管理的计算机需要经过适当的准备。\r \r 默认情况下，WinRM 服务已配置为手动启动。必须将启动类型设置为“自动”，并且应启动该服务。若要确认 WinRM 服务正在运行，“状态”属性的值应是“正在运行”。\r \r ```\r PS C:\\> Get-Service WinRM\r \r Status   Name               DisplayName\r ------   ----               -----------\r Running  winrm              Windows Remote Management (WS-Manag...\r ```\r \r 应该针对远程管理配置 PowerShell。\r \r ```\r PS C:\\> Enable-PSRemoting -force\r WinRM is already set up to receive requests on this computer.\r WinRM has been updated for remote management.\r WinRM firewall exception enabled.\r \r PS C:\\> Set-ExecutionPolicy unrestricted -force\r ```\r \r 现在可以远程管理计算机 - 从代理的安装开始。例如，以下脚本会将代理复制到远程计算机并安装代理。\r \r ```\r PS C:\\> $dloc = \"\\\\REMOTESERVER01\\c$\\Windows\\Temp\"\r PS C:\\> $agent = \"\\\\REMOTESERVER01\\c$\\Windows\\Temp\\MARSAgentInstaller.exe\"\r PS C:\\> $args = \"/q\"\r PS C:\\> Copy-Item \"C:\\Downloads\\MARSAgentInstaller.exe\" -Destination $dloc - force\r \r PS C:\\> $s = New-PSSession -ComputerName REMOTESERVER01\r PS C:\\> Invoke-Command -Session $s -Script { param($d, $a) Start-Process -FilePath $d $a -Wait } -ArgumentList $agent $args\r ```\r \r ## 后续步骤\r 有关适用于 Windows Server/客户端的 Azure 备份的详细信息，请参阅\r \r - [Azure 备份简介](./backup-introduction-to-azure-backup.md)\r - [备份 Windows Server](./backup-configure-vault.md)\r \r <!---HONumber=Mooncake_0116_2017-->\r <!---Update_Description: wording update -->"}