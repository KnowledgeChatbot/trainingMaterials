{"Title":"在 Azure 中创建 Python Web 应用","Description":"数分钟内在 Azure 应用服务 Web 应用中部署首个 Python Hello World。","Content":"# <a name=\"create-a-python-web-app-in-azure\"></a>在 Azure 中创建 Python Web 应用\r \r [Azure Web 应用](app-service-web-overview.md)提供高度可缩放、自修补的 Web 托管服务。  本快速入门教程演示如何开发 Python 应用并将其部署到 Azure Web 应用。 使用 [Azure CLI](https://docs.azure.cn/zh-cn/cli/get-started-with-azure-cli?view=azure-cli-lastest) 创建 Web 应用，并使用 Git 将 Python 代码示例部署到 Web 应用。\r \r ![在 Azure 中运行的示例应用](./media/app-service-web-get-started-python/hello-world-in-browser.png)\r \r 可以在 Mac、Windows 或 Linux 计算机上执行以下步骤。 安装先决条件后，大约需要五分钟完成这些步骤。\r ## <a name=\"prerequisites\"></a>先决条件\r \r 完成本教程：\r \r 1. [安装 Git](https://git-scm.com/)\r 1. [安装 Python](https://www.python.org/downloads/)\r \r [!INCLUDE [quickstarts-free-trial-note](../../includes/quickstarts-free-trial-note.md)]\r \r 如果选择在本地安装并使用 CLI，本主题要求运行 Azure CLI 2.0 版或更高版本。 运行 `az --version` 即可查找版本。 如果需要进行安装或升级，请参阅[安装 Azure CLI 2.0](https://docs.azure.cn/zh-cn/cli/install-azure-cli?view=azure-cli-lastest)。 \r \r ## <a name=\"download-the-sample\"></a>下载示例\r \r 在终端窗口中，运行以下命令，将示例应用存储库克隆到本地计算机。\r \r ```bash\r git clone https://github.com/Azure-Samples/python-docs-hello-world\r ```\r \r 切换到包含示例代码的目录。\r \r ```bash\r cd Python-docs-hello-world\r ```\r \r ## <a name=\"run-the-app-locally\"></a>在本地运行应用\r \r 使用 `pip` 安装所需包。\r \r ```bash\r pip install -r requirements.txt\r ```\r \r 打开终端窗口并使用 `Python` 命令启动内置 Python Web 服务器，在本地运行应用程序。\r \r ```bash\r python main.py\r ```\r \r 打开 Web 浏览器并导航到 http://localhost:5000 处的示例应用。\r \r 页面中会显示该示例应用发出的 **Hello World** 消息。\r \r ![在本地运行的示例应用](./media/app-service-web-get-started-python/localhost-hello-world-in-browser.png)\r \r 在终端窗口中，按 **Ctrl+C** 退出 Web 服务器。\r \r [!INCLUDE [Log in to Azure](../../includes/login-to-azure.md)] \r \r [!INCLUDE [Configure deployment user](../../includes/configure-deployment-user.md)] \r \r [!INCLUDE [Create resource group](../../includes/app-service-web-create-resource-group.md)] \r \r [!INCLUDE [Create app service plan](../../includes/app-service-web-create-app-service-plan.md)] \r \r ## <a name=\"create-a-web-app\"></a>创建 Web 应用\r \r [!INCLUDE [Create web app](../../includes/app-service-web-create-web-app-python-no-h.md)]\r \r 浏览到新建的 Web 应用。 将 _&lt;应用名称>_ 替换为唯一的应用名称。\r \r ```bash\r http://<app name>.chinacloudsites.cn\r ```\r \r ![空 Web 应用页](media/app-service-web-get-started-python/app-service-web-service-created.png)\r \r [!INCLUDE [Push to Azure](../../includes/app-service-web-git-push-to-azure.md)] \r \r ```bash\r Counting objects: 18, done.\r Delta compression using up to 4 threads.\r Compressing objects: 100% (16/16), done.\r Writing objects: 100% (18/18), 4.31 KiB | 0 bytes/s, done.\r Total 18 (delta 4), reused 0 (delta 0)\r remote: Updating branch 'master'.\r remote: Updating submodules.\r remote: Preparing deployment for commit id '44e74fe7dd'.\r remote: Generating deployment script.\r remote: Generating deployment script for python Web Site\r remote: Generated deployment script files\r remote: Running deployment command...\r remote: Handling python deployment.\r remote: KuduSync.NET from: 'D:\\home\\site\\repository' to: 'D:\\home\\site\\wwwroot'\r remote: Deleting file: 'hostingstart.html'\r remote: Copying file: '.gitignore'\r remote: Copying file: 'LICENSE'\r remote: Copying file: 'main.py'\r remote: Copying file: 'README.md'\r remote: Copying file: 'requirements.txt'\r remote: Copying file: 'virtualenv_proxy.py'\r remote: Copying file: 'web.2.7.config'\r remote: Copying file: 'web.3.4.config'\r remote: Detected requirements.txt.  You can skip Python specific steps with a .skipPythonDeployment file.\r remote: Detecting Python runtime from site configuration\r remote: Detected python-3.4\r remote: Creating python-3.4 virtual environment.\r remote: .................................\r remote: Pip install requirements.\r remote: Successfully installed Flask click itsdangerous Jinja2 Werkzeug MarkupSafe\r remote: Cleaning up...\r remote: .\r remote: Overwriting web.config with web.3.4.config\r remote:         1 file(s) copied.\r remote: Finished successfully.\r remote: Running post deployment command(s)...\r remote: Deployment successful.\r To https://<app_name>.scm.chinacloudsites.cn/<app_name>.git\r  * [new branch]      master -> master\r ```\r \r ## <a name=\"browse-to-the-app\"></a>浏览到应用\r \r 使用 Web 浏览器浏览到已部署的应用程序。\r \r ```bash\r http://<app_name>.chinacloudsites.cn\r ```\r \r Python 示例代码在 Azure App Service Web 应用中运行。\r \r ![在 Azure 中运行的示例应用](./media/app-service-web-get-started-python/hello-world-in-browser.png)\r \r **祝贺你！** 现已将第一个 Python 应用部署到应用服务。\r \r ## <a name=\"update-and-redeploy-the-code\"></a>更新并重新部署代码\r \r 使用本地文本编辑器在 Python 应用中打开 `main.py` 文件，然后对 `return` 语句旁边的文本稍微进行更改：\r \r ```python\r return 'Hello, Azure!'\r ```\r \r 在本地终端窗口中，提交在 Git 中所做的更改，然后将代码更改推送到 Azure。\r \r ```bash\r git commit -am \"updated output\"\r git push azure master\r ```\r \r 完成部署后，切换回[浏览到应用](#browse-to-the-app)步骤中打开的浏览器窗口，然后刷新页面。\r \r ![已更新的在 Azure 中运行的示例应用](./media/app-service-web-get-started-python/hello-azure-in-browser.png)\r \r ## <a name=\"manage-your-new-azure-web-app\"></a>管理新 Azure Web 应用\r \r 转到 <a href=\"https://portal.azure.cn\" target=\"_blank\">Azure 门户</a>管理创建的 Web 应用。\r \r 在左侧菜单中单击“应用服务”，然后单击 Azure Web 应用的名称。\r \r ![在门户中导航到 Azure Web 应用](./media/app-service-web-get-started-nodejs-poc/nodejs-docs-hello-world-app-service-list.png)\r \r 随后会显示 Web 应用的概述页。 在此处可以执行基本的管理任务，例如浏览、停止、启动、重启和删除。 \r \r ![Azure 门户中的“应用服务”边栏选项卡](./media/app-service-web-get-started-nodejs-poc/nodejs-docs-hello-world-app-service-detail.png)\r \r 左侧菜单提供用于配置应用的不同页面。 \r \r [!INCLUDE [cli-samples-clean-up](../../includes/cli-samples-clean-up.md)]\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r > [!div class=\"nextstepaction\"]\r > [将现有的自定义 DNS 名称映射到 Azure Web 应用](app-service-web-tutorial-custom-domain.md)\r \r <!--Update_Description: update wording-->\r "}