{"Title":"通知中心本地化的突发新闻教程 - iOS","Description":"了解如何使用 Azure 服务总线通知中心发送本地化的突发新闻通知 (iOS)。","Content":"\r # 使用通知中心将本地化的突发新闻发送到 iOS 设备\r \r > [!div class=\"op_single_selector\"]\r >- [Windows 应用商店 C#](./notification-hubs-windows-store-dotnet-xplat-localized-wns-push-notification.md)\r >- [iOS](./notification-hubs-ios-xplat-localized-apns-push-notification.md)\r \r ##概述\r \r 本主题演示如何使用 Azure 通知中心的[模板](./notification-hubs-templates-cross-platform-push-messages.md)功能广播已按语言和设备本地化的突发新闻通知。在本教程中，你从在[使用通知中心发送突发新闻]中创建的 iOS 应用开始操作。完成时，你将可以注册感兴趣的突发新闻类别，指定要接收通知的语言并仅接收采用该语言的这些类别的推送通知。\r \r 此方案包含两个部分：\r \r - iOS 应用程序允许客户端设备指定一种语言并订阅不同的突发新闻类别；\r \r - 后端使用 Azure 通知中心的**标记**和**模板**功能广播通知。\r \r ##先决条件\r \r 你必须已完成学习[使用通知中心发送突发新闻]教程并具有可用的代码，因为本教程直接围绕该代码展开论述。\r \r 可以选用 Visual Studio 2012 或更高版本。\r \r ##模板概念\r \r 在[使用通知中心发送突发新闻]中，你构建了一个使用**标记**订阅不同新闻类别通知的应用程序。但是，很多应用程序针对多个市场，需要本地化。这意味着通知内容本身必须本地化且传递到正确的设备组。在本主题中，我们将演示如何使用通知中心的**模板**功能轻松传递本地化的突发新闻通知。\r \r 注意：发送本地化的通知的一种方式是创建每个标签的多个版本。例如，要支持英语、法语和汉语，我们需要三种不同的标签用于世界新闻：“world\\_en”、“world\\_fr”和“world\\_ch”。我们然后必须将世界新闻的本地化版本分别发送到这些标签。在本主题中，我们使用模板来避免增生标签和发送多个消息的要求。\r \r 在较高级别上，模板是指定特定设备应如何接收通知的一种方法。模板通过引用作为你应用程序后端所发消息的一部分的属性，指定确切的负载格式。在我们的示例中，我们将发送包含所有支持的语言的区域设置未知的消息：\r \r ```\r {\r     \"News_English\": \"...\",\r     \"News_French\": \"...\",\r     \"News_Mandarin\": \"...\"\r }\r ```\r \r 然后我们将确保设备注册到引用正确属性的模板。例如，要注册法语新闻的 iOS 应用程序将注册以下模板：\r \r ```\r {\r     aps:{\r         alert: \"$(News_French)\"\r     }\r }\r ```\r \r 模板是很强大的功能，你可以在[模板](./notification-hubs-templates-cross-platform-push-messages.md)一文中了解其更多信息。\r \r ##应用程序用户界面\r \r 我们现在修改在[使用通知中心发送突发新闻]主题中创建的“突发新闻”应用，以使用模板发送本地化的突发新闻。\r \r 在 MainStoryboard\\_iPhone.storyboard 中，添加使用我们支持的三种语言的分段控件：英语、法语和汉语。\r \r ![][13]\r \r 然后确保在 ViewController.h 中添加 IBOutlet，如下所示：\r \r ![][14]\r \r ##构建 iOS 应用程序\r \r 1. 在 Notification.h 中，添加 *retrieveLocale* 方法，然后修改存储区和 subscribe 方法，如下所示：\r \r     ```\r     - (void) storeCategoriesAndSubscribeWithLocale:(int) locale categories:(NSSet*) categories completion: (void (^)(NSError* error))completion;\r \r     - (void) subscribeWithLocale:(int) locale categories:(NSSet*) categories completion:(void (^)(NSError *))completion;\r \r     - (NSSet*) retrieveCategories;\r \r     - (int) retrieveLocale;\r     ```\r \r     在 Notification.m 中，通过添加区域设置参数并将它存储在用户默认值中，修改 *storeCategoriesAndSubscribe* 方法：\r \r     ```\r     - (void) storeCategoriesAndSubscribeWithLocale:(int) locale categories:(NSSet *)categories completion:(void (^)(NSError *))completion {\r         NSUserDefaults* defaults = [NSUserDefaults standardUserDefaults];\r         [defaults setValue:[categories allObjects] forKey:@\"BreakingNewsCategories\"];\r         [defaults setInteger:locale forKey:@\"BreakingNewsLocale\"];\r         [defaults synchronize];\r \r         [self subscribeWithLocale: locale categories:categories completion:completion];\r     }\r     ```\r \r     然后修改 *subscribe* 方法以包括该区域设置：\r \r     ```\r     - (void) subscribeWithLocale: (int) locale categories:(NSSet *)categories completion:(void (^)(NSError *))completion{\r         SBNotificationHub* hub = [[SBNotificationHub alloc] initWithConnectionString:@\"<connection string>\" notificationHubPath:@\"<hub name>\"];\r \r         NSString* localeString;\r         switch (locale) {\r             case 0:\r                 localeString = @\"English\";\r                 break;\r             case 1:\r                 localeString = @\"French\";\r                 break;\r             case 2:\r                 localeString = @\"Mandarin\";\r                 break;\r         }\r \r         NSString* template = [NSString stringWithFormat:@\"{\"aps\":{\"alert\":\"$(News_%@)\"},\"inAppMessage\":\"$(News_%@)\"}\", localeString, localeString];\r \r         [hub registerTemplateWithDeviceToken:self.deviceToken name:@\"localizednewsTemplate\" jsonBodyTemplate:template expiryTemplate:@\"0\" tags:categories completion:completion];\r     }\r     ```\r \r     请注意，我们现在使用的是 *registerTemplateWithDeviceToken* 方法而非 *registerNativeWithDeviceToken*。当我们注册一个模板时，必须提供 json 模板，还要指定其名称（因为我们的应用程序可能要注册不同的模板）。确保将类别作为标记注册，因为我们要确保接收有关这些新闻的通知。\r \r     添加一个方法以从用户默认设置中检索区域设置：\r \r     ```\r     - (int) retrieveLocale {\r         NSUserDefaults* defaults = [NSUserDefaults standardUserDefaults];\r \r         int locale = [defaults integerForKey:@\"BreakingNewsLocale\"];\r \r         return locale < 0?0:locale;\r     }\r     ```\r \r 2. 现在我们修改了 Notifications 类，必须确保 ViewController 使用新的 UISegmentControl。在 *viewDidLoad* 方法中添加以下行，以确保显示当前选择的区域设置：\r \r     ```\r     self.Locale.selectedSegmentIndex = [notifications retrieveLocale];\r     ```\r \r     然后，在 *subscribe* 方法中，将对 *storeCategoriesAndSubscribe* 的调用更改为：\r \r     ```\r     [notifications storeCategoriesAndSubscribeWithLocale: self.Locale.selectedSegmentIndex categories:[NSSet setWithArray:categories] completion: ^(NSError* error) {\r         if (!error) {\r             UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@\"Notification\" message:\r                                   @\"Subscribed!\" delegate:nil cancelButtonTitle:\r                                   @\"OK\" otherButtonTitles:nil, nil];\r             [alert show];\r         } else {\r             NSLog(@\"Error subscribing: %@\", error);\r         }\r     }];\r     ```\r \r 3. 最后，你必须在 AppDelegate.m 中更新 *didRegisterForRemoteNotificationsWithDeviceToken* 方法，以便在应用启动时正确刷新你的注册信息。将对通知的 *subscribe* 方法的调用更改为：\r \r     ```\r     NSSet* categories = [self.notifications retrieveCategories];\r     int locale = [self.notifications retrieveLocale];\r     [self.notifications subscribeWithLocale: locale categories:categories completion:^(NSError* error) {\r         if (error != nil) {\r             NSLog(@\"Error registering for notifications: %@\", error);\r         }\r     }];\r     ```\r \r ##（可选）通过 .NET 控制台应用发送本地化的模板通知。\r \r [!INCLUDE [notification-hubs-localized-back-end](../../includes/notification-hubs-localized-back-end.md)]\r \r ##（可选）通过设备发送本地化的模板通知\r \r 如果你无权访问 Visual Studio，或者只是想要试一试直接从设备上的应用发送本地化的模板通知。那么，你只需将本地化的模板参数添加到你在前一教程中定义的 `SendNotificationRESTAPI` 方法。\r \r ```\r     - (void)SendNotificationRESTAPI:(NSString*)categoryTag\r     {\r         NSURLSession* session = [NSURLSession sessionWithConfiguration:[NSURLSessionConfiguration\r                                  defaultSessionConfiguration] delegate:nil delegateQueue:nil];\r \r         NSString *json;\r \r         // Construct the messages REST endpoint\r         NSURL* url = [NSURL URLWithString:[NSString stringWithFormat:@\"%@%@/messages/%@\", HubEndpoint,\r                                            HUBNAME, API_VERSION]];\r \r         // Generated the token to be used in the authorization header.\r         NSString* authorizationToken = [self generateSasToken:[url absoluteString]];\r \r         //Create the request to add the template notification message to the hub\r         NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:url];\r         [request setHTTPMethod:@\"POST\"];\r \r         // Add the category as a tag\r         [request setValue:categoryTag forHTTPHeaderField:@\"ServiceBusNotification-Tags\"];\r \r         // Template notification\r         json = [NSString stringWithFormat:@\"{\\\"messageParam\\\":\\\"Breaking %@ News : %@\\\",\"\r                 \\\"News_English\\\":\\\"Breaking %@ News in English : %@\\\",\"\r                 \\\"News_French\\\":\\\"Breaking %@ News in French : %@\\\",\"\r                 \\\"News_Mandarin\\\":\\\"Breaking %@ News in Mandarin : %@\\\",\"\r                 categoryTag, self.notificationMessage.text,\r                 categoryTag, self.notificationMessage.text,  // insert English localized news here\r                 categoryTag, self.notificationMessage.text,  // insert French localized news here\r                 categoryTag, self.notificationMessage.text]; // insert Mandarin localized news here\r \r         // Signify template notification format\r         [request setValue:@\"template\" forHTTPHeaderField:@\"ServiceBusNotification-Format\"];\r \r         // JSON Content-Type\r         [request setValue:@\"application/json;charset=utf-8\" forHTTPHeaderField:@\"Content-Type\"];\r \r         //Authenticate the notification message POST request with the SaS token\r         [request setValue:authorizationToken forHTTPHeaderField:@\"Authorization\"];\r \r         //Add the notification message body\r         [request setHTTPBody:[json dataUsingEncoding:NSUTF8StringEncoding]];\r \r         // Send the REST request\r         NSURLSessionDataTask* dataTask = [session dataTaskWithRequest:request\r                    completionHandler:^(NSData *data, NSURLResponse *response, NSError *error)\r            {\r            NSHTTPURLResponse* httpResponse = (NSHTTPURLResponse*) response;\r                if (error || httpResponse.statusCode != 200)\r                {\r                    NSLog(@\"\\nError status: %d\\nError: %@\", httpResponse.statusCode, error);\r                }\r                if (data != NULL)\r                {\r                    //xmlParser = [[NSXMLParser alloc] initWithData:data];\r                    //[xmlParser setDelegate:self];\r                    //[xmlParser parse];\r                }\r            }];\r \r         [dataTask resume];\r     }\r ```\r \r ## 后续步骤\r \r 有关使用模板的详细信息，请参阅：\r \r - [使用通知中心通知用户：ASP.NET]\r - [使用通知中心通知用户：移动服务]\r \r <!-- Images. -->\r \r [13]: ./media/notification-hubs-ios-send-localized-breaking-news/ios_localized1.png\r [14]: ./media/notification-hubs-ios-send-localized-breaking-news/ios_localized2.png\r \r <!-- URLs. -->\r \r [How To: Service Bus Notification Hubs (iOS Apps)]: http://msdn.microsoft.com/zh-cn/library/jj927168.aspx\r [使用通知中心发送突发新闻]: ./notification-hubs-ios-xplat-segmented-apns-push-notification.md\r [使用通知中心通知用户：ASP.NET]: ./notification-hubs-aspnet-backend-windows-dotnet-wns-notification.md\r [Submit an app page]: http://go.microsoft.com/fwlink/p/?LinkID=266582\r [My Applications]: http://go.microsoft.com/fwlink/p/?LinkId=262039\r \r [wns object]: http://go.microsoft.com/fwlink/p/?LinkId=260591\r [Notification Hubs Guidance]: http://msdn.microsoft.com/zh-cn/library/jj927170.aspx\r [Notification Hubs How-To for iOS]: http://msdn.microsoft.com/zh-cn/library/jj927168.aspx\r \r <!---HONumber=Mooncake_1114_2016-->"}