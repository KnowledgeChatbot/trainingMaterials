{"Title":"Azure Cosmos DB：使用 Node.js 和 DocumentDB API 生成应用","Description":"演示一个可以用来连接到 Azure Cosmos DB DocumentDB API 并进行查询的 Node.js 代码示例","Content":"# <a name=\"azure-cosmos-db-build-a-documentdb-api-app-with-nodejs-and-the-azure-portal\"></a>Azure Cosmos DB：使用 Node.js 和 Azure 门户生成 DocumentDB API 应用\r \r Azure Cosmos DB 由 世纪互联 提供，是多个区域分布的多模型数据库服务。 可快速创建和查询文档、键/值数据库，所有这些都受益于 Azure Cosmos DB 核心的多个区域分布和水平缩放功能。 \r <!-- Notice: 全球分布 to 多个区域分布 -->\r \r 本快速入门教程演示如何使用 Azure 门户创建 Azure Cosmos DB 帐户、文档数据库和集合。 然后会生成并运行基于 [DocumentDB Node.js API](documentdb-sdk-node.md) 构建的控制台应用。\r \r ## <a name=\"prerequisites\"></a>先决条件\r \r * 在运行此示例之前，必须具备以下先决条件：\r     * [Node.js](https://nodejs.org/en/) 版本 v0.10.29 或更高版本\r     * [Git](http://git-scm.com/)\r \r [!INCLUDE [quickstarts-free-trial-note](../../includes/quickstarts-free-trial-note.md)] \r [!INCLUDE [cosmos-db-emulator-docdb-api](../../includes/cosmos-db-emulator-docdb-api.md)]\r \r ## <a name=\"create-a-database-account\"></a>创建数据库帐户\r \r [!INCLUDE [cosmos-db-create-dbaccount](../../includes/cosmos-db-create-dbaccount.md)]\r \r ## <a name=\"add-a-collection\"></a>添加集合\r \r [!INCLUDE [cosmos-db-create-collection](../../includes/cosmos-db-create-collection.md)]\r \r ## <a name=\"clone-the-sample-application\"></a>克隆示例应用程序\r \r 现在，我们从 github 克隆 DocumentDB API 应用、设置连接字符串，并运行该应用。 你会看到以编程方式处理数据是多么容易。 \r \r 1. 打开 git 终端窗口（例如 git bash）并使用 `CD` 切换到工作目录。  \r \r 2. 运行下列命令，克隆示例存储库。 \r \r     ```bash\r     git clone https://github.com/Azure-Samples/azure-cosmos-db-documentdb-nodejs-getting-started.git\r     ```\r \r ## <a name=\"review-the-code\"></a>查看代码\r \r 快速查看应用中发生的情况。 打开 `app.js` 文件，会发现以下代码行创建 Azure Cosmos DB 资源。 \r \r * 对 `documentClient` 进行初始化。\r \r     ```nodejs\r     var client = new documentClient(config.endpoint, { \"masterKey\": config.primaryKey });\r     ```\r \r * 会创建一个新数据库。\r \r     ```nodejs\r     client.createDatabase(config.database, (err, created) => {\r         if (err) reject(err)\r         else resolve(created);\r     });\r     ```\r \r * 创建一个新集合。\r \r     ```nodejs\r     client.createCollection(databaseUrl, config.collection, { offerThroughput: 400 }, (err, created) => {\r         if (err) reject(err)\r         else resolve(created);\r     });\r     ```\r \r * 此时会创建一些文档。\r \r     ```nodejs\r     client.createDocument(collectionUrl, document, (err, created) => {\r         if (err) reject(err)\r         else resolve(created);\r     });\r     ```\r \r * 对 JSON 执行 SQL 查询。\r \r     ```nodejs\r     client.queryDocuments(\r         collectionUrl,\r         'SELECT VALUE r.children FROM root r WHERE r.lastName = \"Andersen\"'\r     ).toArray((err, results) => {\r         if (err) reject(err)\r         else {\r             for (var queryResult of results) {\r                 let resultString = JSON.stringify(queryResult);\r                 console.log(`\\tQuery returned ${resultString}`);\r             }\r             console.log();\r             resolve(results);\r         }\r     });\r     ```    \r \r ## <a name=\"update-your-connection-string\"></a>更新连接字符串\r \r 现在返回到 Azure 门户，获取连接字符串信息，并将其复制到应用。\r \r 1. 在 [Azure 门户](http://portal.azure.cn/)的 Azure Cosmos DB 帐户的左侧导航栏中，单击“密钥”，然后单击“读写密钥”。 使用屏幕右侧的复制按钮将 URI 和主密钥复制到下一步的 `config.js` 文件中。\r \r     ![在 Azure 门户的“密钥”边栏选项卡中查看并复制访问密钥](./media/create-documentdb-dotnet/keys.png)\r \r 2. 打开 `config.js` 文件。 \r \r 3. 从门户中复制 URI 值（使用复制按钮），并在 `config.js` 中将其设为终结点密钥的值。 \r \r     `config.endpoint = \"https://FILLME.documents.azure.cn\"`\r \r 4. 然后从门户复制“主密钥”的值，并在 `config.js` 中将其设为 `config.primaryKey` 的值。 现已使用与 Azure Cosmos DB 进行通信所需的所有信息更新应用。 \r \r     `config.primaryKey \"FILLME\"`\r \r ## <a name=\"run-the-app\"></a>运行应用程序\r 1. 在终端中运行 `npm install`，安装所需的 npm 模块\r \r 2. 在终端中运行 `node app.js`，启动 node 应用程序。\r \r 现可返回到数据资源管理器，查看查询、修改和处理此新数据。 \r \r ## <a name=\"review-slas-in-the-azure-portal\"></a>在 Azure 门户中查看 SLA\r \r [!INCLUDE [cosmosdb-tutorial-review-slas](../../includes/cosmos-db-tutorial-review-slas.md)]\r \r ## <a name=\"clean-up-resources\"></a>清理资源\r \r 如果不打算继续使用此应用，请删除本快速入门教程在 Azure 门户中创建的所有资源，步骤如下：\r \r 1. 在 Azure 门户的左侧菜单中，单击“资源组”，然后单击已创建资源的名称。 \r 2. 在资源组页上单击“删除”，在文本框中键入要删除的资源的名称，并单击“删除”。\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r 在本快速入门教程中，已了解如何创建 Azure Cosmos DB 帐户、使用数据资源管理器创建集合和运行应用。 现在可以将其他数据导入 Cosmos DB 帐户。 \r \r > [!div class=\"nextstepaction\"]\r > [将数据导入 Azure Cosmos DB](import-data.md)\r \r <!--Update_Description: add include file named cosmos-db-emulator-docdb-api.md-->"}