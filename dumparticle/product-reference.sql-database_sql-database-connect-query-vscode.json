{"Title":"VS Code：在 Azure SQL 数据库中进行连接和数据查询","Description":"了解如何通过使用 Visual Studio Code 连接到 Azure 上的 SQL 数据库。 然后，通过运行 Transact-SQL (T-SQL) 语句来查询和编辑数据。","Content":"# <a name=\"azure-sql-database-use-visual-studio-code-to-connect-and-query-data\"></a>Azure SQL 数据库：使用 Visual Studio Code 进行连接和数据查询\r \r [Visual Studio Code](https://code.visualstudio.com/docs) 是一种图形代码编辑器，适用于 Linux、macOS 和 Windows，并且支持各种扩展，其中包括 [mssql 扩展](https://aka.ms/mssql-marketplace)（用于查询 Microsoft SQL Server、Azure SQL 数据库和 SQL 数据仓库）。 本快速入门演示了如何使用 Visual Studio Code 连接到 Azure SQL 数据库，然后使用 Transact-SQL 语句在数据库中查询、插入、更新和删除数据。\r \r ## <a name=\"prerequisites\"></a>先决条件\r \r 此快速入门使用以下某个快速入门中创建的资源作为其起点：\r \r - [创建 DB - 门户](sql-database-get-started-portal.md)\r - [创建 DB - CLI](sql-database-get-started-cli.md)\r - [创建 DB - PowerShell](sql-database-get-started-powershell.md)\r \r 在开始之前，请确保已安装最新版 [Visual Studio Code](https://code.visualstudio.com/Download) 并加载 [mssql 扩展](https://aka.ms/mssql-marketplace)。 有关 mssql 扩展的安装指南，请参阅 [Install VS Code](https://docs.microsoft.com/sql/linux/sql-server-linux-develop-use-vscode#install-vs-code)（安装 VS Code）和 [mssql for Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-mssql.mssql)（适用于 Visual Studio Code 的 mssql）。 \r \r ## <a name=\"configure-vs-code\"></a>配置 VS Code \r \r ### <a name=\"mac-os\"></a>**Mac OS**\r 对于 macOS，需安装 OpenSSL，这是 mssql 扩展所使用的 DotNet Core 的先决条件。 打开终端并输入以下命令，以便安装 **brew** 和 **OpenSSL**。 \r \r ```bash\r ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\r brew update\r brew install openssl\r mkdir -p /usr/local/lib\r ln -s /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib /usr/local/lib/\r ln -s /usr/local/opt/openssl/lib/libssl.1.0.0.dylib /usr/local/lib/\r ```\r \r ### <a name=\"linux-ubuntu\"></a>**Linux (Ubuntu)**\r \r 无需特殊配置。\r \r ### <a name=\"windows\"></a>**Windows**\r \r 无需特殊配置。\r \r ## <a name=\"sql-server-connection-information\"></a>SQL Server 连接信息\r \r 获取连接到 Azure SQL 数据库所需的连接信息。 在后续过程中，将需要完全限定的服务器名称、数据库名称和登录信息。\r \r 1. 登录到 [Azure 门户](https://portal.azure.cn/)。\r 2. 从左侧菜单中选择“SQL 数据库”，并单击“SQL 数据库”页上的数据库。 \r 3. 在数据库的“概览”页上，查看如下图所示的完全限定的服务器名称。 将鼠标悬停在服务器名称上即可打开“通过单击进行复制”选项。\r \r    ![连接信息](./media/sql-database-connect-query-dotnet/server-name.png) \r \r 4. 如果忘了 Azure SQL 数据库服务器的登录信息，请导航到 SQL 数据库服务器页，以查看服务器管理员名称并重置密码（如果需要）。 \r \r ## <a name=\"set-language-mode-to-sql\"></a>将语言模式设置为 SQL\r \r 在 Visual Studio Code 中将语言模式设置为 **SQL**，以便启用 mssql 命令和 T-SQL IntelliSense。\r \r 1. 打开新的 Visual Studio Code 窗口。 \r \r 2. 单击状态栏右下角的“纯文本”。\r 3. 在打开的“选择语言模式”下拉列表中键入 **SQL**，然后按 **ENTER** 将语言模式设置为 SQL。 \r \r    ![SQL 语言模式](./media/sql-database-connect-query-vscode/vscode-language-mode.png)\r \r ## <a name=\"connect-to-your-database\"></a>连接到数据库\r \r 使用 Visual Studio Code 建立到 Azure SQL 数据库服务器的连接。\r \r > [!IMPORTANT]\r > 在继续之前，请确保服务器、数据库和登录信息已准备就绪。 在开始输入连接配置文件信息的情况下，如果在 Visual Studio Code 中更改焦点，则需重新开始创建连接配置文件。\r >\r \r 1. 在 VS Code 中，按 **CTRL+SHIFT+P**（或 **F1**）打开命令面板。\r \r 2. 键入 **sqlcon** 并按 **ENTER**。\r \r 3. 按 **ENTER** 选择“创建连接配置文件”。 这为 SQL Server 实例创建连接配置文件。\r \r 4. 按照提示为新的连接配置文件指定连接属性。 指定每个值后，按 **ENTER** 继续。 \r \r    | 设置       | 建议的值 | 说明 |\r    | ------------ | ------------------ | ------------------------------------------------- | \r    | **服务器名称 | 完全限定的服务器名称 | 该名称应类似于：**mynewserver20170313.database.chinacloudapi.cn**。 |\r    | **数据库名称** | mySampleDatabase | 要连接到的数据库的名称。 |\r    | **身份验证** | SQL 登录名| SQL 身份验证是本教程中配置的唯一身份验证类型。 |\r    | **用户名** | 服务器管理员帐户 | 这是在创建服务器时指定的帐户。 |\r    | **密码(SQL 登录名)** | 服务器管理员帐户的密码 | 这是在创建服务器时指定的密码。 |\r    | **保存密码?** | 是或否 | 如果不希望每次都输入密码，请选择“是”。 |\r    | **输入此配置文件的名称** | 配置文件名称，例如 **mySampleDatabase** | 保存配置文件名称可以在后续登录时加快连接速度。 | \r \r 5. 按 **ESC** 键关闭信息消息，该消息通知你，配置文件已创建并连接。\r \r 6. 验证状态栏中的连接。\r \r    ![连接状态](./media/sql-database-connect-query-vscode/vscode-connection-status.png)\r \r ## <a name=\"query-data\"></a>查询数据\r \r 通过以下代码使用 [SELECT](https://msdn.microsoft.com/library/ms189499.aspx) Transact-SQL 语句，以便按类别查询前 20 个产品。\r \r 1. 在“编辑器”窗口的空查询窗口中，输入以下查询：\r \r    ```sql\r    SELECT pc.Name as CategoryName, p.name as ProductName\r    FROM [SalesLT].[ProductCategory] pc\r    JOIN [SalesLT].[Product] p\r    ON pc.productcategoryid = p.productcategoryid;\r    ```\r \r 2. 按 **CTRL+SHIFT+E** 从 Product 表和 ProductCategory 表检索数据。\r \r     ![查询](./media/sql-database-connect-query-vscode/query.png)\r \r ## <a name=\"insert-data\"></a>插入数据\r \r 通过以下代码使用 [INSERT](https://msdn.microsoft.com/library/ms174335.aspx) Transact-SQL 语句，将新产品插入到 SalesLT.Product 表中。\r \r 1. 在“编辑器”窗口中删除以前的查询，并输入以下查询：\r \r    ```sql\r    INSERT INTO [SalesLT].[Product]\r            ( [Name]\r            , [ProductNumber]\r            , [Color]\r            , [ProductCategoryID]\r            , [StandardCost]\r            , [ListPrice]\r            , [SellStartDate]\r            )\r      VALUES\r            ('myNewProduct'\r            ,123456789\r            ,'NewColor'\r            ,1\r            ,100\r            ,100\r            ,GETDATE() );\r    ```\r \r 2. 按 **CTRL+SHIFT+E** 在 Product 表中插入新行。\r \r ## <a name=\"update-data\"></a>更新数据\r \r 通过以下代码使用 [UPDATE](https://msdn.microsoft.com/library/ms177523.aspx) Transact-SQL 语句，以便更新此前添加的新产品。\r \r 1.  在“编辑器”窗口中删除以前的查询，并输入以下查询：\r \r    ```sql\r    UPDATE [SalesLT].[Product]\r    SET [ListPrice] = 125\r    WHERE Name = 'myNewProduct';\r    ```\r \r 2. 按 **CTRL+SHIFT+E** 更新 Product 表中的指定行。\r \r ## <a name=\"delete-data\"></a>删除数据\r \r 通过以下代码使用 [DELETE](https://msdn.microsoft.com/library/ms189835.aspx) Transact-SQL 语句，以便删除此前添加的新产品。\r \r 1. 在“编辑器”窗口中删除以前的查询，并输入以下查询：\r \r    ```sql\r    DELETE FROM [SalesLT].[Product]\r    WHERE Name = 'myNewProduct';\r    ```\r \r 2. 按 **CTRL+SHIFT+E** 删除 Product 表中的指定行。\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r - 若要使用 SQL Server Management Studio 进行连接和查询，请参阅[使用 SSMS 进行连接和查询](sql-database-connect-query-ssms.md)。\r - 有关使用 Visual Studio Code 的 MSDN 杂志文章，请参阅[“利用 MSSQL 扩展创建数据库 IDE”博客文章](https://msdn.microsoft.com/magazine/mt809115)。\r "}