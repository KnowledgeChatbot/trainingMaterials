{"Title":"将 Azure CLI 1.0 用于 Azure 存储","Description":"了解如何将 Azure 命令行界面 (Azure CLI) 1.0 用于 Azure 存储，以便创建和管理存储帐户并处理 Azure blob 和文件。 Azure CLI 是一个跨平台工具","Content":"# <a name=\"using-the-azure-cli-10-with-azure-storage\"></a>将 Azure CLI 1.0 用于 Azure 存储\r \r ## <a name=\"overview\"></a>概述\r \r Azure CLI 提供了一组开源且跨平台的命令，这些命令可以用于 Azure 平台。 它提供 [Azure 门户](https://portal.azure.cn) 所能提供的很多相同功能，此外还有各种数据访问功能。\r \r 在本指南中，我们将探讨如何使用 [Azure 命令行接口 (Azure CLI)](../../cli-install-nodejs.md)，通过 Azure 存储执行各种开发和管理任务。 在使用本指南之前，我们建议下载和安装或者升级到最新版 Azure CLI。\r \r 本指南假定你了解 Azure 存储的基本概念。 本指南提供了大量的脚本，用于演示 Azure CLI 与 Azure 存储的用法。 在运行每个脚本之前，请确保根据配置更新脚本变量。\r \r > [!NOTE]\r > 本指南提供经典存储帐户的 Azure CLI 命令和脚本示例。 有关适用于资源管理器存储帐户的 Azure CLI 命令，请参阅[将适用于 Mac、Linux 和 Windows 的 Azure CLI 与 Azure 资源管理配合使用](../../virtual-machines/azure-cli-arm-commands.md#azure-storage-commands-to-manage-your-storage-objects)。\r >\r >\r \r [!INCLUDE [storage-cli-versions](../../../includes/storage-cli-versions.md)]\r \r ## <a name=\"get-started-with-azure-storage-and-the-azure-cli-in-5-minutes\"></a>在 5 分钟内开始使用 Azure 存储和 Azure CLI\r 本指南使用 Ubuntu 作为示例，但其他 OS 平台的操作应与此类似。\r \r **Azure 新用户：** 获取一个 Azure 订阅以及与该订阅关联的 Microsoft 帐户。 有关 Azure 购买选项的信息，请参阅 [1 元试用](https://www.azure.cn/pricing/1rmb-trial/)、[购买选项](https://www.azure.cn/pricing/purchase-options/)。\r \r 请参阅[在 Azure Active Directory (Azure AD) 中分配管理员角色](https://msdn.microsoft.com/library/azure/hh531793.aspx)，以了解有关 Azure 订阅的更多信息。\r \r **创建 Azure 订阅和帐户之后：**\r \r 1. 按照[安装 Azure CLI](../../cli-install-nodejs.md) 中所述的说明下载并安装 Azure CLI。\r 2. 安装了 Azure CLI 之后，你将可以从命令行界面（Bash、终端、命令提示符）使用 azure 命令访问 Azure CLI 命令。 键入 _azure_ 命令，可看到以下输出。\r \r     ![Azure 命令输出](../media/storage-azure-cli/azure_command.png)   \r 3. 在命令行界面中，键入 `azure storage` 即可列出所有 Azure 存储命令，并初步了解 Azure CLI 提供的功能。 可以键入带 -h 参数的命令名称（例如，`azure storage share create -h`），了解命令语法的详细信息。\r 4. 现在，我们提供一个简单的脚本，演示用于访问 Azure 存储的基本 Azure CLI 命令。 该脚本会首先要求针对存储帐户和密钥设置两个变量。 然后，该脚本将在此新存储帐户中创建新容器，并将现有图像文件 (Blob) 上传到该容器。 脚本在列出该容器中的所有 Blob 后，就会将图像文件下载到本地计算机上的目标目录。\r \r     ```azurecli\r     #!/bin/bash\r     # A simple Azure storage example\r \r     export AZURE_STORAGE_ACCOUNT=<storage_account_name>\r     export AZURE_STORAGE_ACCESS_KEY=<storage_account_key>\r \r     export container_name=<container_name>\r     export blob_name=<blob_name>\r     export image_to_upload=<image_to_upload>\r     export destination_folder=<destination_folder>\r \r     echo \"Creating the container...\"\r     azure storage container create $container_name\r \r     echo \"Uploading the image...\"\r     azure storage blob upload $image_to_upload $container_name $blob_name\r \r     echo \"Listing the blobs...\"\r     azure storage blob list $container_name\r \r     echo \"Downloading the image...\"\r     azure storage blob download $container_name $blob_name $destination_folder\r \r     echo \"Done\"\r     ```\r \r 5. 在本地计算机中，打开首选的文本编辑器（例如 vim）。 在文本编辑器中键入上述脚本。\r 6. 现在，需要基于配置设置更新脚本变量。\r \r    * <storage_account_name>：使用脚本中给定的名称，或输入存储帐户的新名称。 **重要提示：** 在 Azure 中，存储帐户的名称必须是唯一的。 它还必须为小写！\r    * <storage_account_key>：存储帐户的访问密钥。\r    * <container_name>：使用脚本中给定的名称，或输入容器的新名称。\r    * <image_to_upload>：输入本地计算机上图片的路径，例如：“~/images/HelloWorld.png”。\r    * <destination_folder>：输入用于存储从 Azure 存储下载的文件的本地目录路径，例如：“~/downloadImages”。\r 7. 在 vim 中更新完必需的变量以后，按组合键 `ESC` `:` `wq!` 保存脚本。\r 8. 若要运行此脚本，在 bash 控制台中键入脚本文件名即可。 运行此脚本后，应会创建包含已下载图像文件的本地目标文件夹。 以下屏幕截图显示了示例输出：\r \r 运行脚本后，应会创建包含已下载图像文件的本地目标文件夹。\r \r ## <a name=\"manage-storage-accounts-with-the-azure-cli\"></a>通过 Azure CLI 管理存储帐户\r ### <a name=\"connect-to-your-azure-subscription\"></a>连接到 Azure 订阅\r 大多数存储命令没有 Azure 订阅也可以使用，不过仍建议通过 Azure CLI 连接到订阅。 若要配置 Azure CLI 与订阅一起使用，请执行[从 Azure CLI 连接到 Azure 订阅](../../xplat-cli-connect.md)中的步骤。\r \r ### <a name=\"create-a-new-storage-account\"></a>新建存储帐户\r 要使用 Azure 存储，需要一个存储帐户。 可以在将计算机配置为连接到订阅之后，创建新的 Azure 存储帐户。\r \r ```azurecli\r azure storage account create <account_name>\r ```\r \r 存储帐户名称必须为 3 到 24 个字符，并且只能使用数字和小写字母。\r \r ### <a name=\"set-a-default-azure-storage-account-in-environment-variables\"></a>在环境变量中设置默认的 Azure 存储帐户\r 可以在订阅中设置多个存储帐户。 可以选择其中的一个存储帐户，并在环境变量中将其设置为同一会话中所有存储命令的默认存储帐户。 这样，便可以在不显式指定存储帐户和密钥的情况下运行 Azure CLI 存储命令。\r \r ```azurecli\r export AZURE_STORAGE_ACCOUNT=<account_name>\r export AZURE_STORAGE_ACCESS_KEY=<key>\r ```\r \r 若要设置默认存储帐户，另一种方法是使用连接字符串。 首先，通过以下命令获取连接字符串：\r \r ```azurecli\r azure storage account connectionstring show <account_name>\r ```\r \r 然后复制输出连接字符串，并将其设置为环境变量：\r \r ```azurecli\r export AZURE_STORAGE_CONNECTION_STRING=<connection_string>\r ```\r \r ## <a name=\"create-and-manage-blobs\"></a>创建并管理 blob\r Azure Blob 存储是用于存储大量非结构化数据（例如文本或二进制数据）的服务，这些数据可通过 HTTP 或 HTTPS 从世界各地进行访问。 本部分假设已熟悉 Azure Blob 存储的概念。 有关详细信息，请参阅[通过 .NET 开始使用 Azure Blob 存储](../blobs/storage-dotnet-how-to-use-blobs.md)和 [Blob 服务概念](http://msdn.microsoft.com/library/azure/dd179376.aspx)。\r \r ### <a name=\"create-a-container\"></a>创建容器\r Azure 存储中的每个 Blob 都必须在容器中。 可以使用 `azure storage container create` 命令创建专用容器：\r \r ```azurecli\r azure storage container create mycontainer\r ```\r \r > [!NOTE]\r > 有三种级别的匿名读取访问权限：**Off**、**Blob** 和 **Container**。 要防止对 Blob 进行匿名访问，请将 Permission 参数设置为 **Off**。 默认情况下，新容器是专用容器，只能由帐户所有者访问。 要允许对 Blob 资源进行匿名公共读取访问，但不允许访问容器元数据或容器中的 Blob 列表，请将 Permission 参数设置为 **Blob**。 要允许对 Blob 资源、容器元数据和容器中的 Blob 列表进行完全公开读取访问，请将 Permission 参数设置为 **Container**。 有关详细信息，请参阅[管理对容器和 Blob 的匿名读取访问](../blobs/storage-manage-access-to-resources.md)。\r >\r >\r \r ### <a name=\"upload-a-blob-into-a-container\"></a>将 Blob 上传到容器中\r Azure Blob 存储支持块 Blob 和页 Blob。 有关详细信息，请参阅 [了解块 Blob、追加 Blob 和页 Blob](http://msdn.microsoft.com/library/azure/ee691964.aspx)。\r \r 要将 blob 上传到容器，可使用 `azure storage blob upload`。 默认情况下，此命令会将本地文件上传到块 Blob。 若要指定 Blob 的类型，可以使用 `--blobtype` 参数。\r \r ```azurecli\r azure storage blob upload '~/images/HelloWorld.png' mycontainer myBlockBlob\r ```\r \r ### <a name=\"download-blobs-from-a-container\"></a>从容器下载 Blob\r 以下示例演示如何从容器下载 Blob。\r \r ```azurecli\r azure storage blob download mycontainer myBlockBlob '~/downloadImages/downloaded.png'\r ```\r \r ### <a name=\"copy-blobs\"></a>复制 blob\r 可以在存储帐户和区域内或跨存储帐户和区域异步复制 Blob。\r \r 以下示例演示如何将一个存储帐户中的 Blob 复制到另一个存储帐户。 在此示例中，我们创建了一个容器，其中的 blob 可以进行公开、匿名的访问。\r \r ```azurecli\r azure storage container create mycontainer2 -a <accountName2> -k <accountKey2> -p Blob\r \r azure storage blob upload '~/Images/HelloWorld.png' mycontainer2 myBlockBlob2 -a <accountName2> -k <accountKey2>\r \r azure storage blob copy start 'https://<accountname2>.blob.core.chinacloudapi.cn/mycontainer2/myBlockBlob2' mycontainer\r ```\r \r 此示例执行异步复制。 可以通过运行 `azure storage blob copy show` 操作来监视每个复制操作的状态。\r \r 请注意，所提供的用于复制操作的源 URL 必须可以公开访问，或者必须包括一个 SAS（共享访问签名）令牌。\r \r ### <a name=\"delete-a-blob\"></a>删除 Blob\r 若要删除 blob，请使用以下命令：\r \r ```azurecli\r azure storage blob delete mycontainer myBlockBlob2\r ```\r \r ## <a name=\"create-and-manage-file-shares\"></a>创建和管理文件共享\r Azure 文件存储使用标准 SMB 协议为应用程序提供共享存储。 Azure 虚拟机和云服务以及本地应用程序可以通过装载的共享来共享文件数据。 可以通过 Azure CLI 管理文件共享和文件数据。 有关 Azure 文件存储的详细信息，请参阅[在 Windows 上开始使用 Azure 文件存储](../storage-dotnet-how-to-use-files.md)或[如何通过 Linux 使用 Azure 文件存储](../storage-how-to-use-files-linux.md)。\r \r ### <a name=\"create-a-file-share\"></a>创建文件共享\r Azure 文件共享是 Azure 中的 SMB 文件共享。 所有目录和文件都必须在文件共享中创建。 一个帐户可以包含无限数量的共享，一个共享可以存储无限数量的文件，直到达到存储帐户的容量限制为止。 下面的示例创建名为 **myshare**的文件共享。\r \r ```azurecli\r azure storage share create myshare\r ```\r \r ### <a name=\"create-a-directory\"></a>创建目录\r 目录提供了进行 Azure 文件共享时可以选择的层次结构。 以下示例在文件共享中创建名为 **myDir** 的目录。\r \r ```azurecli\r azure storage directory create myshare myDir\r ```\r \r 请注意，目录路径可以包括多个级别， *例如***a/b**。 但是，必须确保所有父目录都存在。 例如，对于路径 a/b，必须先创建目录 a，然后创建目录 b。\r \r ### <a name=\"upload-a-local-file-to-directory\"></a>将本地文件上传到目录\r 以下示例将文件从 ~/temp/samplefile.txt 上传到 myDir 目录。 请编辑文件路径，使其指向你本地计算机上的有效文件：\r \r ```azurecli\r azure storage file upload '~/temp/samplefile.txt' myshare myDir\r ```\r \r 请注意，共享中的文件最大可以为 1 TB。\r \r ### <a name=\"list-the-files-in-the-share-root-or-directory\"></a>列出共享根目录或目录中的文件\r 可以使用以下命令列出共享根目录或目录中的文件和子目录：\r \r ```azurecli\r azure storage file list myshare myDir\r ```\r \r 请注意，进行列表操作时，目录名是可选的。 如果省略目录名，该命令会列出共享中根目录的内容。\r \r ### <a name=\"copy-files\"></a>复制文件\r 从 Azure CLI 的 0.9.8 版开始，可以将一个文件复制到另一个文件，将一个文件复制到一个 Blob，或将一个 Blob 复制到一个文件。 下面，我们演示如何使用 CLI 命令执行这些复制操作。 要将文件复制到新目录中：\r \r ```azurecli\r azure storage file copy start --source-share srcshare --source-path srcdir/hello.txt --dest-share destshare\r     --dest-path destdir/hellocopy.txt --connection-string $srcConnectionString --dest-connection-string $destConnectionString\r ```\r \r 要将 blob 复制到一个文件目录中：\r \r ```azurecli\r azure storage file copy start --source-container srcctn --source-blob hello2.txt --dest-share hello\r     --dest-path hellodir/hello2copy.txt --connection-string $srcConnectionString --dest-connection-string $destConnectionString\r ```\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r 可以在下面查找适用于存储资源的 Azure CLI 1.0 命令参考：\r \r * [Resource Manager 模式下的 Azure CLI 命令](../../virtual-machines/azure-cli-arm-commands.md#azure-storage-commands-to-manage-your-storage-objects)\r * [Azure 服务管理模式下的 Azure CLI 命令](../../cli-install-nodejs.md)\r \r 可能还想尝试将 [Azure CLI 2.0](../storage-azure-cli.md)（使用 Python 编写的下一代 CLI）与资源管理器部署模型配合使用。\r <!--Update_Description: update link-->"}