{"Title":"创建自定义探测 - Azure 应用程序网关 - PowerShell 经典","Description":"了解如何使用经典部署模型中的 PowerShell 创建应用程序网关的自定义探测","Content":"\r # 使用 PowerShell 创建 Azure 应用程序网关（经典）的自定义探测\r \r > [!div class=\"op_single_selector\"]\r >- [Azure 门户](./application-gateway-create-probe-portal.md)\r >- [Azure Resource Manager PowerShell](./application-gateway-create-probe-ps.md)\r >- [Azure 经典 PowerShell](./application-gateway-create-probe-classic-ps.md)\r \r [!INCLUDE [azure-probe-intro-include](../../includes/application-gateway-create-probe-intro-include.md)]\r \r > [!IMPORTANT]\r > Azure 具有用于创建和处理资源的两个不同的部署模型：[资源管理器和经典](../azure-resource-manager/resource-manager-deployment-model.md)。本文介绍使用经典部署模型。Azure 建议大多数新部署使用 Resource Manager 模型。了解如何[使用 Resource Manager 模型执行这些步骤](./application-gateway-create-probe-ps.md)。\r \r [!INCLUDE [azure-ps-prerequisites-include.md](../../includes/azure-ps-prerequisites-include.md)]\r \r ## 创建应用程序网关\r \r 创建应用程序网关：\r \r 1. 创建应用程序网关资源。\r 2. 创建配置 XML 文件或配置对象。\r 3. 将配置提交到新建的应用程序网关资源。\r \r ### 创建应用程序网关资源\r \r 若要创建网关，请使用 `New-AzureApplicationGateway` cmdlet，并将值替换为你自己的值。此时不会开始计收网关的费用。计费将在后面已成功启动网关时开始。\r \r 以下示例使用名为“testvnet1”的虚拟网络和名为“subnet-1”的子网创建应用程序网关。\r \r ```powershell\r New-AzureApplicationGateway -Name AppGwTest -VnetName testvnet1 -Subnets @(\"Subnet-1\")\r ```\r \r 若要验证是否已创建网关，可以使用 `Get-AzureApplicationGateway` cmdlet。\r \r ```powershell\r Get-AzureApplicationGateway AppGwTest\r ```\r \r > [!NOTE]\r > *InstanceCount* 的默认值为 2，最大值为 10。*GatewaySize* 的默认值为 Medium。可以选择 Small、Medium 或 Large。\r > \r > \r \r *VirtualIPs* 和 *DnsName* 显示为空白，因为网关尚未启动。这些值在网关进入运行状态后立即创建。\r \r ## 配置应用程序网关\r \r 可以使用 XML 或配置对象配置应用程序网关。\r \r ## 使用 XML 配置应用程序网关\r \r 在以下示例中，使用 XML 文件配置所有应用程序网关设置，并将这些设置提交到应用程序网关资源。\r \r ### 步骤 1\r \r 将以下文本复制到记事本中。\r \r ```xml\r <ApplicationGatewayConfiguration xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.microsoft.com/windowsazure\">\r <FrontendIPConfigurations>\r     <FrontendIPConfiguration>\r         <Name>fip1</Name>\r         <Type>Private</Type>\r     </FrontendIPConfiguration>\r </FrontendIPConfigurations>\r <FrontendPorts>\r     <FrontendPort>\r         <Name>port1</Name>\r         <Port>80</Port>\r     </FrontendPort>\r </FrontendPorts>\r <Probes>\r     <Probe>\r         <Name>Probe01</Name>\r         <Protocol>Http</Protocol>\r         <Host>contoso.com</Host>\r         <Path>/path/custompath.htm</Path>\r         <Interval>15</Interval>\r         <Timeout>15</Timeout>\r         <UnhealthyThreshold>5</UnhealthyThreshold>\r     </Probe>\r     </Probes>\r     <BackendAddressPools>\r     <BackendAddressPool>\r         <Name>pool1</Name>\r         <IPAddresses>\r             <IPAddress>1.1.1.1</IPAddress>\r             <IPAddress>2.2.2.2</IPAddress>\r         </IPAddresses>\r     </BackendAddressPool>\r </BackendAddressPools>\r <BackendHttpSettingsList>\r     <BackendHttpSettings>\r         <Name>setting1</Name>\r         <Port>80</Port>\r         <Protocol>Http</Protocol>\r         <CookieBasedAffinity>Enabled</CookieBasedAffinity>\r         <RequestTimeout>120</RequestTimeout>\r         <Probe>Probe01</Probe>\r     </BackendHttpSettings>\r </BackendHttpSettingsList>\r <HttpListeners>\r     <HttpListener>\r         <Name>listener1</Name>\r         <FrontendIP>fip1</FrontendIP>\r     <FrontendPort>port1</FrontendPort>\r         <Protocol>Http</Protocol>\r     </HttpListener>\r </HttpListeners>\r <HttpLoadBalancingRules>\r     <HttpLoadBalancingRule>\r         <Name>lbrule1</Name>\r         <Type>basic</Type>\r         <BackendHttpSettings>setting1</BackendHttpSettings>\r         <Listener>listener1</Listener>\r         <BackendAddressPool>pool1</BackendAddressPool>\r     </HttpLoadBalancingRule>\r </HttpLoadBalancingRules>\r </ApplicationGatewayConfiguration>\r ```\r \r 编辑配置项的括号之间的值。使用扩展名 .xml 保存文件。\r \r 以下示例演示如何使用配置文件设置应用程序网关以负载均衡公共端口 80 上的 HTTP 流量，然后使用自定义探测将网络流量发送到两个 IP 地址之间的后端端口 80。\r \r >[!IMPORTANT]\r > 协议项 Http 或 Https 区分大小写。\r \r 已添加用于配置自定义探测的新配置项 \\<Probe\\>。\r \r 配置参数为：\r \r * **Name** - 自定义探测的引用名称。\r * **Protocol** - 使用的协议（可能的值为 HTTP 或 HTTPS）。\r * **Host** 和 **Path** - 应用程序网关为了确定实例运行状况而调用的完整 URL 路径。例如，如果网站为 http://contoso.com/ ，则可以为 \"http://contoso.com/path/custompath.htm\" 配置自定义探测，使探测检查能够获得成功的 HTTP 响应。\r * **Interval** - 配置探测检查间隔，以秒为单位。\r * **Timeout** - 定义 HTTP 响应检查的探测超时。\r * **UnhealthyThreshold** - 将后端实例标记为*不正常* 所需的失败 HTTP 响应数目。\r \r 在 \\<BackendHttpSettings\\> 配置中引用探测名称，分配使用自定义探测设置的后端池。\r \r ## 将自定义探测配置添加到现有应用程序网关\r \r 更改当前的应用程序网关配置需要完成三个步骤：获取当前的 XML 配置文件，对其进行修改以创建自定义探测，使用新的 XML 设置来配置应用程序网关。\r \r ### 步骤 1\r \r 使用 Get-AzureApplicationGatewayConfig 获取 XML 文件。这会导出要修改的配置 XML 以添加探测设置。\r \r ```powershell\r Get-AzureApplicationGatewayConfig -Name \"<application gateway name>\" -Exporttofile \"<path to file>\"\r ```\r \r ### 步骤 2\r \r 在文本编辑器中打开 XML 文件。将 `<probe>` 节添加到 `<frontendport>` 的后面。\r \r ```xml\r <Probes>\r     <Probe>\r         <Name>Probe01</Name>\r         <Protocol>Http</Protocol>\r         <Host>contoso.com</Host>\r         <Path>/path/custompath.htm</Path>\r         <Interval>15</Interval>\r         <Timeout>15</Timeout>\r         <UnhealthyThreshold>5</UnhealthyThreshold>\r     </Probe>\r </Probes>\r ```\r \r 在 XML 的 backendHttpSettings 节中，添加以下示例中所示的探测名称：\r \r ```xml\r     <BackendHttpSettings>\r         <Name>setting1</Name>\r         <Port>80</Port>\r         <Protocol>Http</Protocol>\r         <CookieBasedAffinity>Enabled</CookieBasedAffinity>\r         <RequestTimeout>120</RequestTimeout>\r         <Probe>Probe01</Probe>\r     </BackendHttpSettings>\r ```\r \r 保存该 XML 文件。\r \r ### 步骤 3\r \r 使用 `Set-AzureApplicationGatewayConfig` 在新的 XML 文件中更新应用程序网关配置。这将以新的配置更新应用程序网关。\r \r ```powershell\r Set-AzureApplicationGatewayConfig -Name \"<application gateway name>\" -Configfile \"<path to file>\"\r ```\r \r ## 后续步骤\r \r 如果要配置安全套接字层 (SSL) 卸载，请参阅[配置应用程序网关以进行 SSL 卸载](./application-gateway-ssl.md)。\r \r 如果你想要将应用程序网关配置为与内部负载均衡器配合使用，请参阅[创建具有内部负载均衡器 (ILB) 的应用程序网关](./application-gateway-ilb.md)。\r \r <!---HONumber=Mooncake_Quality_Review_0104_2017-->"}