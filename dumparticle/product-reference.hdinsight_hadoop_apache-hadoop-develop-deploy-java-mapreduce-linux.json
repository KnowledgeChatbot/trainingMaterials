{"Title":"为 Hadoop 创建 Java MapReduce - Azure HDInsight","Description":"了解如何使用 Apache Maven 创建基于 Java 的 MapReduce 应用程序，然后使用 Azure HDInsight 中的 Hadoop 运行它。","Content":"# <a name=\"develop-java-mapreduce-programs-for-hadoop-on-hdinsight\"></a>为 HDInsight 上的 Hadoop 开发 Java MapReduce 程序\r \r 了解如何使用 Apache Maven 创建基于 Java 的 MapReduce 应用程序，并使用 Azure HDInsight 中的 Hadoop 运行它。\r \r > [!NOTE]\r > 此示例最近在 HDInsight 3.6 上进行了测试。\r \r ## <a name=\"prerequisites\"></a>先决条件\r \r * [Java JDK](http://www.oracle.com/technetwork/java/javase/downloads/) 8 或更高版本（或类似程序，如 OpenJDK）。\r \r     > [!NOTE]\r     > HDInsight 版本 3.4 及更早版本使用 Java 7。 HDInsight 3.5 及更高版本使用 Java 8。\r \r * [Apache Maven](http://maven.apache.org/)\r \r ## <a name=\"configure-development-environment\"></a>配置开发环境\r \r 可以在安装 Java 和 JDK 时设置以下环境变量。 但应检查其是否存在并且包含相关系统的适当值。\r \r * `JAVA_HOME` - 应该指向已安装 Java 运行时环境 (JRE) 的目录。 例如，在 OS X、Unix 或 Linux 系统上，它的值应该类似于 `/usr/lib/jvm/java-7-oracle`。 在 Windows 中，它的值类似于 `c:\\Program Files (x86)\\Java\\jre1.7`\r \r * `PATH` - 应该包含以下路径：\r \r   * `JAVA_HOME`（或等效路径）\r \r   * `JAVA_HOME\\bin`（或等效路径）\r \r   * 安装 Maven 的目录\r \r ## <a name=\"create-a-maven-project\"></a>创建 Maven 项目\r \r 1. 在开发环境中，通过中断会话或命令行将目录更改为要存储此项目的位置。\r \r 2. 使用随同 Maven 一起安装的 `mvn` 命令，为项目生成基架。\r \r    ```bash\r    mvn archetype:generate -DgroupId=org.apache.hadoop.examples -DartifactId=wordcountjava -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false\r    ```\r \r     > [!NOTE]\r     > 如果使用 PowerShell，必须将 `-D` 参数用双引号引起来。\r     >\r     > `mvn archetype:generate \"-DgroupId=org.apache.hadoop.examples\" \"-DartifactId=wordcountjava\" \"-DarchetypeArtifactId=maven-archetype-quickstart\" \"-DinteractiveMode=false\"`\r \r     此命令将使用 `artifactID` 参数指定的名称（此示例中为 **wordcountjava**）创建目录。此目录包含以下项：\r \r    * `pom.xml` - [项目对象模型 (POM)](http://maven.apache.org/guides/introduction/introduction-to-the-pom.html)，其中包含用于生成项目的信息和配置详细信息。\r \r    * `src` - 包含应用程序的目录。\r \r 3. 删除 `src/test/java/org/apache/hadoop/examples/apptest.java` 文件， 此示例不使用该文件。\r \r ## <a name=\"add-dependencies\"></a>添加依赖项\r \r 1. 编辑 `pom.xml` 文件，并在 `<dependencies>` 部分中添加以下文本：\r \r    ```xml\r     <dependency>\r         <groupId>org.apache.hadoop</groupId>\r         <artifactId>hadoop-mapreduce-examples</artifactId>\r         <version>2.7.3</version>\r         <scope>provided</scope>\r     </dependency>\r     <dependency>\r         <groupId>org.apache.hadoop</groupId>\r         <artifactId>hadoop-mapreduce-client-common</artifactId>\r         <version>2.7.3</version>\r         <scope>provided</scope>\r     </dependency>\r     <dependency>\r         <groupId>org.apache.hadoop</groupId>\r         <artifactId>hadoop-common</artifactId>\r         <version>2.7.3</version>\r         <scope>provided</scope>\r     </dependency>\r    ```\r \r     这会定义具有特定版本（在 &lt;version\\> 中列出）的库（在 &lt;artifactId\\> 中列出）。 在编译时，会从默认 Maven 存储库下载这些依赖项。 可以使用 [Maven 存储库搜索](http://search.maven.org/#artifactdetails%7Corg.apache.hadoop%7Chadoop-mapreduce-examples%7C2.5.1%7Cjar) 来查看详细信息。\r \r     `<scope>provided</scope>` 会告知 Maven 这些依赖项不应与此应用程序一起打包，因为它们在运行时由 HDInsight 群集提供。\r \r     > [!IMPORTANT]\r     > 使用的版本应与群集上存在的 Hadoop 版本匹配。 有关版本的详细信息，请参阅 [HDInsight 组件版本控制](../hdinsight-component-versioning.md)文档。\r \r 2. 将以下内容添加到 `pom.xml` 文件中。 此文本必须位于文件中的 `<project>...</project>` 标记内；例如 `</dependencies>` 和 `</project>` 之间。\r \r    ```xml\r     <build>\r         <plugins>\r         <plugin>\r             <groupId>org.apache.maven.plugins</groupId>\r             <artifactId>maven-shade-plugin</artifactId>\r             <version>2.3</version>\r             <configuration>\r             <transformers>\r                 <transformer implementation=\"org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer\">\r                 </transformer>\r             </transformers>\r             </configuration>\r             <executions>\r             <execution>\r                 <phase>package</phase>\r                     <goals>\r                     <goal>shade</goal>\r                     </goals>\r             </execution>\r             </executions>\r             </plugin>\r         <plugin>\r             <groupId>org.apache.maven.plugins</groupId>\r             <artifactId>maven-compiler-plugin</artifactId>\r             <version>3.6.1</version>\r             <configuration>\r             <source>1.8</source>\r             <target>1.8</target>\r             </configuration>\r         </plugin>\r         </plugins>\r     </build>\r    ```\r \r     第一个插件配置 [Maven Shade Plugin](http://maven.apache.org/plugins/maven-shade-plugin/)，用于生成 uberjar（有时称为 fatjar），其中包含应用程序所需的依赖项。 它还可以防止在 jar 包中复制许可证，复制许可证在某些系统中可能会导致问题。\r \r     第二个插件配置目标 Java 版本。\r \r     > [!NOTE]\r     > HDInsight 3.4 及更早版本使用 Java 7。 HDInsight 3.5 及更高版本使用 Java 8。\r \r 3. 保存 `pom.xml` 文件。\r \r ## <a name=\"create-the-mapreduce-application\"></a>创建 MapReduce 应用程序\r \r 1. 转到 `wordcountjava/src/main/java/org/apache/hadoop/examples` 目录并将 `App.java` 文件重命名为 `WordCount.java`。\r \r 2. 在文本编辑器中打开 `WordCount.java` 文件，并将其内容替换为以下文本：\r \r    ```java\r    package org.apache.hadoop.examples;\r \r    import java.io.IOException;\r    import java.util.StringTokenizer;\r    import org.apache.hadoop.conf.Configuration;\r    import org.apache.hadoop.fs.Path;\r    import org.apache.hadoop.io.IntWritable;\r    import org.apache.hadoop.io.Text;\r    import org.apache.hadoop.mapreduce.Job;\r    import org.apache.hadoop.mapreduce.Mapper;\r    import org.apache.hadoop.mapreduce.Reducer;\r    import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;\r    import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;\r    import org.apache.hadoop.util.GenericOptionsParser;\r \r    public class WordCount {\r \r        public static class TokenizerMapper\r            extends Mapper<Object, Text, Text, IntWritable>{\r \r        private final static IntWritable one = new IntWritable(1);\r        private Text word = new Text();\r \r        public void map(Object key, Text value, Context context\r                        ) throws IOException, InterruptedException {\r            StringTokenizer itr = new StringTokenizer(value.toString());\r            while (itr.hasMoreTokens()) {\r            word.set(itr.nextToken());\r            context.write(word, one);\r            }\r        }\r    }\r \r    public static class IntSumReducer\r            extends Reducer<Text,IntWritable,Text,IntWritable> {\r        private IntWritable result = new IntWritable();\r \r        public void reduce(Text key, Iterable<IntWritable> values,\r                            Context context\r                            ) throws IOException, InterruptedException {\r            int sum = 0;\r            for (IntWritable val : values) {\r            sum += val.get();\r            }\r           result.set(sum);\r           context.write(key, result);\r        }\r    }\r \r    public static void main(String[] args) throws Exception {\r        Configuration conf = new Configuration();\r        String[] otherArgs = new GenericOptionsParser(conf, args).getRemainingArgs();\r        if (otherArgs.length != 2) {\r            System.err.println(\"Usage: wordcount <in> <out>\");\r            System.exit(2);\r        }\r        Job job = new Job(conf, \"word count\");\r        job.setJarByClass(WordCount.class);\r        job.setMapperClass(TokenizerMapper.class);\r        job.setCombinerClass(IntSumReducer.class);\r        job.setReducerClass(IntSumReducer.class);\r        job.setOutputKeyClass(Text.class);\r        job.setOutputValueClass(IntWritable.class);\r        FileInputFormat.addInputPath(job, new Path(otherArgs[0]));\r        FileOutputFormat.setOutputPath(job, new Path(otherArgs[1]));\r        System.exit(job.waitForCompletion(true) ? 0 : 1);\r        }\r    }\r    ```\r \r     请注意，包名称为 `org.apache.hadoop.examples`，类名称为 `WordCount`。 提交 MapReduce 作业时，使用这些名称。\r \r 3. 保存文件。\r \r ## <a name=\"build-the-application\"></a>构建应用程序\r \r 1. 如果尚未到达此目录，请更改为 `wordcountjava` 目录。\r \r 2. 使用以下命令生成包含该应用程序的 JAR 文件：\r \r    ```\r    mvn clean package\r    ```\r \r     此命令将清除任何以前构建的项目，下载任何尚未安装的依赖项，并生成并打包应用程序。\r \r 3. 命令完成后，`wordcountjava/target` 目录包含一个名为 `wordcountjava-1.0-SNAPSHOT.jar` 的文件。\r \r    > [!NOTE]\r    > `wordcountjava-1.0-SNAPSHOT.jar` 文件是一种 uberjar，其中不仅包含 WordCount 作业，还包含作业在运行时需要的依赖项。\r \r ## <a id=\"upload\"></a>上传该 jar\r \r 使用以下命令将该 jar 文件上传到 HDInsight 头节点：\r \r ```bash\r scp target/wordcountjava-1.0-SNAPSHOT.jar USERNAME@CLUSTERNAME-ssh.azurehdinsight.cn:\r ```\r \r 将 __USERNAME__ 替换为群集的 SSH 用户名。 将“CLUSTERNAME”替换为 HDInsight 群集名。\r \r 此命令会将文件从本地系统复制到头节点。 有关详细信息，请参阅 [Use SSH with HDInsight](../hdinsight-hadoop-linux-use-ssh-unix.md)（对 HDInsight 使用 SSH）。\r \r ## <a name=\"run\"></a>在 Hadoop 上运行 MapReduce 作业\r \r 1. 使用 SSH 连接到 HDInsight。 有关详细信息，请参阅 [Use SSH with HDInsight](../hdinsight-hadoop-linux-use-ssh-unix.md)（对 HDInsight 使用 SSH）。\r \r 2. 在 SSH 会话中，使用以下命令运行 MapReduce 应用程序：\r \r    ```bash\r    yarn jar wordcountjava-1.0-SNAPSHOT.jar org.apache.hadoop.examples.WordCount /example/data/gutenberg/davinci.txt /example/data/wordcountout\r    ```\r \r     此命令启动 WordCount MapReduce 应用程序。 输入文件是 `/example/data/gutenberg/davinci.txt`，输出目录是 `/example/data/wordcountout`。 输入文件和输出均存储到群集的默认存储中。\r \r 3. 作业完成后，请使用以下命令查看结果：\r \r    ```bash\r    hdfs dfs -cat /example/data/wordcountout/*\r    ```\r \r     用户会收到单词和计数列表，其包含的值类似于以下文本：\r \r         zeal    1\r         zelus   1\r         zenith  2\r \r ## <a id=\"nextsteps\"></a>后续步骤\r \r 在本文档中，学习了如何开发 Java MapReduce 作业。 请参阅以下文档，了解使用 HDInsight 的其他方式。\r \r * [将 Hive 与 HDInsight 配合使用](hdinsight-use-hive.md)\r * [将 Pig 与 HDInsight 配合使用](hdinsight-use-pig.md)\r * [将 MapReduce 与 HDInsight 配合使用](hdinsight-use-mapreduce.md)\r \r 有关详细信息，另请参阅 [Java 开发人员中心](/develop/java/)。\r \r [azure-purchase-options]: https://www.azure.cn/pricing/overview/\r [azure-member-offers]: https://www.azure.cn/pricing/member-offers/\r [azure-trial]: https://www.azure.cn/pricing/1rmb-trial/\r \r [hdinsight-use-sqoop]: hdinsight-use-sqoop.md\r [hdinsight-ODBC]: apache-hadoop-connect-excel-hive-odbc-driver.md\r [hdinsight-power-query]:apache-hadoop-connect-excel-power-query.md\r \r [hdinsight-upload-data]: ../hdinsight-upload-data.md\r [hdinsight-admin-powershell]: ../hdinsight-administer-use-powershell.md\r [hdinsight-power-query]:apache-hadoop-connect-excel-power-query.md\r \r [powershell-PSCredential]: http://social.technet.microsoft.com/wiki/contents/articles/4546.working-with-passwords-secure-strings-and-credentials-in-windows-powershell.aspx\r \r \r \r <!--Update_Description: update wording and link references-->"}