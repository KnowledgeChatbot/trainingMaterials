{"Title":"使用 .NET 创建内容密钥","Description":"了解如何创建提供对资产进行安全访问的内容密钥。","Content":"# <a name=\"create-contentkeys-with-net\"></a>使用 .NET 创建内容密钥\r > [!div class=\"op_single_selector\"]\r > * [REST](media-services-rest-create-contentkey.md)\r > * [.NET](media-services-dotnet-create-contentkey.md)\r > \r > \r \r 媒体服务允许创建资产和传送加密的资产。 “ContentKey”提供对“资产”的安全访问。 \r \r 创建新资产时（例如，[上传文件](media-services-dotnet-upload-files.md)之前），可以指定以下加密选项：“StorageEncrypted”、“CommonEncryptionProtected”或“EnvelopeEncryptionProtected”。 \r \r 将资产传送到客户端时，可以使用以下两个加密选项之一 [将资产配置为动态加密](media-services-dotnet-configure-asset-delivery-policy.md)：“DynamicEnvelopeEncryption”或“DynamicCommonEncryption”。\r \r 加密的资产必须与 **ContentKey**关联。 本文介绍如何创建内容密钥。\r \r > [!NOTE]\r > 使用媒体服务 .NET SDK 创建新的“StorageEncrypted”资产时，会自动创建“ContentKey”并将其链接到资产。\r > \r > \r \r ## <a name=\"contentkeytype\"></a>ContentKeyType\r 创建内容密钥时必须设置的值之一是内容密钥类型。 选择以下值之一。 \r \r     public enum ContentKeyType\r     {\r         /// <summary>\r         /// Specifies a content key for common encryption.\r         /// </summary>\r         /// <remarks>This is the default value.</remarks>\r         CommonEncryption = 0,\r \r         /// <summary>\r         /// Specifies a content key for storage encryption.\r         /// </summary>\r         StorageEncryption = 1,\r \r         /// <summary>\r         /// Specifies a content key for configuration encryption.\r         /// </summary>\r         ConfigurationEncryption = 2,\r \r         /// <summary>\r         /// Specifies a content key for Envelope encryption.  Only used internally.\r         /// </summary>\r         EnvelopeEncryption = 4\r     }\r \r ## <a id=\"envelope_contentkey\"></a>创建信封类型 ContentKey\r 以下代码段创建信封加密类型的内容密钥。 然后，它会将密钥与指定的资产关联。\r \r     static public IContentKey CreateEnvelopeTypeContentKey(IAsset asset)\r     {\r         // Create envelope encryption content key\r         Guid keyId = Guid.NewGuid();\r         byte[] contentKey = GetRandomBuffer(16);\r \r         IContentKey key = _context.ContentKeys.Create(\r                                 keyId,\r                                 contentKey,\r                                 \"ContentKey\",\r                                 ContentKeyType.EnvelopeEncryption);\r \r         asset.ContentKeys.Add(key);\r \r         return key;\r     }\r \r     static private byte[] GetRandomBuffer(int size)\r     {\r         byte[] randomBytes = new byte[size];\r         using (RNGCryptoServiceProvider rng = new RNGCryptoServiceProvider())\r         {\r             rng.GetBytes(randomBytes);\r         }\r \r         return randomBytes;\r     }\r \r call\r \r     IContentKey key = CreateEnvelopeTypeContentKey(encryptedsset);\r \r \r \r ## <a id=\"common_contentkey\"></a>创建公共类型 ContentKey\r 以下代码段创建公共加密类型的内容密钥。 然后，它会将密钥与指定的资产关联。\r \r     static public IContentKey CreateCommonTypeContentKey(IAsset asset)\r     {\r         // Create common encryption content key\r         Guid keyId = Guid.NewGuid();\r         byte[] contentKey = GetRandomBuffer(16);\r \r         IContentKey key = _context.ContentKeys.Create(\r                                 keyId,\r                                 contentKey,\r                                 \"ContentKey\",\r                                 ContentKeyType.CommonEncryption);\r \r         // Associate the key with the asset.\r         asset.ContentKeys.Add(key);\r \r         return key;\r     }\r \r     static private byte[] GetRandomBuffer(int length)\r     {\r         var returnValue = new byte[length];\r \r         using (var rng =\r             new System.Security.Cryptography.RNGCryptoServiceProvider())\r         {\r             rng.GetBytes(returnValue);\r         }\r \r         return returnValue;\r     }\r     \r call\r \r     IContentKey key = CreateCommonTypeContentKey(encryptedsset); \r "}