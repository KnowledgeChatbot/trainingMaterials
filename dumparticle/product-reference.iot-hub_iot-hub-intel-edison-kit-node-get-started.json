{"Title":"Intel Edison 到云 (Node.js) - 将 Intel Edison 连接到 Azure IoT 中心","Description":"在本教程中了解如何设置 Intel Edison 并将其连接到 Azure IoT 中心，使 Intel Edison 能够将数据发送到 Azure 云平台。","Content":"# <a name=\"connect-intel-edison-to-azure-iot-hub-nodejs\"></a>将 Intel Edison 连接到 Azure IoT 中心 (Node.js)\r \r [!INCLUDE [iot-hub-get-started-device-selector](../../includes/iot-hub-get-started-device-selector.md)]\r \r 在本教程中，从学习如何使用 Intel Edison 的基础知识开始。 然后学习如何使用 [Azure IoT 中心](./iot-hub-what-is-iot-hub.md)将设备无缝连接到云。\r \r 还没有工具包？ 从 [这里](https://www.azure.cn/develop/iot/iot-starter-kits) 开始。 \r \r ## <a name=\"what-you-do\"></a>准备工作\r \r * 安装 Intel Edison 和 Grove 模块。\r * 创建 IoT 中心。\r * 在 IoT 中心内为 Edison 注册设备。\r * 在 Edison 上运行示例应用程序，以将传感器数据发送到 IoT 中心。\r \r 将 Intel Edison 连接到创建的 IoT 中心。 然后，在 Edison 上运行示例应用程序，从 Grove 温度传感器收集温度和湿度数据。 最后，将传感器数据发送到 IoT 中心。\r \r ## <a name=\"what-you-learn\"></a>学习内容\r \r * 如何创建 Azure IoT 中心以及如何获取新的设备连接字符串。\r * 如何将 Edison 与 Grove 温度传感器连接起来。\r * 如何通过在 Edison 上运行示例应用程序收集传感器数据。\r * 如何将传感器数据发送到 IoT 中心。\r \r ## <a name=\"what-you-need\"></a>需要什么\r \r ![需要什么](./media/iot-hub-intel-edison-kit-node-get-started/0_kit.png)\r \r * Intel Edison 开发板\r * Arduino 扩展板\r * 一个有效的 Azure 订阅。 如果没有 Azure 帐户，只需花费几分钟就能[创建一个 Azure 试用帐户](https://www.azure.cn/pricing/1rmb-trial/)。\r * 运行 Windows 或 Linux 的 Mac 或电脑。\r * Internet 连接。\r * Micro B - Type A USB 线缆\r * 直流 (DC) 电源。 电源应符合以下条件：\r   - 7-15V DC\r   - 至少 1500mA\r   - 中心/内部插头应为电源的正极\r \r 以下项可选：\r \r * Grove Base Shield V2\r * Grove - 温度传感器\r * Grove 电缆\r * 任何垫条或螺钉（随附在工具包内），其中包括两颗螺钉（用于将模块固定到扩展板上）以及四组螺钉和塑料垫片。\r \r > [!NOTE] \r 上述项为可选项，因为代码示例支持模拟的传感器数据。\r \r [!INCLUDE [iot-hub-get-started-create-hub-and-device](../../includes/iot-hub-get-started-create-hub-and-device.md)]\r \r ## <a name=\"setup-intel-edison\"></a>安装 Intel Edison\r \r ### <a name=\"assemble-your-board\"></a>组装开发板\r \r 本部分包括将 Intel® Edison 模块连接到扩展板的步骤。\r \r 1. 将 Intel® Edison 模块放在扩展板的白色边框内，将模块上的孔对准扩展板上的螺钉。\r \r 2. 将手指放在 `What will you make?` 文字下方，按压模块，直至感觉模块已就位。\r \r    ![组装开发板 2](./media/iot-hub-intel-edison-kit-node-get-started/1_assemble_board2.jpg)\r \r 3. 用两颗六角螺母（随附在工具包内）将模块固定到扩展板上。\r \r    ![组装开发板 3](./media/iot-hub-intel-edison-kit-node-get-started/2_assemble_board3.jpg)\r \r 4. 将一颗螺钉插入扩展板上的一个角孔（共四个）。 在螺钉上放置白色塑料垫片，转动并拧紧。\r \r    ![组装开发板 4](./media/iot-hub-intel-edison-kit-node-get-started/3_assemble_board4.jpg)\r \r 5. 重复上述步骤安装其他三个角垫。\r \r    ![组装开发板 5](./media/iot-hub-intel-edison-kit-node-get-started/4_assemble_board5.jpg)\r \r 现在，开发板就已组装完毕。\r \r    ![组装开发板](./media/iot-hub-intel-edison-kit-node-get-started/5_assembled_board.jpg)\r \r ### <a name=\"connect-the-grove-base-shield-and-the-temperature-sensor\"></a>连接 Grove Base Shield 和温度传感器\r \r 1. 将 Grove Base Shield 放在板上。 确保所有引脚都紧紧插入板中。\r    \r    ![Grove Base Shield](./media/iot-hub-intel-edison-kit-node-get-started/6_grove_base_sheild.jpg)\r \r 2. 通过 Grove 线缆将 Grove 温度传感器连接到 Grove Base Shield A0 端口。\r \r    ![连接到温度传感器](./media/iot-hub-intel-edison-kit-node-get-started/7_temperature_sensor.jpg)\r \r    ![Edison 和传感器连接](./media/iot-hub-intel-edison-kit-node-get-started/16_edion_sensor.png)\r \r 传感器现准备就绪。\r \r ### <a name=\"power-up-edison\"></a>为 Edison 接通电源\r \r 1. 插入电源。\r \r    ![插入电源](./media/iot-hub-intel-edison-kit-node-get-started/8_plug_power.jpg)\r \r 2. 此时，绿色 LED（Arduino* 扩展板上标记为 DS1）应点亮并持续这一状态。\r \r 3. 稍等片刻，等待开发板完成启动。\r \r    > [!NOTE]\r    > 如果没有 DC 电源，仍可通过 USB 端口为开发板供电。 有关详细信息，请参阅 `Connect Edison to your computer` 部分。 采用这种方式为开发板供电可能会导致开发板出现异常，尤其是在使用 Wi-Fi 或驱动电机时。\r    >\r    >\r \r \r ### <a name=\"connect-edison-to-your-computer\"></a>将 Edison 连接到计算机\r \r 1. 向下拨动微动开关，使之朝向两个 micro USB 端口，将 Edison 设置为设备模式。 有关设备模式与主机模式的区别，请参阅 [此处](https://software.intel.com/en-us/node/628233#usb-device-mode-vs-usb-host-mode)。\r \r    ![向下扳动微动开关](./media/iot-hub-intel-edison-kit-node-get-started/9_toggle_down_microswitch.jpg)\r \r 2. 将 micro USB 电缆插入顶部的 micro USB 端口。\r \r    ![顶部的 micro USB 端口](./media/iot-hub-intel-edison-kit-node-get-started/10_top_usbport.jpg)\r \r 3. 将 USB 电缆的另一端插入计算机。\r \r    ![计算机 USB](./media/iot-hub-intel-edison-kit-node-get-started/11_computer_usb.jpg)\r \r 4. 如果计算机安装了新驱动器，则可确定开发板已完全初始化（就像将一张 SD 卡插入计算机）。\r \r ## <a name=\"download-and-run-the-configuration-tool\"></a>下载并运行配置工具\r 请从[此链接](https://software.intel.com/en-us/iot/hardware/edison/downloads)（在 `Installers` 标题下列出）获取最新配置工具。 运行该工具，并按照屏幕上的说明进行操作，在需要时单击“下一步”\r \r ### <a name=\"flash-firmware\"></a>刷写固件\r 1. 在`Set up options`页面上，单击`Flash Firmware`。\r 2. 执行以下操作之一选择要刷写到开发板上的映像：\r    - 若要下载 Intel 提供的最新固件映像并使用该映像来刷写开发板，请选择 `Download the latest image version xxxx`。\r    - 若要使用计算机上已保存的映像来刷写开发板，请选择 `Select the local image`。 浏览到要刷写到开发板的映像并选择。\r 3. 安装工具将尝试刷写开发板。 整个刷写过程最长可能需要 10 分钟。\r \r ### <a name=\"set-password\"></a>设置密码\r 1. 在`Set up options`页面上，单击`Enable Security`。\r 2. 可为 Intel® Edison 开发板设置自定义名称。 这是可选的。\r 3. 为开发板键入密码，并单击 `Set password`。\r 4. 记下密码，稍后会用到此密码。\r \r ### <a name=\"connect-wi-fi\"></a>连接 Wi-Fi\r 1. 在`Set up options`页面上，单击`Connect Wi-Fi`。 计算机将扫描可用的 Wi-Fi 网络，此过程最长可能需要 1 分钟。\r 2. 从 `Detected Networks` 下拉列表中，选择网络。\r 3. 从 `Security` 下拉列表中，选择网络的安全类型。\r 4. 提供登录名和密码信息，并单击 `Configure Wi-Fi`。\r 5. 记下 IP 地址，稍后会用到此地址。\r \r > [!NOTE]\r > 确保 Edison 与计算机连接到同一网络。 计算机通过 IP 地址连接到 Edison。\r \r    ![连接到温度传感器](./media/iot-hub-intel-edison-kit-node-get-started/12_configuration_tool.png)\r \r 祝贺！ Edison 已配置成功。\r \r ## <a name=\"run-a-sample-application-on-intel-edison\"></a>在 Intel Edison 上运行示例应用程序\r \r ### <a name=\"prepare-the-azure-iot-device-sdk\"></a>准备 Azure IoT 设备 SDK\r \r 1. 使用主计算机的以下任一 SSH 客户端连接到 Intel Edison。 IP 地址来自配置工具，密码与该工具中设置的相同。\r     - [PuTTY](http://www.putty.org/) for Windows。\r     - Ubuntu 或 macOS 上的内置 SSH 客户端。\r \r 2. 将示例客户端应用克隆到设备中。 \r    \r    ```bash\r    git clone https://github.com/Azure-Samples/iot-hub-node-intel-edison-client-app\r    ```\r \r 3. 然后导航至存储库文件夹，运行下列命令来安装所有程序包，该过程可能需要几分钟时间。\r    \r    ```bash\r    cd iot-hub-node-intel-edison-client-app\r    npm install\r    ```\r \r \r ### <a name=\"configure-and-run-the-sample-application\"></a>配置并运行示例应用程序\r \r 1. 通过运行以下命令，打开配置文件：\r \r    ```bash\r    nano config.json\r    ```\r \r    ![配置文件](./media/iot-hub-intel-edison-kit-node-get-started/13_configure_file.png)\r \r    此文件中有两个可配置的宏。 第一个是 `INTERVAL`，它确定发送到云的两条消息之间的时间间隔。 第二个是 `simulatedData`，它是一个布尔值，指示是否使用模拟的传感器数据。\r \r    如果**没有传感器**，请将 `simulatedData` 值设置为 `true`，使示例应用程序创建和使用模拟的传感器数据。\r \r 1. 通过按“Ctrl-O”>“Enter”>“Ctrl-X”保存并退出。\r \r \r 1. 通过运行以下命令，生成示例应用程序：\r \r    ```bash\r    sudo node index.js '<your Azure IoT hub device connection string>'\r    ```\r \r    > [!NOTE] \r    确保将设备连接字符串复制并粘贴到单引号中。\r \r 应看到以下输出，其中显示传感器数据以及发送至 IoT 中心的消息。\r \r ![输出 - 从 Intel Edison 发送到 IoT 中心的传感器数据](./media/iot-hub-intel-edison-kit-node-get-started/15_message_sent.png)\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r 此时已运行示例应用程序，收集传感器数据并将其发送到 IoT 中心。\r \r [!INCLUDE [iot-hub-get-started-next-steps](../../includes/iot-hub-get-started-next-steps.md)]\r \r <!--Update_Description:update meta data and wording-->"}