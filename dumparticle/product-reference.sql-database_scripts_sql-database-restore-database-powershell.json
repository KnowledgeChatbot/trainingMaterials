{"Title":"PowerShell 示例 - 还原备份 - Azure SQL 数据库","Description":"从异地冗余备份还原 Azure SQL 数据库的 Azure PowerShell 示例脚本","Content":"# <a name=\"use-powershell-to-restore-an-azure-sql-database-from-backups\"></a>使用 PowerShell 从备份还原 Azure SQL 数据库\r \r 此 PowerShell 脚本示例从异地冗余备份还原 Azure SQL 数据库，根据最新备份还原已删除的 Azure SQL 数据库，并将 Azure SQL 数据库还原到特定的时间点。  \r \r 在运行此脚本前，请确保已使用 `Add-AzureRmAccount -EnviroumentName AzureChina` cmdlet 创建与 Azure 的连接。\r \r ## <a name=\"sample-script\"></a>示例脚本\r \r ```powershell\r # Login-AzureRmAccount -EnvironmentName AzureChinaCloud\r # Set the resource group name and location for your server\r $resourcegroupname = \"myResourceGroup-$(Get-Random)\"\r $location = \"China North\"\r # Set an admin login and password for your server\r $adminlogin = \"ServerAdmin\"\r $password = \"ChangeYourAdminPassword1\"\r # Set server name - the logical server name has to be unique in the system\r $servername = \"server-$(Get-Random)\"\r # The sample database name\r $databasename = \"mySampleDatabase\"\r # The restored database names\r $georestoredatabasename = \"MySampleDatabase_GeoRestore\"\r $pointintimerestoredatabasename = \"MySampleDatabase_10MinutesAgo\"\r $deleteddatabaserestorename = \"MySampleDatabase_DeletedRestore\"\r # The ip address range that you want to allow to access your server\r $startip = \"0.0.0.0\"\r $endip = \"0.0.0.0\"\r \r # Create a resource group\r $resourcegroup = New-AzureRmResourceGroup -Name $resourcegroupname -Location $location\r \r # Create a server with a system wide unique server name\r $server = New-AzureRmSqlServer -ResourceGroupName $resourcegroupname `\r     -ServerName $servername `\r     -Location $location `\r     -SqlAdministratorCredentials $(New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $adminlogin, $(ConvertTo-SecureString -String $password -AsPlainText -Force))\r \r # Create a server firewall rule that allows access from the specified IP range\r $firewallrule = New-AzureRmSqlServerFirewallRule -ResourceGroupName $resourcegroupname `\r     -ServerName $servername `\r     -FirewallRuleName \"AllowedIPs\" -StartIpAddress $startip -EndIpAddress $endip\r \r # Create a blank database with an S0 performance level\r $database = New-AzureRmSqlDatabase  -ResourceGroupName $resourcegroupname `\r     -ServerName $servername `\r     -DatabaseName $databasename `\r     -RequestedServiceObjectiveName \"S0\" \r \r # Restore database from latest geo-redundant backup into existing server \r # Note: Check to see that backups are created and ready to restore from geo-redundant backup\r # Important: If no backup exists, you will get an error indicating that no backups exist for the server specified\r Get-AzureRmSqlDatabaseGeoBackup -ResourceGroupName $resourcegroupname -ServerName $servername \r Get-AzureRmSqlDatabaseGeoBackup -ResourceGroupName $resourcegroupname -ServerName $servername -DatabaseName $databasename\r # Do not continue until a backup exists\r Restore-AzureRmSqlDatabase `\r     -FromGeoBackup `\r     -ResourceGroupName $resourcegroupname `\r     -ServerName $servername `\r     -TargetDatabaseName $georestoredatabasename `\r     -ResourceId $database.ResourceID `\r     -Edition \"Standard\" `\r     -ServiceObjectiveName \"S0\"\r \r # Restore database to its state 10 minutes ago\r # Note: Point-in-time restore requires database to be at least 5 minutes old\r Restore-AzureRmSqlDatabase `\r       -FromPointInTimeBackup `\r       -PointInTime (Get-Date).AddMinutes(-10) `\r       -ResourceGroupName $resourcegroupname `\r       -ServerName $servername `\r       -TargetDatabaseName $pointintimerestoredatabasename `\r       -ResourceId $database.ResourceID `\r       -Edition \"Standard\" `\r       -ServiceObjectiveName \"S0\"\r \r # Delete original database\r Remove-AzureRmSqlDatabase -ResourceGroupName $resourcegroupname -ServerName $servername -DatabaseName $databasename\r \r # Restore deleted database \r # Note: Check to see that the Get-AzureRmSqlDeletedDatabaseBackup cmdlet returns a deletion date (may take a few minutes). \r # Important: If no backup exists, no value will be returned.\r $deleteddatabase = Get-AzureRmSqlDeletedDatabaseBackup -ResourceGroupName $resourcegroupname -ServerName $servername -DatabaseName $databasename\r $deleteddatabase\r # Do not continue until the cmdlet returns information about the deleted database.\r Restore-AzureRmSqlDatabase -FromDeletedDatabaseBackup `\r     -ResourceGroupName $resourcegroupname `\r     -ServerName $servername `\r     -TargetDatabaseName $deleteddatabaserestorename `\r     -ResourceId $deleteddatabase.ResourceID `\r     -DeletionDate $deleteddatabase.DeletionDate `\r     -Edition \"Standard\" `\r     -ServiceObjectiveName \"S0\"\r \r # Clean up deployment \r # Remove-AzureRmResourceGroup -ResourceGroupName $resourcegroupname\r ```\r \r ## <a name=\"clean-up-deployment\"></a>清理部署\r \r 运行脚本示例后，可以使用以下命令删除资源组以及与其关联的所有资源。\r \r ```powershell\r Remove-AzureRmResourceGroup -ResourceGroupName $resourcegroupname\r ```\r \r ## <a name=\"script-explanation\"></a>脚本说明\r \r 此脚本使用以下命令。 表中的每条命令均链接到特定于命令的文档。\r \r | 命令 | 说明 |\r |---|---|\r | [New-AzureRmResourceGroup](https://docs.microsoft.com/powershell/resourcemanager/azurerm.resources/v3.5.0/new-azurermresourcegroup) | 创建用于存储所有资源的资源组。 | [New-AzureRmSqlServer](https://docs.microsoft.com/powershell/module/azurerm.sql/new-azurermsqlserver) | 创建用于托管数据库或弹性池的逻辑服务器。 | \r | [New-AzureRmSqlDatabase](https://docs.microsoft.com/powershell/module/azurerm.sql/new-azurermsqldatabase) | 在逻辑服务器中创建数据库作为单一数据库或入池数据库。 |\r [Get-AzureRmSqlDatabaseGeoBackup](https://docs.microsoft.com/powershell/module/azurerm.sql/get-azurermsqldatabasegeobackup) | 获取数据库的异地冗余备份。 |\r | [Restore-AzureRmSqlDatabase](https://docs.microsoft.com/powershell/module/azurerm.sql/restore-azurermsqldatabase) | 还原 SQL 数据库。 |\r |[Remove-AzureRmSqlDatabase](https://docs.microsoft.com/powershell/module/azurerm.sql/remove-azurermsqldatabase) | 删除 Azure SQL 数据库。 |\r | [Get-AzureRmSqlDeletedDatabaseBackup](https://docs.microsoft.com/powershell/module/azurerm.sql/get-azurermsqldeleteddatabasebackup) | 获取可以还原的已删除数据库。 |\r | [Remove-AzureRmResourceGroup](https://docs.microsoft.com/powershell/module/azurerm.resources/remove-azurermresourcegroup) | 删除资源组，包括所有嵌套的资源。 |\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r 有关 Azure PowerShell 的详细信息，请参阅 [Azure PowerShell 文档](https://docs.microsoft.com/powershell/azure/overview)。\r \r 可以在 [Azure SQL 数据库 PowerShell 脚本](../sql-database-powershell-samples.md)中找到更多 SQL 数据库 PowerShell 脚本示例。\r \r <!--Update_Description: update \"Clean up deployment\" script-->"}