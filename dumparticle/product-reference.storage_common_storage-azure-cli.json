{"Title":"将 Azure CLI 2.0 用于 Azure 存储","Description":"了解如何将 Azure 命令行接口 (Azure CLI) 2.0 用于 Azure 存储，以便创建和管理存储帐户并处理 Azure blob 和文件。 Azure CLI 2.0 是用 Python 编写的跨平台工具。","Content":"# <a name=\"using-the-azure-cli-20-with-azure-storage\"></a>将 Azure CLI 2.0 用于 Azure 存储\r \r 开源跨平台 Azure CLI 2.0 提供一组可在 Azure 平台上运行的命令。 它提供 [Azure 门户](https://portal.azure.cn)所提供的很多相同功能，包括各种数据访问功能。\r \r 本指南介绍如何使用 [Azure CLI 2.0](https://docs.azure.cn/cli/get-started-with-az-cli2) 执行多个使用 Azure 存储帐户中的资源的任务。 在使用本指南之前，我们建议下载并安装或者升级到 CLI 2.0 的最新版。\r \r 指南中的示例假设在 Ubuntu 上使用 Bash shell，但其他平台的执行情况应与此类似。 \r \r [!INCLUDE [storage-cli-versions](../../../includes/storage-cli-versions.md)]\r \r ## <a name=\"prerequisites\"></a>先决条件\r 本指南假设读者了解 Azure 存储的基本概念。 本指南还假设读者能够满足下面针对 Azure 和存储服务指定的帐户创建要求。\r \r ### <a name=\"accounts\"></a>帐户\r * **Azure 帐户**：如果没有 Azure 订阅，可以[创建一个试用 Azure 帐户](https://www.azure.cn/pricing/1rmb-trial/)。\r * **存储帐户**：请参阅[关于 Azure 存储帐户](storage-create-storage-account.md)中的[创建存储帐户](storage-create-storage-account.md#create-a-storage-account)。\r \r ### <a name=\"install-the-azure-cli-20\"></a>安装 Azure CLI 2.0\r \r 按照 [安装 Azure CLI 2.0](https://docs.azure.cn/cli/install-az-cli2)中的概要说明，下载并安装 Azure CLI 2.0。\r \r > [!TIP]\r > 如果在安装时遇到问题，请查看本文的[安装故障排除](https://docs.azure.cn/cli/install-az-cli2#installation-troubleshooting)部分以及 GitHub 上的 [Install Troubleshooting](https://github.com/Azure/azure-cli/blob/master/doc/install_troubleshooting.md)（安装故障排除）指南。\r >\r \r ## <a name=\"working-with-the-cli\"></a>使用 CLI\r \r 安装 CLI 之后，可以在命令行接口（Bash、终端、命令提示符）中使用 `az` 命令访问 Azure CLI 命令。 键入 `az` 命令以查看基本命令的完整列表（下面的示例输出已被截断）：\r \r ```\r      /\\\r     /  \\    _____   _ _ __ ___\r    / /\\ \\  |_  / | | | \\'__/ _ \\\r   / ____ \\  / /| |_| | | |  __/\r  /_/    \\_\\/___|\\__,_|_|  \\___|\r \r \r Welcome to the cool new Azure CLI!\r \r Here are the base commands:\r \r     account          : Manage subscriptions.\r     acr              : Manage Azure container registries.\r     acs              : Manage Azure Container Services.\r     ad               : Synchronize on-premises directories and manage Azure Active Directory\r                        resources.\r     ...\r ```\r \r 在命令行接口中，执行命令 `az storage --help` 列出 `storage` 命令子组。 子组的说明概述了 Azure CLI 提供的用于使用存储资源的功能。\r \r ```\r Group\r     az storage: Durable, highly available, and massively scalable cloud storage.\r \r Subgroups:\r     account  : Manage storage accounts.\r     blob     : Object storage for unstructured data.\r     container: Manage blob storage containers.\r     cors     : Manage Storage service Cross-Origin Resource Sharing (CORS).\r     directory: Manage file storage directories.\r     entity   : Manage table storage entities.\r     file     : File shares that use the standard SMB 3.0 protocol.\r     logging  : Manage Storage service logging information.\r     message  : Manage queue storage messages.\r     metrics  : Manage Storage service metrics.\r     queue    : Use queues to effectively scale applications according to traffic.\r     share    : Manage file shares.\r     table    : NoSQL key-value storage using semi-structured datasets.\r ```\r \r ## <a name=\"connect-the-cli-to-your-azure-subscription\"></a>将 CLI 连接到 Azure 订阅\r \r 若要使用 Azure 订阅中的资源，必须首先使用 `az login`登录到 Azure 帐户。 登录方法有多种：\r \r * 交互式登录：`az login`\r * 使用用户名和密码登录：`az login -u johndoe@contoso.com -p VerySecret`\r   * 这不能用于 Microsoft 帐户或使用多重身份验证的帐户。\r * 使用服务主体登录：`az login --service-principal -u http://azure-cli-2016-08-05-14-31-15 -p VerySecret --tenant contoso.partner.onmschina.cn`\r \r ## <a name=\"azure-cli-20-sample-script\"></a>Azure CLI 2.0 示例脚本\r \r 接下来，我们将使用一个小型 shell 脚本，该脚本会发出一些基本的 Azure CLI 2.0 命令与 Azure 存储资源进行交互。 该脚本首先在存储帐户中创建新容器，然后将现有文件（作为 Blob）上传到该容器。 然后，列出容器中的所有 Blob，最后，将文件下载到指定的本地计算机上的目标。\r \r ```bash\r #!/bin/bash\r # A simple Azure Storage example script\r \r export AZURE_STORAGE_ACCOUNT=<storage_account_name>\r export AZURE_STORAGE_ACCESS_KEY=<storage_account_key>\r \r export container_name=<container_name>\r export blob_name=<blob_name>\r export file_to_upload=<file_to_upload>\r export destination_file=<destination_file>\r \r echo \"Creating the container...\"\r az storage container create --name $container_name\r \r echo \"Uploading the file...\"\r az storage blob upload --container-name $container_name --file $file_to_upload --name $blob_name\r \r echo \"Listing the blobs...\"\r az storage blob list --container-name $container_name --output table\r \r echo \"Downloading the file...\"\r az storage blob download --container-name $container_name --name $blob_name --file $destination_file --output table\r \r echo \"Done\"\r ```\r \r **配置并运行脚本**\r \r 1. 打开偏好的文本编辑器，将前面的脚本复制并粘贴到编辑器中。\r \r 2. 接下来，更新脚本的变量以反映用户的配置设置。 按照明确的说明替换以下值：\r \r    * \\<storage_account_name\\>：存储帐户的名称。\r    * \\<storage_account_key\\>：存储帐户的主访问密钥或辅助访问密钥。\r    * \\<container_name\\>：要创建的新容器的名称，例如“azure-cli-sample-container”。\r    * \\<blob_name\\>：容器中的目标 Blob 的名称。\r    * \\<file_to_upload\\>：本地计算机上小文件的路径，例如：“~/images/HelloWorld.png”。\r    * \\<destination_file\\>：目标文件路径，如“~/downloadedImage.png”。\r \r 3. 更新所需的变量后，保存脚本并退出编辑器。 后续步骤假定已将脚本命名为 **my_storage_sample.sh**。\r \r 4. 如有必要，将脚本标记为可执行文件：`chmod +x my_storage_sample.sh`\r \r 5. 执行该脚本。 例如，在 Bash 中： `./my_storage_sample.sh`\r \r 应看到类似于以下内容的输出，在脚本中指定的 \\<destination_file\\> 应出现在本地计算机上。\r \r ```\r Creating the container...\r {\r   \"created\": true\r }\r Uploading the file...\r Percent complete: %100.0\r Listing the blobs...\r Name       Blob Type      Length  Content Type              Last Modified\r ---------  -----------  --------  ------------------------  -------------------------\r README.md  BlockBlob        6700  application/octet-stream  2017-05-12T20:54:59+00:00\r Downloading the file...\r Name\r ---------\r README.md\r Done\r ```\r \r > [!TIP]\r > 前面的输出采用 **表** 格式。 可以通过在 CLI 命令中指定 `--output` 参数来指定要使用的输出格式，或使用 `az configure` 进行全局设置。\r >\r \r ## <a name=\"manage-storage-accounts\"></a>管理存储帐户\r \r ### <a name=\"create-a-new-storage-account\"></a>新建存储帐户\r 若要使用 Azure 存储，需创建一个存储帐户。 可以在将计算机配置为[连接到订阅](#connect-to-your-azure-subscription)之后，创建新的 Azure 存储帐户。\r \r ```azurecli\r az storage account create \\\r     --location <location> \\\r     --name <account_name> \\\r     --resource-group <resource_group> \\\r     --sku <account_sku>\r ```\r \r * `--location` [必填]：位置。 例如“China East”。\r * `--name` [必填]：存储帐户名称。 名称的长度必须为 3 到 24 个字符，只能包含小写字母数字字符。\r * `--resource-group` [必填]：资源组的名称。\r * `--sku` [必填]：存储帐户 SKU。 允许的值：\r   * `Premium_LRS`\r   * `Standard_GRS`\r   * `Standard_LRS`\r   * `Standard_RAGRS`\r   * `Standard_ZRS`\r \r ### <a name=\"set-default-azure-storage-account-environment-variables\"></a>设置默认的 Azure 存储帐户环境变量\r 可以在 Azure 订阅中设置多个存储帐户。 若要选择其中一个帐户用于所有后续存储命令，可以设置这些环境变量：\r \r ```azurecli\r export AZURE_STORAGE_ACCOUNT=<account_name>\r export AZURE_STORAGE_ACCESS_KEY=<key>\r ```\r \r 设置默认存储帐户的另一种方法是使用连接字符串。 首先，使用 `show-connection-string` 命令获取连接字符串：\r \r ```azurecli\r az storage account show-connection-string \\\r     --name <account_name> \\\r     --resource-group <resource_group>\r ```\r \r 然后复制输出连接字符串，并设置 `AZURE_STORAGE_CONNECTION_STRING` 环境变量（可能需要将连接字符串括在引号中）：\r \r ```azurecli\r export AZURE_STORAGE_CONNECTION_STRING=\"<connection_string>\"\r ```\r \r > [!NOTE]\r > 本文以下部分中的所有示例均假设已设置 `AZURE_STORAGE_ACCOUNT` 和 `AZURE_STORAGE_ACCESS_KEY` 环境变量。\r >\r \r ## <a name=\"create-and-manage-blobs\"></a>创建并管理 blob\r Azure Blob 存储是用于存储大量非结构化数据（例如文本或二进制数据）的服务，这些数据可通过 HTTP 或 HTTPS 从世界各地进行访问。 本部分假设读者熟悉 Azure Blob 存储的概念。 有关详细信息，请参阅[通过 .NET 开始使用 Azure Blob 存储](../blobs/storage-dotnet-how-to-use-blobs.md)和 [Blob 服务概念](https://docs.microsoft.com/rest/api/storageservices/blob-service-concepts)。\r \r ### <a name=\"create-a-container\"></a>创建容器\r Azure 存储中的每个 Blob 都必须在容器中。 可以使用 `az storage container create` 命令创建容器：\r \r ```azurecli\r az storage container create --name <container_name>\r ```\r \r 可以通过指定可选 `--public-access` 参数，为新容器设置读取访问权限的三个级别之一：\r \r * `off`（默认值）：容器数据是帐户所有者私有的。\r * `blob`：对 Blob 的公共读取访问权限。\r * `container`：对整个容器的公共读取和列出访问权限。\r \r 有关详细信息，请参阅[管理对容器和 Blob 的匿名读取访问](../blobs/storage-manage-access-to-resources.md)。\r \r ### <a name=\"upload-a-blob-to-a-container\"></a>将 Blob 上传到容器中\r Azure Blob 存储支持块 Blob、追加 Blob 和页 Blob。 使用 `blob upload` 命令将 Blob 上传到容器：\r \r ```azurecli\r az storage blob upload \\\r     --file <local_file_path> \\\r     --container-name <container_name> \\\r     --name <blob_name>\r ```\r \r  默认情况下， `blob upload` 命令将 *.vhd 文件上传到页 Blob 或块 Blob。 若要在上传 Blob 时指定另一种类型，可以使用 `--type` 参数，允许的值为 `append`、`block` 和 `page`。\r \r  有关不同 Blob 类型的详细信息，请参阅 [了解块 Blob、追加 Blob 和页 Blob](https://docs.microsoft.com/rest/api/storageservices/Understanding-Block-Blobs--Append-Blobs--and-Page-Blobs)。\r \r ### <a name=\"download-a-blob-from-a-container\"></a>从容器下载 Blob\r 此示例演示如何从容器下载 Blob：\r \r ```azurecli\r az storage blob download \\\r     --container-name mycontainer \\\r     --name myblob.png \\\r     --file ~/mydownloadedblob.png\r ```\r \r ### <a name=\"list-the-blobs-in-a-container\"></a>列出容器中的 Blob\r \r 使用 [az storage blob list](https://docs.azure.cn/cli/storage/blob#list) 命令列出容器中的 blob。\r \r ```azurecli\r az storage blob list \\\r     --container-name mycontainer \\\r     --output table\r ```\r \r ### <a name=\"copy-blobs\"></a>复制 blob\r 可以在存储帐户和区域内或跨存储帐户和区域异步复制 Blob。\r \r 以下示例演示如何将一个存储帐户中的 Blob 复制到另一个存储帐户。 我们首先在源存储帐户中创建容器，并指定对其 blob 的公共读取访问权限。 接下来，将文件上传到该容器，最后，将 Blob 从该容器复制到目标存储帐户中的容器。\r \r ```azurecli\r # Create container in source account\r az storage container create \\\r     --account-name sourceaccountname \\\r     --account-key sourceaccountkey \\\r     --name sourcecontainer \\\r     --public-access blob\r \r # Upload blob to container in source account\r az storage blob upload \\\r     --account-name sourceaccountname \\\r     --account-key sourceaccountkey \\\r     --container-name sourcecontainer \\\r     --file ~/Pictures/sourcefile.png \\\r     --name sourcefile.png\r \r # Copy blob from source account to destination account (destcontainer must exist)\r az storage blob copy start \\\r     --account-name destaccountname \\\r     --account-key destaccountkey \\\r     --destination-blob destfile.png \\\r     --destination-container destcontainer \\\r     --source-uri https://sourceaccountname.blob.core.chinacloudapi.cn/sourcecontainer/sourcefile.png\r ```\r \r 在上面的示例中，目标容器必须已存在于目标存储帐户中，复制操作才能成功。 此外，`--source-uri` 参数中指定的源 blob 必须包含共享访问签名 (SAS) 令牌，或可公开访问，如此示例所示。\r \r ### <a name=\"delete-a-blob\"></a>删除 Blob\r 若要删除 Blob，请使用 `blob delete` 命令：\r \r ```azurecli\r az storage blob delete --container-name <container_name> --name <blob_name>\r ```\r \r ## <a name=\"create-and-manage-file-shares\"></a>创建和管理文件共享\r Azure 文件使用服务器消息块 (SMB) 协议为应用程序提供共享存储。 Azure 虚拟机和云服务以及本地应用程序可以通过装载的共享来共享文件数据。 可以通过 Azure CLI 管理文件共享和文件数据。 有关 Azure 文件的详细信息，请参阅 [Azure 文件简介](../files/storage-files-introduction.md)。\r \r ### <a name=\"create-a-file-share\"></a>创建文件共享\r Azure 文件共享是 Azure 中的 SMB 文件共享。 所有目录和文件都必须在文件共享中创建。 一个帐户可以包含无限数量的共享，一个共享可以存储无限数量的文件，直到达到存储帐户的容量限制为止。 下面的示例创建名为 **myshare**的文件共享。\r \r ```azurecli\r az storage share create --name myshare\r ```\r \r ### <a name=\"create-a-directory\"></a>创建目录\r 目录提供了 Azure 文件共享中的层次结构。 以下示例在文件共享中创建名为 **myDir** 的目录。\r \r ```azurecli\r az storage directory create --name myDir --share-name myshare\r ```\r \r 目录路径可以包括多个级别，例如 dir1/dir2。 但在创建子目录之前，必须确保所有父目录都存在。 例如，对于路径 dir1/dir2，必须先创建目录 dir1，然后再创建目录 dir2。\r \r ### <a name=\"upload-a-local-file-to-a-share\"></a>将本地文件上传到共享\r 以下示例将文件从 **~/temp/samplefile.txt** 上传到 **myshare** 文件共享的根目录。 `--source` 参数指定要上传的现有本地文件。\r \r ```azurecli\r az storage file upload --share-name myshare --source ~/temp/samplefile.txt\r ```\r \r 与创建目录一样，可以指定共享内的目录路径，将文件上传到共享内的现有目录：\r \r ```azurecli\r az storage file upload --share-name myshare/myDir --source ~/temp/samplefile.txt\r ```\r \r 共享中的文件最大可为 1 TB。\r \r ### <a name=\"list-the-files-in-a-share\"></a>列出共享中的文件\r 可以使用 `az storage file list` 命令列出共享中的文件和目录：\r \r ```azurecli\r # List the files in the root of a share\r az storage file list --share-name myshare --output table\r \r # List the files in a directory within a share\r az storage file list --share-name myshare/myDir --output table\r \r # List the files in a path within a share\r az storage file list --share-name myshare --path myDir/mySubDir/MySubDir2 --output table\r ```\r \r ### <a name=\"copy-files\"></a>复制文件      \r 可以将一个文件复制到另一个文件，将一个文件复制到一个 Blob，或将一个 Blob 复制到一个文件。 例如，要将文件复制到不同共享中的目录，请执行以下操作：        \r \r ```azurecli\r az storage file copy start \\\r --source-share share1 --source-path dir1/file.txt \\\r --destination-share share2 --destination-path dir2/file.txt     \r ```\r \r ## <a name=\"next-steps\"></a>后续步骤\r 可以参考以下附加资源详细了解如何使用 Azure CLI 2.0。\r \r * [Azure CLI 2.0 入门](https://docs.azure.cn/cli/get-started-with-az-cli2)\r * [Azure CLI 2.0 命令参考](https://docs.azure.cn/cli)\r * [GitHub 上的 Azure CLI 2.0](https://github.com/Azure/azure-cli)\r <!--Update_Description: wording update-->"}