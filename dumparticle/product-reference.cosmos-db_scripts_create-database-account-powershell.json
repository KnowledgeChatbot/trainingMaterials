{"Title":"Azure PowerShell 脚本 - 创建 Azure Cosmos DB DocumentDB API 帐户","Description":"Azure PowerShell 脚本示例 - 创建 Azure Cosmos DB DocumentDB API 帐户","Content":"# Azure Cosmos DB：使用 PowerShell 创建 DocumentDB API 帐户\r <a name=\"azure-cosmos-db-create-a-documentdb-api-account-using-powershell\" ></a>\r \r 此示例 PowerShell 脚本创建一个 Azure Cosmos DB API 帐户。 \r \r [!INCLUDE [sample-powershell-install](../../../includes/sample-powershell-install-no-ssh.md)]\r \r ## 示例脚本\r <a name=\"sample-script\" ></a>\r \r ```powershell\r # Set the Azure resource group name and location\r $resourceGroupName = \"myResourceGroup\"\r $resourceGroupLocation = \"South Central US\"\r \r # Create the resource group\r New-AzureRmResourceGroup -Name $resourceGroupName -Location $resourceGroupLocation\r \r # Database name\r $DBName = \"testdb\"\r \r # Write and read locations and priorities for the database\r $locations = @(@{\"locationName\"=\"South Central US\"; \r                  \"failoverPriority\"=0}, \r                @{\"locationName\"=\"North Central US\"; \r                   \"failoverPriority\"=1})\r \r # IP addresses that can access the database through the firewall\r $iprangefilter = \"10.0.0.1\"\r \r # Consistency policy\r $consistencyPolicy = @{\"defaultConsistencyLevel\"=\"BoundedStaleness\";\r                        \"maxIntervalInSeconds\"=\"10\"; \r                        \"maxStalenessPrefix\"=\"200\"}\r \r # DB properties\r $DBProperties = @{\"databaseAccountOfferType\"=\"Standard\"; \r                           \"locations\"=$locations; \r                           \"consistencyPolicy\"=$consistencyPolicy; \r                           \"ipRangeFilter\"=$iprangefilter}\r \r # Create the database\r New-AzureRmResource -ResourceType \"Microsoft.DocumentDb/databaseAccounts\" `\r                     -ApiVersion \"2015-04-08\" `\r                     -ResourceGroupName $resourceGroupName `\r                     -Location $resourceGroupLocation `\r                     -Name $DBName `\r                     -PropertyObject $DBProperties\r \r ```\r \r ## 清理部署\r <a name=\"clean-up-deployment\" ></a>\r \r 运行脚本示例后，可以使用以下命令删除资源组以及与其关联的所有资源。\r \r ```powershell\r Remove-AzureRmResourceGroup -ResourceGroupName \"myResourceGroup\"\r ```\r \r ## 脚本说明\r <a name=\"script-explanation\" ></a>\r \r 此脚本使用以下命令。 表中的每条命令均链接到特定于命令的文档。\r \r | 命令 | 说明 |\r |---|---|\r | [New-AzureRmResourceGroup](https://docs.microsoft.com/zh-cn/powershell/resourcemanager/azurerm.resources/v3.5.0/new-azurermresourcegroup) | 创建用于存储所有资源的资源组。 |\r | [New-AzureRmResource](https://docs.microsoft.com/zh-cn/powershell/module/azurerm.resources/new-azurermresource?view=azurermps-3.8.0) | 创建用于托管数据库或弹性池的逻辑服务器。 |\r | [Remove-AzureRmResourceGroup](https://docs.microsoft.com/zh-cn/powershell/resourcemanager/azurerm.resources/v3.5.0/remove-azurermresourcegroup) | 删除资源组，包括所有嵌套的资源。 |\r |||\r \r ## 后续步骤\r <a name=\"next-steps\" ></a>\r \r 有关 Azure PowerShell 的详细信息，请参阅 [Azure PowerShell 文档](https://docs.microsoft.com/zh-cn/powershell/)。\r \r 可以在 [Azure Cosmos DB PowerShell 脚本](../powershell-samples.md)中找到其他 Azure Cosmos DB PowerShell 脚本示例。"}