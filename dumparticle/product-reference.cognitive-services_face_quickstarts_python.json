{"Title":"人脸 API Python 快速入门","Description":"获取信息和代码示例，帮助自己快速开始使用认知服务中的人脸 API 和 Python。","Content":"# <a name=\"face-api-python-quick-starts\"></a>人脸 API Python 快速入门\r 本文提供信息和代码示例来帮助读者快速开始使用人脸 API 和 Python 来完成以下任务： \r - [检测图像中的人脸](#Detect) \r - [创建人员组](#Create)\r \r 在[此处](../../Computer-vision/Vision-API-How-to-Topics/HowToSubscribe.md)详细了解如何获取免费订阅密钥\r \r ## 使用人脸 API 通过 Python 检测图像中的人脸 <a name=\"Detect\"> </a>\r 使用[“人脸 - 检测”方法](https://dev.cognitive.azure.cn/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236)可以检测图像中的人脸，并返回人脸属性，包括：\r - 人脸 ID：在多种人脸 API 方案使用的唯一 ID。 \r - 人脸矩形：左侧坐标、顶部坐标、宽度和高度，指示人脸在图像中的位置。\r - 地标：27 点人脸地标数组，指向人脸组成部分的重要位置。\r - 面部属性包括年龄、性别、笑容强度、头部姿势和面部毛发。 \r \r #### <a name=\"face-detect-python-example-request\"></a>人脸检测 Python 示例请求\r \r 1. 复制 Python 版本的相应部分，并将其保存到某个文件，例如 `detect_faces.py`。\r 1. 将 `subscriptionKey` 值替换为有效的订阅密钥。\r 1. 更改 `uri_base` 值以使用订阅密钥的获取位置。\r 1. 运行示例。\r \r ```python\r import httplib, urllib, base64, json\r \r ###############################################\r #### Update or verify the following values. ###\r ###############################################\r \r # Replace the subscription_key string value with your valid subscription key.\r subscription_key = '13hc77781f7e4b19b5fcdd72a8df7156'\r \r uri_base = 'api.cognitive.azure.cn'\r \r # Request headers.\r headers = {\r     'Content-Type': 'application/json',\r     'Ocp-Apim-Subscription-Key': subscription_key,\r }\r \r # Request parameters.\r params = urllib.urlencode({\r     'returnFaceId': 'true',\r     'returnFaceLandmarks': 'false',\r     'returnFaceAttributes': 'age,gender,headPose,smile,facialHair,glasses,emotion,hair,makeup,occlusion,accessories,blur,exposure,noise',\r })\r \r # The URL of a JPEG image to analyze.\r body = \"{'url':'https://upload.wikimedia.org/wikipedia/commons/c/c3/RH_Louise_Lillian_Gish.jpg'}\"\r \r try:\r     # Execute the REST API call and get the response.\r     conn = httplib.HTTPSConnection('api.cognitive.azure.cn')\r     conn.request(\"POST\", \"/face/v1.0/detect?%s\" % params, body, headers)\r     response = conn.getresponse()\r     data = response.read()\r \r     # 'data' contains the JSON data. The following formats the JSON data for display.\r     parsed = json.loads(data)\r     print (\"Response:\")\r     print (json.dumps(parsed, sort_keys=True, indent=2))\r     conn.close()\r \r except Exception as e:\r     print(\"[Errno {0}] {1}\".format(e.errno, e.strerror))\r \r ####################################\r \r ########### Python 3.6 #############\r import http.client, urllib.request, urllib.parse, urllib.error, base64, requests, json\r \r ###############################################\r #### Update or verify the following values. ###\r ###############################################\r \r # Replace the subscription_key string value with your valid subscription key.\r subscription_key = '13hc77781f7e4b19b5fcdd72a8df7156'\r \r uri_base = 'https://api.cognitive.azure.cn'\r \r # Request headers.\r headers = {\r     'Content-Type': 'application/json',\r     'Ocp-Apim-Subscription-Key': subscription_key,\r }\r \r # Request parameters.\r params = {\r     'returnFaceId': 'true',\r     'returnFaceLandmarks': 'false',\r     'returnFaceAttributes': 'age,gender,headPose,smile,facialHair,glasses,emotion,hair,makeup,occlusion,accessories,blur,exposure,noise',\r }\r \r # Body. The URL of a JPEG image to analyze.\r body = {'url': 'https://upload.wikimedia.org/wikipedia/commons/c/c3/RH_Louise_Lillian_Gish.jpg'}\r \r try:\r     # Execute the REST API call and get the response.\r     response = requests.request('POST', uri_base + '/face/v1.0/detect', json=body, data=None, headers=headers, params=params)\r \r     print ('Response:')\r     parsed = json.loads(response.text)\r     print (json.dumps(parsed, sort_keys=True, indent=2))\r \r except Exception as e:\r     print('Error:')\r     print(e)\r \r ####################################    \r \r ```\r #### <a name=\"face-detect-response\"></a>人脸检测响应\r \r 成功响应将以 JSON 格式返回。 下面是成功响应的示例： \r \r ```json\r Response:\r [\r   {\r     \"faceAttributes\": {\r       \"accessories\": [],\r       \"age\": 22.9,\r       \"blur\": {\r         \"blurLevel\": \"low\",\r         \"value\": 0.06\r       },\r       \"emotion\": {\r         \"anger\": 0.0,\r         \"contempt\": 0.0,\r         \"disgust\": 0.0,\r         \"fear\": 0.0,\r         \"happiness\": 0.0,\r         \"neutral\": 0.986,\r         \"sadness\": 0.009,\r         \"surprise\": 0.005\r       },\r       \"exposure\": {\r         \"exposureLevel\": \"goodExposure\",\r         \"value\": 0.67\r       },\r       \"facialHair\": {\r         \"beard\": 0.0,\r         \"moustache\": 0.0,\r         \"sideburns\": 0.0\r       },\r       \"gender\": \"female\",\r       \"glasses\": \"NoGlasses\",\r       \"hair\": {\r         \"bald\": 0.0,\r         \"hairColor\": [\r           {\r             \"color\": \"brown\",\r             \"confidence\": 1.0\r           },\r           {\r             \"color\": \"black\",\r             \"confidence\": 0.87\r           },\r           {\r             \"color\": \"other\",\r             \"confidence\": 0.51\r           },\r           {\r             \"color\": \"blond\",\r             \"confidence\": 0.08\r           },\r           {\r             \"color\": \"red\",\r             \"confidence\": 0.08\r           },\r           {\r             \"color\": \"gray\",\r             \"confidence\": 0.02\r           }\r         ],\r         \"invisible\": false\r       },\r       \"headPose\": {\r         \"pitch\": 0.0,\r         \"roll\": 0.1,\r         \"yaw\": -32.9\r       },\r       \"makeup\": {\r         \"eyeMakeup\": true,\r         \"lipMakeup\": true\r       },\r       \"noise\": {\r         \"noiseLevel\": \"low\",\r         \"value\": 0.0\r       },\r       \"occlusion\": {\r         \"eyeOccluded\": false,\r         \"foreheadOccluded\": false,\r         \"mouthOccluded\": false\r       },\r       \"smile\": 0.0\r     },\r     \"faceId\": \"49d55c17-e018-4a42-ba7b-8cbbdfae7c6f\",\r     \"faceRectangle\": {\r       \"height\": 162,\r       \"left\": 177,\r       \"top\": 131,\r       \"width\": 162\r     }\r   }\r ]\r ```\r ## 使用人脸 API 通过 Python 创建人员组 <a name=\"Create\"> </a>\r 使用[“人员组 - 创建人员组”方法](https://dev.cognitive.azure.cn/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395244)可以创建包含指定 personGroupId、名称和用户提供的 userData 的人员组。 人员组是“人脸 - 识别”API 的最重要参数之一。 “识别”API 会在指定的人员组中搜索人员的平面。 \r \r #### <a name=\"person-group---create-a-person-group-example\"></a>“人员组 - 创建人员组”示例\r \r 复制 Python 版本的相应部分，并将其保存到某个文件，例如 `test.py`。 将“Ocp-Apim-Subscription-Key”值替换为有效的订阅密钥，并更改 REST URL 以使用订阅密钥的获取位置。\r \r ```python\r ########### Python 2.7 #############\r import httplib, urllib, base64\r \r headers = {\r     # Request headers.\r     'Content-Type': 'application/json',\r \r     # NOTE: Replace the \"Ocp-Apim-Subscription-Key\" value with a valid subscription key.\r     'Ocp-Apim-Subscription-Key': '13hc77781f7e4b19b5fcdd72a8df7156',\r }\r \r # Replace 'examplegroupid' with an ID you haven't used for creating a group before.\r # The valid characters for the ID include numbers, English letters in lower case, '-' and '_'. \r # The maximum length of the ID is 64.\r personGroupId = 'examplegroupid'\r \r # The userData field is optional. The size limit for it is 16KB.\r body = \"{ 'name':'group1', 'userData':'user-provided data attached to the person group' }\"\r \r try:\r     conn = httplib.HTTPSConnection('api.cognitive.azure.cn')\r     conn.request(\"POST\", \"/face/v1.0/persongroups/%s\" % personGroupId, body, headers)\r     response = conn.getresponse()\r \r     # 'OK' indicates success. 'Conflict' means a group with this ID already exists.\r     # If you get 'Conflict', change the value of personGroupId above and try again.\r     # If you get 'Access Denied', verify the validity of the subscription key above and try again.\r     print(response.reason)\r \r     conn.close()\r except Exception as e:\r     print(\"[Errno {0}] {1}\".format(e.errno, e.strerror))\r ####################################\r \r ########### Python 3.2 #############\r import http.client, urllib.request, urllib.parse, urllib.error, base64, sys\r \r headers = {\r     # Request headers.\r     'Content-Type': 'application/json',\r \r     # NOTE: Replace the \"Ocp-Apim-Subscription-Key\" value with a valid subscription key.\r     'Ocp-Apim-Subscription-Key': '13hc77781f7e4b19b5fcdd72a8df7156',\r }\r \r # Replace 'examplegroupid' with an ID you haven't used for creating a group before.\r # The valid characters for the ID include numbers, English letters in lower case, '-' and '_'. \r # The maximum length of the ID is 64.\r personGroupId = 'examplegroupid'\r \r # The userData field is optional. The size limit for it is 16KB.\r body = \"{ 'name':'group1', 'userData':'user-provided data attached to the person group' }\"\r \r try:\r     conn = http.client.HTTPSConnection('api.cognitive.azure.cn')\r     conn.request(\"PUT\", \"/face/v1.0/persongroups/%s\" % personGroupId, body, headers)\r     response = conn.getresponse()\r \r     # 'OK' indicates success. 'Conflict' means a group with this ID already exists.\r     # If you get 'Conflict', change the value of personGroupId above and try again.\r     # If you get 'Access Denied', verify the validity of the subscription key above and try again.\r     print(response.reason)\r \r     conn.close()\r except Exception as e:\r     print(e.args)\r ####################################\r \r "}