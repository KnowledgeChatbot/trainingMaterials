{"Title":"情感 API C# 快速入门","Description":"获取信息和代码示例，帮助自己快速开始使用认知服务中的情感 API 和 C#。","Content":"# <a name=\"emotion-api-c-quick-start\"></a>情感 API C# 快速入门\r 本文提供信息和代码示例，帮助读者快速开始使用[情感 API 识别方法](https://dev.cognitive.azure.cn/docs/services/5639d931ca73072154c1ce89/operations/563b31ea778daf121cc3a5fa)与 C# 来识别图像中一个或多个人员表达的情感。 \r \r ## <a name=\"prerequisites\"></a>先决条件\r - 在[此处](https://www.nuget.org/packages/Microsoft.ProjectOxford.Emotion/)获取 Microsoft 认知情感 API Windows SDK\r - 从 [Azure 门户](https://portal.azure.cn)获取订阅密钥。\r \r ## <a name=\"emotion-recognition-c-example-request\"></a>情感识别 C# 示例请求\r \r 在 Visual Studio 中创建一个新的控制台解决方案，然后将 Program.cs 替换为以下代码。 更改 `string uri` 以使用订阅密钥的获取区域，并将“Ocp-Apim-Subscription-Key”值替换为有效的订阅密钥。\r \r ```c#\r using System;\r using System.IO;\r using System.Net.Http.Headers;\r using System.Net.Http;\r \r namespace CSHttpClientSample\r {\r     static class Program\r     {\r         static void Main()\r         {\r             Console.Write(\"Enter the path to a JPEG image file:\");\r             string imageFilePath = Console.ReadLine();\r \r             MakeRequest(imageFilePath);\r \r             Console.WriteLine(\"\\n\\n\\nWait for the result below, then hit ENTER to exit...\\n\\n\\n\");\r             Console.ReadLine();\r         }\r \r         static byte[] GetImageAsByteArray(string imageFilePath)\r         {\r             FileStream fileStream = new FileStream(imageFilePath, FileMode.Open, FileAccess.Read);\r             BinaryReader binaryReader = new BinaryReader(fileStream);\r             return binaryReader.ReadBytes((int)fileStream.Length);\r         }\r \r         static async void MakeRequest(string imageFilePath)\r         {\r             var client = new HttpClient();\r \r             // Request headers - replace this example key with your valid key.\r             client.DefaultRequestHeaders.Add(\"Ocp-Apim-Subscription-Key\", \"13hc77781f7e4b19b5fcdd72a8df7156\");\r \r             string uri = \"https://api.cognitive.azure.cn/emotion/v1.0/recognize?\";\r             HttpResponseMessage response;\r             string responseContent;\r \r             // Request body. Try this sample with a locally stored JPEG image.\r             byte[] byteData = GetImageAsByteArray(imageFilePath);\r \r             using (var content = new ByteArrayContent(byteData))\r             {\r                 // This example uses content type \"application/octet-stream\".\r                 // The other content types you can use are \"application/json\" and \"multipart/form-data\".\r                 content.Headers.ContentType = new MediaTypeHeaderValue(\"application/octet-stream\");\r                 response = await client.PostAsync(uri, content);\r                 responseContent = response.Content.ReadAsStringAsync().Result;\r             }\r \r             //A peak at the JSON response.\r             Console.WriteLine(responseContent);\r         }\r     }\r }\r ```\r \r ## <a name=\"recognize-emotions-sample-response\"></a>识别情感示例响应\r 成功调用返回人脸条目及其关联情感评分的数组，返回的内容已按人脸矩形大小的降序排序。 空响应表示未检测到任何人脸。 情感条目包含以下字段：\r - faceRectangle - 人脸在图像中的矩形位置。\r - scores - 图像中每张人脸的情感评分。 \r \r ```json\r application/json \r [\r   {\r     \"faceRectangle\": {\r       \"left\": 68,\r       \"top\": 97,\r       \"width\": 64,\r       \"height\": 97\r     },\r     \"scores\": {\r       \"anger\": 0.00300731952,\r       \"contempt\": 5.14648448E-08,\r       \"disgust\": 9.180124E-06,\r       \"fear\": 0.0001912825,\r       \"happiness\": 0.9875571,\r       \"neutral\": 0.0009861537,\r       \"sadness\": 1.889955E-05,\r       \"surprise\": 0.008229999\r     }\r   }\r ]\r \r "}