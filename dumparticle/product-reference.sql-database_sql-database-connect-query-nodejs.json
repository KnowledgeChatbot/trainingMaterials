{"Title":"使用 Node.js 查询 Azure SQL 数据库","Description":"本主题介绍如何使用 Node.js 创建可连接到 Azure SQL 数据库的程序并使用 Transact-SQL 语句对其进行查询。","Content":"# <a name=\"use-nodejs-to-query-an-azure-sql-database\"></a>使用 Node.js 查询 Azure SQL 数据库\r \r 本快速入门教程演示了如何使用 [Node.js](https://nodejs.org/en/) 创建可连接到 Azure SQL 数据库的程序，并使用 Transact-SQL 语句查询数据。\r \r ## <a name=\"prerequisites\"></a>先决条件\r \r 若要完成本快速入门教程，请确保具备以下条件：\r \r - Azure SQL 数据库。 此快速入门使用以下某个快速入门中创建的资源： \r \r    - [创建 DB - 门户](sql-database-get-started-portal.md)\r    - [创建 DB - CLI](sql-database-get-started-cli.md)\r    - [创建 DB - PowerShell](sql-database-get-started-powershell.md)\r \r - 针对用于本快速入门教程的计算机的公共 IP 地址制定[服务器级防火墙规则](sql-database-get-started-portal.md#create-a-server-level-firewall-rule)。\r - 已为操作系统安装 Node.js 和相关软件。\r     - **MacOS**：安装 Homebrew 和 Node.js，然后安装 ODBC 驱动程序和 SQLCMD。 请参阅[步骤 1.2 和 1.3](https://www.microsoft.com/sql-server/developer-get-started/node/mac/)。\r     - **Ubuntu**：安装 Node.js，然后安装 ODBC 驱动程序和 SQLCMD。 请参阅[步骤 1.2 和 1.3](https://www.microsoft.com/sql-server/developer-get-started/node/ubuntu/)。\r     - **Windows**：安装 Chocolatey 和 Node.js，然后安装 ODBC 驱动程序和 SQL CMD。 请参阅[步骤 1.2 和 1.3](https://www.microsoft.com/sql-server/developer-get-started/node/windows/)。\r \r ## <a name=\"sql-server-connection-information\"></a>SQL Server 连接信息\r \r 获取连接到 Azure SQL 数据库所需的连接信息。 在后续过程中，将需要完全限定的服务器名称、数据库名称和登录信息。\r \r 1. 登录到 [Azure 门户](https://portal.azure.cn/)。\r 2. 从左侧菜单中选择“SQL 数据库”，并单击“SQL 数据库”页上的数据库。 \r 3. 在数据库的“概览”页上，查看如下图所示的完全限定的服务器名称。 将鼠标悬停在服务器名称上即可打开“通过单击进行复制”选项。 \r \r    ![server-name](./media/sql-database-connect-query-dotnet/server-name.png) \r \r 4. 如果忘了 Azure SQL 数据库服务器的登录信息，请导航到 SQL 数据库服务器页，以查看服务器管理员名称并重置密码（如果需要）。\r \r > [!IMPORTANT]\r > 对于在其上执行本教程操作的计算机，必须为其公共 IP 地址制定防火墙规则。 如果使用其他计算机或其他公共 IP 地址，则[使用 Azure 门户创建服务器级防火墙规则](sql-database-get-started-portal.md#create-a-server-level-firewall-rule)。 \r \r ## <a name=\"create-a-nodejs-project\"></a>创建 Node.js 项目\r \r 打开命令提示符，并创建一个名为 *sqltest* 的文件夹。 导航到已创建的文件夹，并运行以下命令：\r \r     npm init -y\r     npm install tedious\r     npm install async\r \r ## <a name=\"insert-code-to-query-sql-database\"></a>插入用于查询 SQL 数据库的代码\r \r 1. 在开发环境或常用的文本编辑器中，创建一个新文件 **sqltest.js**。\r \r 2. 将内容替换为以下代码，为服务器、数据库、用户和密码添加相应的值。\r \r    ```js\r    var Connection = require('tedious').Connection;\r    var Request = require('tedious').Request;\r \r    // Create connection to database\r    var config = \r       {\r         userName: 'someuser', // update me\r         password: 'somepassword', // update me\r         server: 'edmacasqlserver.database.chinacloudapi.cn', // update me\r         options: \r            {\r               database: 'somedb' //update me\r               , encrypt: true\r            }\r       }\r    var connection = new Connection(config);\r \r    // Attempt to connect and execute queries if connection goes through\r    connection.on('connect', function(err) \r       {\r         if (err) \r           {\r              console.log(err)\r           }\r        else\r           {\r         queryDatabase()\r       }\r       }\r     );\r \r    function queryDatabase(){\r      console.log('Reading rows from the Table...');\r \r     // Read all rows from table\r     request = new Request(\r         \"SELECT TOP 20 pc.Name as CategoryName, p.name as ProductName FROM [SalesLT].[ProductCategory] pc JOIN [SalesLT].[Product] p ON pc.productcategoryid = p.productcategoryid\",\r         function(err, rowCount, rows) \r                    {\r             console.log(rowCount + ' row(s) returned');\r                        process.exit();\r         }\r     );\r \r     request.on('row', function(columns) {\r         columns.forEach(function(column) {\r             console.log(\"%s\\t%s\", column.metadata.colName, column.value);\r         });\r     });\r         connection.execSql(request);\r       }\r    ```\r \r ## <a name=\"run-the-code\"></a>运行代码\r \r 1. 在命令提示符下运行以下命令：\r \r    ```js\r    node sqltest.js\r    ```\r \r 2. 验证是否已返回前 20 行，然后关闭应用程序窗口。\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r - 了解[用于 SQL Server 的 Microsoft Node.js 驱动程序](https://docs.microsoft.com/sql/connect/node-js/node-js-driver-for-sql-server/)\r - 了解如何在 Windows/Linux/macOS 中[使用 .NET Core 连接和查询 Azure SQL 数据库](sql-database-connect-query-dotnet-core.md)。  \r - 了解[在 Windows/Linux/macOS 中通过命令行使用 .NET Core 入门](https://docs.microsoft.com/dotnet/core/tutorials/using-with-xplat-cli)。\r - 了解如何[使用 SSMS 设计第一个 Azure SQL 数据库](sql-database-design-first-database.md)，或者如何[使用 .NET 设计第一个 Azure SQL 数据库](sql-database-design-first-database-csharp.md)。\r - 了解如何[使用 SSMS 进行连接和查询](sql-database-connect-query-ssms.md)\r - 了解如何[使用 Visual Studio Code 进行连接和查询](sql-database-connect-query-vscode.md)。\r \r "}