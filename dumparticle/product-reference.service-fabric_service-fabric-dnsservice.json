{"Title":"Azure Service Fabric DNS 服务","Description":"使用 Service Fabric 的 DNS 服务从群集内部发现微服务。","Content":"# <a name=\"dns-service-in-azure-service-fabric\"></a>Azure Service Fabric 中的 DNS 服务\r DNS 服务是可选的系统服务，可以在群集中启用，用于发现使用 DNS 协议的其他服务。\r \r 许多服务（特别是容器化服务）可以拥有一个现有的 URL 名称，因此能够使用标准 DNS 协议（而不是命名服务协议）解析这些名称就很有必要，尤其是在应用程序“提升和转移”方案中。 借助 DNS 服务，可将 DNS 名称映射到服务名称，进而解析终结点 IP 地址。 \r \r DNS 服务将 DNS 名称映射到服务名称，命名服务将服务名称进行解析并将其返回服务终结点。 在创建时提供服务的 DNS 名称。 \r \r ![服务终结点][0]\r \r ## <a name=\"enabling-the-dns-service\"></a>启用 DNS 服务\r 首先，需要在群集中启用 DNS 服务。 获取要部署的群集的模板。 可以使用[示例模板](https://github.com/Azure/azure-quickstart-templates/tree/master/service-fabric-secure-cluster-5-node-1-nodetype)，也可以创建 Resource Manager 模板。 可通过以下步骤启用 DNS 服务：\r \r 1. 检查 `apiversion` 是否针对 `Microsoft.ServiceFabric/clusters` 资源设置为 `2017-07-01-preview`，如果没有，请按以下代码片段所示进行更新：\r \r     ```json\r     {\r         \"apiVersion\": \"2017-07-01-preview\",\r         \"type\": \"Microsoft.ServiceFabric/clusters\",\r         \"name\": \"[parameters('clusterName')]\",\r         \"location\": \"[parameters('clusterLocation')]\",\r         ...\r     }\r     ```\r \r 2. 现在，通过在 `fabricSettings` 部分后添加以下 `addonFeatures` 部分启用 DNS 服务，如以下代码片段所示： \r \r     ```json\r         \"fabricSettings\": [\r         ...      \r         ],\r         \"addonFeatures\": [\r             \"DnsService\"\r         ],\r     ```\r \r 3. 通过前述更改更新群集模板后，应用更改并等待升级完成。 完成后，DNS 系统服务开始在群集中运行，该服务在 Service Fabric Explorer 中的系统服务部分下称为 `fabric:/System/DnsService`。 \r \r 或者，可在创建群集时通过门户启用 DNS 服务。 可通过在 `Cluster configuration` 菜单中选中 `Include DNS service` 的框来启用 DNS 服务，如以下屏幕截图所示：\r \r ![通过门户启用 DNS 服务][2]\r \r ## <a name=\"setting-the-dns-name-for-your-service\"></a>设置服务的 DNS 名称\r DNS 服务在群集中运行后，可以声明方式在 `ApplicationManifest.xml` 中为默认服务设置 DNS 名称，或通过 Powershell 命令设置服务的 DNS 名称。\r \r ### <a name=\"setting-the-dns-name-for-a-default-service-in-the-applicationmanifestxml\"></a>在 ApplicationManifest.xml 中为默认服务设置 DNS 名称\r 在 Visual Studio 中或选择的编辑器中打开项目，然后打开 `ApplicationManifest.xml` 文件。 转到默认服务部分，为每个服务添加 `ServiceDnsName` 属性。 以下示例说明如何将服务的 DNS 名称设置为 `service1.application1`\r \r ```xml\r     <Service Name=\"Stateless1\" ServiceDnsName=\"service1.application1\">\r     <StatelessService ServiceTypeName=\"Stateless1Type\" InstanceCount=\"[Stateless1_InstanceCount]\">\r         <SingletonPartition />\r     </StatelessService>\r     </Service>\r ```\r 部署应用程序后，Service Fabric Explorer 中的服务实例会显示此实例的 DNS 名称，如下图所示： \r \r ![服务终结点][1]\r \r ### <a name=\"setting-the-dns-name-for-a-service-using-powershell\"></a>使用 Powershell 设置服务的 DNS 名称\r 创建服务时，可以使用 `New-ServiceFabricService` Powershell 设置服务的 DNS 名称。 以下示例创建一个 DNS 名称为 `service1.application1` 的新的无状态服务\r \r ```powershell\r     New-ServiceFabricService `\r     -Stateless `\r     -PartitionSchemeSingleton `\r     -ApplicationName `fabric:/application1 `\r     -ServiceName fabric:/application1/service1 `\r     -ServiceTypeName Service1Type `\r     -InstanceCount 1 `\r     -ServiceDnsName service1.application1\r ```\r \r ## <a name=\"using-dns-in-your-services\"></a>在服务中使用 DNS\r 如果部署多个服务，则可使用 DNS 名称找到与之通信的其他服务的终结点。 DNS 服务仅适用于无状态服务，因为 DNS 协议无法与有状态服务通信。 对于有状态服务，可使用 HTTP 调用的内置反向代理调用特定服务分区。\r \r 以下代码显示如何调用其他服务，这只是一个常规 HTTP 调用，需提供端口和任意可选路径作为 URL 的一部分。\r \r ```csharp\r public class ValuesController : Controller\r {\r     // GET api\r     [HttpGet]\r     public async Task<string> Get()\r     {\r         string result = \"\";\r         try\r         {\r             Uri uri = new Uri(\"http://service1.application1:8080/api/values\");\r             HttpClient client = new HttpClient();\r             var response = await client.GetAsync(uri);\r             result = await response.Content.ReadAsStringAsync();\r \r         }\r         catch (Exception e)\r         {\r             Console.Write(e.Message);\r         }\r \r         return result;\r     }\r }\r ```\r \r ## <a name=\"next-steps\"></a>后续步骤\r 通过[连接服务并与服务进行通信](service-fabric-connect-and-communicate-with-services.md)，了解有关群集内服务通信的详细信息\r \r [0]: ./media/service-fabric-connect-and-communicate-with-services/dns.png\r [1]: ./media/service-fabric-dnsservice/servicefabric-explorer-dns.PNG\r [2]: ./media/service-fabric-dnsservice/DNSService.PNG\r \r <!--Update_Description: update meta properties, wording update-->"}