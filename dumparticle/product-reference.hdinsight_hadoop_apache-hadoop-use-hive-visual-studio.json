{"Title":"使用用于 Visual Studio 的 Data Lake (Hadoop) 工具运行 Hive 查询 - Azure HDInsight","Description":"了解如何使用用于 Visual Studio 的 Data Lake 工具对 Azure HDInsight 上的 Apache Hadoop 运行 Apache Hive 查询。","Content":"# <a name=\"run-hive-queries-using-the-data-lake-tools-for-visual-studio\"></a>使用用于 Visual Studio 的 Data Lake 工具运行 Hive 查询\r \r [!INCLUDE [azure-visual-studio-login-guide](../../../includes/azure-visual-studio-login-guide.md)]\r \r 了解如何使用用于 Visual Studio 的 Data Lake 工具查询 Apache Hive。 使用 Data Lake 工具可以轻松创建、监视 Hive 查询并将其提交到 Azure HDInsight 上的 Hadoop。\r \r ## <a id=\"prereq\"></a>先决条件\r \r * Azure HDInsight（HDInsight 上的 Hadoop）群集\r \r   > [!IMPORTANT]\r   > Linux 是在 HDInsight 3.4 版或更高版本上使用的唯一操作系统。 有关详细信息，请参阅 [HDInsight 在 Windows 上停用](../hdinsight-component-versioning.md#hdinsight-windows-retirement)。\r \r * Visual Studio（以下版本之一）：\r \r     * Visual Studio 2013 Community/Professional/Premium/Ultimate Update 4\r \r     * Visual Studio 2015（任何版本）\r \r     * Visual Studio 2017（任何版本）\r \r * 用于 Visual Studio 的 HDInsight 工具或用于 Visual Studio 的 Azure Data Lake 工具。 请参阅 [Get started using Visual Studio Hadoop tools for HDInsight](apache-hadoop-visual-studio-tools-get-started.md)（开始使用 Visual Studio Hadoop tools for HDInsight），了解如何安装和配置这些工具。\r \r ## <a id=\"run\"></a> 使用 Visual Studio 运行 Hive 查询\r \r 1. 打开“Visual Studio”，选择“新建” > “项目” > “Azure Data Lake” > “HIVE” > “Hive 应用程序”。 为此项目提供一个名称。\r \r 2. 打开在创建此项目时产生的 **Script.hql** 文件，并在其中粘贴以下 HiveQL 语句：\r \r    ```hiveql\r    set hive.execution.engine=tez;\r    DROP TABLE log4jLogs;\r    CREATE EXTERNAL TABLE log4jLogs (t1 string, t2 string, t3 string, t4 string, t5 string, t6 string, t7 string)\r    ROW FORMAT DELIMITED FIELDS TERMINATED BY ' '\r    STORED AS TEXTFILE LOCATION '/example/data/';\r    SELECT t4 AS sev, COUNT(*) AS count FROM log4jLogs WHERE t4 = '[ERROR]' AND  INPUT__FILE__NAME LIKE '%.log' GROUP BY t4;\r    ```\r \r     这些语句可执行以下操作：\r \r    * `DROP TABLE`：如果表存在，此语句会将其删除。\r \r    * `CREATE EXTERNAL TABLE`：在 Hive 中创建一个新的“外部”表。 外部表仅在 Hive 中存储表定义；数据会保留在原始位置。\r \r      > [!NOTE]\r      > 如果希望通过外部源更新基础数据，应使用外部表。 例如，MapReduce 作业或 Azure 服务。\r      >\r      > 删除外部表**不会**删除数据，只会删除表定义。\r \r    * `ROW FORMAT`：告知 Hive 如何设置数据的格式。 在此情况下，每个日志中的字段以空格分隔。\r \r    * `STORED AS TEXTFILE LOCATION`：告知 Hive 数据已以文本形式存储在 example/data 目录中。\r \r    * `SELECT`：选择 `t4` 列包含值 `[ERROR]` 的所有行计数。 此语句会返回值 `3` ，因为有三个行包含此值。\r \r    * `INPUT__FILE__NAME LIKE '%.log'` - 告知 Hive，我们只应返回以 .log 结尾的文件中的数据。 此子句将搜索限定为包含数据的 sample.log 文件。\r \r 3. 从工具栏中，选择要用于此查询的 **HDInsight 群集** 。 选择“提交”  以 Hive 作业形式运行语句。\r \r    ![“提交”栏](./media/apache-hadoop-use-hive-visual-studio/toolbar.png)\r \r 4. “Hive 作业摘要”将会出现并显示有关正在运行的作业的信息。 在“作业状态”更改为“已完成”之前，使用“刷新”链接刷新作业信息。\r \r    ![显示已完成作业的作业摘要](./media/apache-hadoop-use-hive-visual-studio/jobsummary.png)\r \r 5. 使用“作业输出”链接查看此作业的输出。 `[ERROR] 3`，这是此查询返回的值。\r \r 6. 也可以运行 Hive 查询，而无需创建项目。 使用“服务器资源管理器”，展开“Azure” > “HDInsight”，右键单击 HDInsight 服务器，然后选择“编写 Hive 查询”。\r \r 7. 在出现的 **temp.hql** 文档中，添加以下 HiveQL 语句：\r \r    ```hiveql\r    set hive.execution.engine=tez;\r    CREATE TABLE IF NOT EXISTS errorLogs (t1 string, t2 string, t3 string, t4 string, t5 string, t6 string, t7 string) STORED AS ORC;\r    INSERT OVERWRITE TABLE errorLogs SELECT t1, t2, t3, t4, t5, t6, t7 FROM log4jLogs WHERE t4 = '[ERROR]' AND INPUT__FILE__NAME LIKE '%.log';\r    ```\r \r     这些语句可执行以下操作：\r \r    * `CREATE TABLE IF NOT EXISTS`：如果表尚不存在，则创建表。 由于未使用 `EXTERNAL` 关键字，因此此语句会创建内部表。 内部表存储在 Hive 数据仓库中，并由 Hive 托管。\r \r      > [!NOTE]\r      > 与 `EXTERNAL` 表不同，删除内部表会同时删除基础数据。\r \r    * `STORED AS ORC`：以优化的行纵栏式 (ORC) 格式存储数据。 ORC 是高度优化且有效的 Hive 数据存储格式。\r \r    * `INSERT OVERWRITE ... SELECT`：从包含 `[ERROR]` 的 `log4jLogs` 表中选择行，然后将数据插入 `errorLogs` 表中。\r \r 8. 从工具栏中，选择“提交”以运行该作业。 使用“作业状态”确定作业是否已成功完成。\r \r 9. 若要验证作业是否已创建表，请使用“服务器资源管理器”，然后展开“Azure” > “HDInsight”> 你的 HDInsight 群集 >“Hive 数据库” > “默认值”。 此时会列出 **errorLogs** 表和 **log4jLogs** 表。\r \r ## <a id=\"nextsteps\"></a>后续步骤\r \r 可以看到，适用于 Visual Studio 的 HDInsight 工具可以轻松地在 HDInsight 上处理 Hive 查询。\r \r 有关 HDInsight 中的 Hive 的一般信息：\r \r * [将 Hive 与 Hadoop on HDInsight 配合使用](hdinsight-use-hive.md)\r \r 有关 HDInsight 上 Hadoop 的其他使用方法的信息：\r \r * [将 Pig 与 Hadoop on HDInsight 配合使用](hdinsight-use-pig.md)\r \r * [将 MapReduce 与 HDInsight 上的 Hadoop 配合使用](hdinsight-use-mapreduce.md)\r \r 有关适用于 Visual Studio 的 HDInsight 工具的详细信息：\r \r * [用于 Visual Studio 的 HDInsight 工具入门](apache-hadoop-visual-studio-tools-get-started.md)\r \r [hdinsight-sdk-documentation]: http://msdnstage.redmond.corp.microsoft.com/library/dn479185.aspx\r \r [azure-purchase-options]: https://www.azure.cn/pricing/overview/\r [azure-member-offers]: https://www.azure.cn/pricing/member-offers/\r [azure-trial]: https://www.azure.cn/pricing/1rmb-trial/\r \r [apache-tez]: http://tez.apache.org\r [apache-hive]: http://hive.apache.org/\r [apache-log4j]: http://en.wikipedia.org/wiki/Log4j\r [hive-on-tez-wiki]: https://cwiki.apache.org/confluence/display/Hive/Hive+on+Tez\r [import-to-excel]: apache-hadoop-connect-excel-power-query.md\r [hdinsight-use-oozie]: ../hdinsight-use-oozie.md\r [hdinsight-analyze-flight-data]: ../hdinsight-analyze-flight-delay-data.md\r \r [hdinsight-storage]: ../hdinsight-hadoop-use-blob-storage.md\r \r [hdinsight-provision]: ../hdinsight-hadoop-provision-linux-clusters.md\r [hdinsight-submit-jobs]:submit-apache-hadoop-jobs-programmatically.md\r [hdinsight-upload-data]: ../hdinsight-upload-data.md\r [hdinsight-get-started]:apache-hadoop-linux-tutorial-get-started.md\r \r [powershell-here-strings]: http://technet.microsoft.com/library/ee692792.aspx\r \r [image-hdi-hive-powershell]: ./media/hdinsight-use-hive/HDI.HIVE.PowerShell.png\r [img-hdi-hive-powershell-output]: ./media/hdinsight-use-hive/HDI.Hive.PowerShell.Output.png\r [image-hdi-hive-architecture]: ./media/hdinsight-use-hive/HDI.Hive.Architecture.png\r \r \r <!--Update_Description: update wording and link references-->"}