{"Title":"使用用于 Eclipse 的 Azure 工具包发布 Docker 容器","Description":"了解如何使用用于 Eclipse 的 Azure 工具包将 Web 应用作为 Docker 容器发布到 Azure。","Content":"# <a name=\"publish-a-web-app-as-a-docker-container-by-using-the-azure-toolkit-for-eclipse\"></a>使用用于 Eclipse 的 Azure 工具包将 Web 应用发布为 Docker 容器\r \r Docker 容器广泛用于部署 Web 应用程序。 开发人员可在其中将其所有项目文件和依赖项整合成单个包，以便部署到服务器。 用于 Eclipse 的 Azure 工具包可以添加用于部署到 Azure 的“发布为 Docker 容器”功能，为 Java 开发人员简化了部署过程。 本文介绍如何将应用程序作为 Docker 容器发布到 Azure 的过程。\r \r > [!NOTE]\r > [Docker 网站]上提供了有关 Docker 的详细信息。\r >\r \r [!INCLUDE [azure-toolkit-for-eclipse-prerequisites](../includes/azure-toolkit-for-eclipse-prerequisites.md)]\r \r ## <a name=\"publish-your-web-app-to-azure-by-using-a-docker-container\"></a>使用 Docker 容器将 Web 应用发布到 Azure\r \r 1. 在 Eclipse 中打开 Web 应用项目。\r \r 2. 若要启动“发布为 Docker 容器”向导，请执行以下操作之一：\r \r    - 在“导航器”视图中右键单击项目，并依次单击“Azure”、“发布为 Docker 容器”。\r \r       ![“导航器”视图中的“发布为 Docker 容器”命令][PUB01]\r \r    - 在 Eclipse 工具栏中单击“发布”按钮，并单击“发布为 Docker 容器”。\r \r       ![Eclipse 工具栏中的“发布为 Docker 容器”命令][PUB02]\r       \r     此时会打开“在 Azure 中部署 Docker 容器”向导。\r \r     ![“在 Azure 中部署 Docker 容器”向导][PUB03]\r \r 3. 在“键入映像名称，选择项目的路径，并检查要使用的 Docker 主机”窗口中执行以下操作：\r \r     a. 在“Docker 映像名称”框中输入 Docker 主机的唯一名称。 （向导会自动创建名称，但你可以修改该名称。）\r \r     b. “主机”区域显示已创建的所有 Docker 主机。 执行以下操作之一：\r \r     - 如果有现有的 Docker 主机，可以在其中部署 Web 应用。\r     - 若要创建新的 Docker 主机，请单击“添加”。  \r       \r     此时会打开“创建 Docker 主机”对话框。\r \r     ![“在 Azure 中部署 Docker 容器”向导][PUB04a]\r \r 4. 在“配置新虚拟机”窗口中指定 Docker 主机的以下选项。 （向导会自动生成大多数选项，但可以修改其中的任何选项。）\r \r    a. 名称：输入 Docker 主机的唯一名称。 （这与前面指定的 Docker 映像名称不同。）\r \r    b. 订阅：输入主机要使用的 Azure 订阅。\r \r    c. 区域：输入主机所在的地理区域。\r \r    d.单击“下一步”。 在“主机 OS 和大小”选项卡上：\r      - 主机 OS：输入包含主机的虚拟机的操作系统。\r      - 大小：输入主机的虚拟机大小。\r \r    e.在“新建 MySQL 数据库”边栏选项卡中，接受法律条款，并单击“确定”。 在“资源组”选项卡上：\r      - 新建资源组：为主机创建新的资源组。\r      - 现有资源组：输入 Azure 帐户中的现有资源组。\r \r    f.单击“保存”以保存设置。 在“网络”选项卡上：\r      - 新建虚拟网络：为主机创建新的虚拟网络。\r      - 现有虚拟网络：输入 Azure 帐户中的现有虚拟网络。\r \r    g. 在“存储”选项卡上：\r      - 新建存储帐户：为主机创建新的存储帐户。\r      - 现有存储帐户：输入 Azure 帐户中的现有存储帐户。\r \r 5. 单击“下一步”。\r \r 6. 在“配置登录凭据和端口设置”窗口中，选择以下选项之一：\r \r     - 从 Azure Key Vault 导入凭据：指定以前存储在 Azure 订阅中的凭据集。\r \r       >[!NOTE]\r       >共享订阅的另一帐户或服务主体不会自动访问使用特定帐户或服务主体创建的 Azure Key Vault。 若要允许另一帐户或服务主体使用 Key Vault，必须使用 Azure 门户添加该帐户或服务主体。\r \r     - 新建登录凭据：创建一组新的登录凭据。 如果选择此选项，请执行以下操作：\r     \r       - 在“VM 凭据”选项卡上，为 Docker 主机的虚拟机登录凭据选择以下选项之一：\r \r           - 用户名：输入虚拟机登录凭据的用户名。\r           - 密码和确认：输入虚拟机登录凭据的密码。\r           - SSH：输入 Docker 主机的安全外壳 (SSH) 设置。 可从以下选项中选择：\r             - 无：指定虚拟机不允许 SSH 连接。\r             - 自动生成：自动创建用于通过 SSH 建立连接的必需设置。\r             - 从目录导入：指定包含以前已保存的一组 SSH 设置的目录。 该目录必须包含以下两个文件：\r                 - id_rsa：包含用户的 RSA 标识。\r                 - id_rsa.pub：包含用于身份验证的 RSA 公钥。\r         \r         ![创建 Docker 主机][PUB05]\r \r       - 在“Docker 守护程序凭据”选项卡上指定以下选项：\r \r           - Docker 守护程序端口：输入 Docker 主机的唯一 TCP 端口。\r           - TLS 安全性：输入 Docker 主机的传输层安全性设置。 可从以下选项中选择：\r             - 无：指定虚拟机不允许 TLS 连接。\r             - 自动生成：自动创建用于通过 TLS 建立连接的必需设置。\r             - 从目录导入：指定包含以前已保存的一组 TLS 设置的目录。 更具体地说，该目录必须包含以下六个文件：\r                 - ca.pem 和 ca key.pem：包含 TLS 证书颁发机构的证书和公钥。\r                 - cert.pem 和 key.pem：包含用于 TLS 身份验证的客户端证书和公钥。\r                 - server.pem 和 server-key.pem：包含主机的服务器证书和公钥。\r \r         ![创建 Docker 主机][PUB06]\r \r 7. 输入前面的所有信息后，单击“完成”。\r \r 8. 在“在 Azure 中部署 Docker 容器”向导中，单击“下一步”。\r \r    ![“在 Azure 中部署 Docker 容器”向导][PUB07]\r \r 9. 在“配置要创建的 Docker 容器”窗口中执行以下操作：\r \r    a. 在“Docker 容器名称”框中，输入 Docker 容器的唯一名称。\r \r    b. 选择以下 Docker 映像之一：\r      - 预定义的 Docker 映像：指定 Azure 中预先存在的 Docker 映像。\r \r        >[!NOTE]\r        >此框中的 Docker 映像列表包括 Azure 工具包已配置为要修补的多个映像，用于自动部署项目。\r \r      - 自定义 Dockerfile：指定本地计算机中以前保存的 Dockerfile。\r \r        >[!NOTE]\r        >这是一项比较高级的功能，面向想要部署自己的 Dockerfile 的开发人员。 但是，使用此选项的开发人员需负责确保正确生成其 Dockerfile。 Azure 工具包不会验证自定义 Dockerfile 中的内容，因此，如果 Dockerfile 有问题，部署可能会失败。 此外，Azure 工具包预期自定义 Dockerfile 中包含 Web 应用项目，因此会尝试打开 HTTP 连接。 如果开发人员发布不同类型的项目，在部署后可能会收到无实质影响的错误。\r \r    c. 端口设置：输入 Docker 容器的唯一 TCP 端口绑定。\r \r      ![“配置要创建的 Docker 容器”窗口][PUB08]\r \r 10. 完成前面的所有步骤后，单击“完成”。\r \r Azure 工具包随即开始在 Docker 容器中将 Web 应用部署到 Azure。 \r \r ## <a name=\"next-steps\"></a>后续步骤\r 有关用于 Java IDE 的 Azure 工具包的详细信息，请参阅以下资源：\r \r - [适用于 Eclipse 的 Azure 工具包]\r   - [用于 Eclipse 的 Azure 工具包的新增功能]\r   - [安装 Azure Toolkit for Eclipse]\r   - [用于 Eclipse 的 Azure 工具包的登录说明]\r   - [在 Eclipse 中创建适用于 Azure 的 Hello World Web 应用]\r - [适用于 IntelliJ 的 Azure 工具包]\r   - [用于 IntelliJ 的 Azure 工具包的新增功能]\r   - [安装用于 IntelliJ 的 Azure 工具包]\r   - [用于 IntelliJ 的 Azure 工具包的登录说明]\r   - [在 IntelliJ 中创建适用于 Azure 的 Hello World Web 应用]\r \r 有关将 Azure 与 Java 配合使用的详细信息，请参阅 [Azure Java 开发人员中心]和[用于 Visual Studio Team Services 的 Java 工具]。\r \r 有关 Docker 的其他资源，请参阅官方 [Docker 网站]。\r \r <!-- URL List -->\r \r [适用于 Eclipse 的 Azure 工具包]: ./azure-toolkit-for-eclipse.md\r [适用于 IntelliJ 的 Azure 工具包]: ./azure-toolkit-for-intellij.md\r [在 Eclipse 中创建适用于 Azure 的 Hello World Web 应用]: ./app-service-web/app-service-web-eclipse-create-hello-world-web-app.md\r [在 IntelliJ 中创建适用于 Azure 的 Hello World Web 应用]: ./app-service-web/app-service-web-intellij-create-hello-world-web-app.md\r [安装 Azure Toolkit for Eclipse]: ./azure-toolkit-for-eclipse-installation.md\r [安装用于 IntelliJ 的 Azure 工具包]: ./azure-toolkit-for-intellij-installation.md\r [用于 Eclipse 的 Azure 工具包的登录说明]: ./azure-toolkit-for-eclipse-sign-in-instructions.md\r [用于 IntelliJ 的 Azure 工具包的登录说明]: ./azure-toolkit-for-intellij-sign-in-instructions.md\r [用于 Eclipse 的 Azure 工具包的新增功能]: ./azure-toolkit-for-eclipse-whats-new.md\r [用于 IntelliJ 的 Azure 工具包的新增功能]: ./azure-toolkit-for-intellij-whats-new.md\r \r [Azure Java 开发人员中心]: /develop/java/\r [用于 Visual Studio Team Services 的 Java 工具]: https://java.visualstudio.com/\r \r [Docker 网站]: https://www.docker.com/\r \r <!-- IMG List -->\r \r [PUB01]: ./media/azure-toolkit-for-eclipse-publish-as-docker-container/PUB01.png\r [PUB02]: ./media/azure-toolkit-for-eclipse-publish-as-docker-container/PUB02.png\r [PUB03]: ./media/azure-toolkit-for-eclipse-publish-as-docker-container/PUB03.png\r [PUB04a]: ./media/azure-toolkit-for-eclipse-publish-as-docker-container/PUB04a.png\r [PUB04b]: ./media/azure-toolkit-for-eclipse-publish-as-docker-container/PUB04b.png\r [PUB04c]: ./media/azure-toolkit-for-eclipse-publish-as-docker-container/PUB04c.png\r [PUB04d]: ./media/azure-toolkit-for-eclipse-publish-as-docker-container/PUB04d.png\r [PUB05]: ./media/azure-toolkit-for-eclipse-publish-as-docker-container/PUB05.png\r [PUB06]: ./media/azure-toolkit-for-eclipse-publish-as-docker-container/PUB06.png\r [PUB07]: ./media/azure-toolkit-for-eclipse-publish-as-docker-container/PUB07.png\r [PUB08]: ./media/azure-toolkit-for-eclipse-publish-as-docker-container/PUB08.png\r \r "}