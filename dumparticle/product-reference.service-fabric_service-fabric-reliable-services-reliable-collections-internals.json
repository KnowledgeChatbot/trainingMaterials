{"Title":"Azure Service Fabric 可靠状态管理器和可靠集合内部","Description":"深入了解 Azure Service Fabric 中的可靠集合概念和设计。","Content":"# Azure Service Fabric 可靠状态管理器和可靠集合内部\r <a name=\"azure-service-fabric-reliable-state-manager-and-reliable-collection-internals\" ></a>\r 本文档深入探讨可靠状态管理器和可靠集合，了解核心组件如何在后台工作。\r \r > [!NOTE]\r > 本文档还在编写中。 请将注释添加到本文，告诉我们你想要详细了解哪个主题。\r >\r \r ##  本地持久性模型：日志和检查点\r <a name=\"local-persistence-model-log-and-checkpoint\" ></a>\r 可靠状态管理器和 Reliable Collections 都遵循一个名为“日志和检查点”的持久性模型。\r 在此模型中，每个状态更改先记录在磁盘上，然后再应用于内存中。\r 仅在某些时候保存自身的完整状态（又称 检查点）。\r 其优点是增量转变成磁盘上只能追加的顺序写入，从而提高了性能。\r \r 为了更好地了解“日志和检查点”模型，我们先来看一下无限磁盘方案。\r 可靠状态管理器在复制操作之前记录每个操作。\r 通过记录，可靠集合可以只应用内存中的操作。\r 由于保存了日志，因此，即使副本出现故障并且需要重新启动，可靠状态管理器在其日志中也有足够的信息来重播副本丢失的所有操作。\r 由于磁盘无限大，因此，永远不需要删除日志记录，可靠集合只需管理内存中的状态。\r \r 现在让我们看一下有限磁盘方案。\r 随着日志记录的累积，可靠状态管理器将耗尽磁盘空间。\r 在这种情况出现之前，可靠状态管理器需截断其日志，以便为较新的记录腾出空间。\r 可靠状态管理器将请求可靠集合在磁盘中添加其内存中状态的检查点。\r 此时，可靠集合将保留其内存中的状态。\r 在 Reliable Collections 完成其检查点后，可靠状态管理器便可以截断日志以释放磁盘空间。\r 当副本需要重新启动时，可靠集合将恢复其检查点状态，而可靠状态管理器将恢复并播放自最后一个检查点以来发生的所有状态更改。\r \r 检查点的另一增值优点在于它可缩短常见方案中的恢复时间。 日志包含自最后一个检查点以来发生的所有操作。\r 因此它可能包括某个项的多个版本，如 Reliable Dictionary 中给定行的多个值。\r 相反，可靠集合仅将键的每个值的最新版本添加为检查点。\r \r ## 后续步骤\r <a name=\"next-steps\" ></a>\r * [事务和锁](service-fabric-reliable-services-reliable-collections-transactions-locks.md)\r \r "}