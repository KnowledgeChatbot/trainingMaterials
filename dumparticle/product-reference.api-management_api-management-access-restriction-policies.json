{"Title":"Azure API 管理访问限制策略","Description":"了解可在 Azure API 管理中使用的访问限制策略。","Content":"# <a name=\"api-management-access-restriction-policies\"></a>API 管理访问限制策略\r 本主题提供以下 API 管理策略的参考。 有关添加和配置策略的信息，请参阅 [API 管理中的策略](http://go.microsoft.com/fwlink/?LinkID=398186)。  \r   \r ##  <a name=\"AccessRestrictionPolicies\"></a>访问限制策略  \r   \r -   [检查 HTTP 标头](./api-management-access-restriction-policies.md#CheckHTTPHeader) - 强制必须存在 HTTP 标头和/或强制采用 HTTP 标头的值。  \r   \r -   [按订阅限制调用速率](./api-management-access-restriction-policies.md#LimitCallRate) - 根据订阅限制调用速率，避免 API 使用量暴增。  \r   \r -   [按密钥限制调用速率](#LimitCallRateByKey) - 根据密钥限制调用速率，避免 API 使用量暴增。  \r   \r -   [限制调用方 IP](./api-management-access-restriction-policies.md#RestrictCallerIPs) - 筛选（允许/拒绝）来自特定 IP 地址和/或地址范围的调用。  \r   \r -   [按订阅设置使用量配额](./api-management-access-restriction-policies.md#SetUsageQuota) - 允许根据订阅强制实施可续订或有生存期的调用量和/或带宽配额。  \r   \r -   [按密钥设置使用量配额](#SetUsageQuotaByKey) - 允许根据密钥强制消耗可续订或有生存期的调用量和/或带宽配额。  \r   \r -   [验证 JWT](./api-management-access-restriction-policies.md#ValidateJWT) - 强制从指定 HTTP 标头或指定查询参数提取的 JWT 必须存在且有效。  \r   \r ##  <a name=\"CheckHTTPHeader\"></a>检查 HTTP 标头  \r  使用 `check-header` 策略强制请求具有指定的 HTTP 标头。 可以选择性地查看标头是否具有特定值，或者检查是否存在一系列允许的值。 如果检查失败，此策略会终止请求处理，并返回其所指定的 HTTP 状态代码和错误消息。  \r   \r ### <a name=\"policy-statement\"></a>策略语句  \r   \r ```xml  \r <check-header name=\"header name\" failed-check-httpcode=\"code\" failed-check-error-message=\"message\" ignore-case=\"True\">  \r     <value>Value1</value>  \r     <value>Value2</value>  \r </check-header>  \r ```  \r   \r ### <a name=\"example\"></a>示例  \r   \r ```xml  \r <check-header name=\"Authorization\" failed-check-httpcode=\"401\" failed-check-error-message=\"Not authorized\" ignore-case=\"false\">  \r     <value>f6dc69a089844cf6b2019bae6d36fac8</value>  \r </check-header>  \r ```  \r   \r ### <a name=\"elements\"></a>元素  \r   \r |名称|说明|必选|  \r |----------|-----------------|--------------|  \r |check-header|根元素。|是|  \r |value|允许的 HTTP 标头值。 指定了多个值元素时，如果任何一个值匹配，则检查将被视为成功。|否|  \r   \r ### <a name=\"attributes\"></a>属性  \r   \r |名称|说明|必选|默认|  \r |----------|-----------------|--------------|-------------|  \r |failed-check-error-message|在标头不存在或其值无效的情况下，需要在 HTTP 响应正文中返回的错误消息。 此消息必须对任何特殊字符正确地进行转义。|是|不适用|  \r |failed-check-httpcode|在标头不存在或其值无效时需返回的 HTTP 状态代码。|是|不适用|  \r |header-name|要检查的 HTTP 标头的名称。|是|不适用|  \r |ignore-case|可以设置为 True 或 False。 如果设置为 True，则在将标头值与一组可接受的值进行比较时，会忽略大小写。|是|不适用|  \r   \r ### <a name=\"usage\"></a>使用情况  \r  此策略可在以下策略[节](./api-management-howto-policies.md#sections)和[范围](./api-management-howto-policies.md#scopes)中使用。  \r   \r -   **策略节：**入站、出站  \r   \r -   **策略范围：**全局、产品、API、操作  \r   \r ##  <a name=\"LimitCallRate\"></a>按订阅限制调用速率  \r  `rate-limit` 策略可以对调用速率进行限制，使每个指定时段的调用不超出指定的数目，避免单个订阅的 API 使用量暴增。 触发此策略时，调用方会收到 `429 Too Many Requests` 响应状态代码。  \r   \r > [!IMPORTANT]\r >  每个策略文档只能使用此策略一次。  \r >   \r >  [策略表达式](./api-management-policy-expressions.md)不能用于此策略的任何策略属性。  \r   \r ### <a name=\"policy-statement\"></a>策略语句  \r   \r ```xml  \r <rate-limit calls=\"number\" renewal-period=\"seconds\">  \r     <api name=\"name\" calls=\"number\" renewal-period=\"seconds\">  \r         <operation name=\"name\" calls=\"number\" renewal-period=\"seconds\" />  \r     </api>  \r </rate-limit>  \r ```  \r   \r ### <a name=\"example\"></a>示例  \r   \r ```xml  \r <policies>  \r     <inbound>  \r         <base />  \r         <rate-limit calls=\"20\" renewal-period=\"90\" />  \r     </inbound>  \r     <outbound>  \r         <base />          \r     </outbound>  \r </policies>  \r ```  \r   \r ### <a name=\"elements\"></a>元素  \r   \r |名称|说明|必选|  \r |----------|-----------------|--------------|  \r |set-limit|根元素。|是|  \r |api|添加一个或多个此类元素，对产品中的 API 施加调用速率限制。 产品和 API 的调用速率限制是各自独立应用的。|否|  \r |operation|添加一个或多个此类元素，对 API 中的操作施加调用速率限制。 产品、API 和操作的调用速率限制是各自独立应用的。|否|  \r   \r ### <a name=\"attributes\"></a>属性  \r   \r |名称|说明|必选|默认|  \r |----------|-----------------|--------------|-------------|  \r |name|要对其应用速率限制的 API 的名称。|是|不适用|  \r |calls|在 `renewal-period` 所指定的时间间隔内允许的最大总调用数。|是|不适用|  \r |renewal-period|在重置配额之前等待的时间长度，以秒为单位。|是|不适用|  \r   \r ### <a name=\"usage\"></a>使用情况  \r  此策略可在以下策略[节](./api-management-howto-policies.md#sections)和[范围](./api-management-howto-policies.md#scopes)中使用。  \r   \r -   **策略节：**入站  \r   \r -   **策略范围：**产品  \r   \r ##  <a name=\"LimitCallRateByKey\"></a>按密钥限制调用速率  \r  `rate-limit-by-key` 策略可以对调用速率进行限制，使每个指定时段的调用不超出指定的数目，避免单个密钥的 API 使用量暴增。 密钥的值可以是任意字符串，通常使用策略表达式来提供密钥。 可以添加可选增量条件，指定在判断请求数是否达到限制时应计入哪些请求。 触发此策略时，调用方会收到 `429 Too Many Requests` 响应状态代码。  \r   \r  有关此策略的详细信息和示例，请参阅[使用 Azure API 管理进行高级请求限制](./api-management-sample-flexible-throttling.md)。  \r   \r > [!IMPORTANT]\r >  每个策略文档只能使用此策略一次。  \r   \r ### <a name=\"policy-statement\"></a>策略语句  \r   \r ```xml  \r <rate-limit-by-key calls=\"number\"  \r                    renewal-period=\"seconds\"   \r                    increment-condition=\"condition\"   \r                    counter-key=\"key value\" />  \r   \r ```  \r   \r ### <a name=\"example\"></a>示例  \r  在下面的示例中，速率限制与调用方 IP 地址相匹配。  \r   \r ```xml  \r <policies>  \r     <inbound>  \r         <base />  \r         <rate-limit-by-key  calls=\"10\"  \r               renewal-period=\"60\"  \r               increment-condition=\"@(context.Response.StatusCode == 200)\"  \r               counter-key=\"@(context.Request.IpAddress)\"/>  \r     </inbound>  \r     <outbound>  \r         <base />          \r     </outbound>  \r </policies>  \r ```  \r   \r ### <a name=\"elements\"></a>元素  \r   \r |名称|说明|必选|  \r |----------|-----------------|--------------|  \r |set-limit|根元素|是|  \r   \r ### <a name=\"attributes\"></a>属性  \r   \r |名称|说明|必选|默认|  \r |----------|-----------------|--------------|-------------|  \r |calls|在 `renewal-period` 所指定的时间间隔内允许的最大总调用数。|是|不适用|  \r |counter-key|用于速率限制策略的密钥。|是|不适用|  \r |increment-condition|一个布尔表达式，指定在判断请求数是否达到配额时是否应计入该请求 (`true`)。|否|不适用|  \r |renewal-period|在重置配额之前等待的时间长度，以秒为单位。|是|不适用|  \r   \r ### <a name=\"usage\"></a>使用情况  \r  此策略可在以下策略[节](./api-management-howto-policies.md#sections)和[范围](./api-management-howto-policies.md#scopes)中使用。  \r   \r -   **策略节：**入站  \r   \r -   **策略范围：**全局、产品、API、操作  \r   \r ##  <a name=\"RestrictCallerIPs\"></a>限制调用方 IP  \r  `ip-filter` 策略筛选（允许/拒绝）来自特定 IP 地址和/或地址范围的调用。  \r   \r ### <a name=\"policy-statement\"></a>策略语句  \r   \r ```xml  \r <ip-filter action=\"allow | forbid\">  \r     <address>address</address>  \r     <address-range from=\"address\" to=\"address\" />  \r </ip-filter>  \r ```  \r   \r ### <a name=\"example\"></a>示例  \r   \r ```xml  \r <ip-filter action=\"allow | forbid\">  \r     <address>address</address>  \r     <address-range from=\"address\" to=\"address\" />  \r </ip-filter>  \r ```  \r   \r ### <a name=\"elements\"></a>元素  \r   \r |名称|说明|必选|  \r |----------|-----------------|--------------|  \r |ip-filter|根元素。|是|  \r |address|指定要对其进行筛选的单个 IP 地址。|至少一个 `address` 或 `address-range` 元素是必需的。|  \r |address-range from=\"address\" to=\"address\"|指定要对其进行筛选的 IP 地址范围。|至少一个 `address` 或 `address-range` 元素是必需的。|  \r   \r ### <a name=\"attributes\"></a>属性  \r   \r |名称|说明|必选|默认|  \r |----------|-----------------|--------------|-------------|  \r |address-range from=\"address\" to=\"address\"|允许或拒绝其访问的某个 IP 地址范围。|使用 `address-range` 元素时必需。|不适用|  \r |ip-filter action=\"allow &#124; forbid\"|指定是否应允许指定的 IP 地址和范围执行调用。|是|不适用|  \r   \r ### <a name=\"usage\"></a>使用情况  \r  此策略可在以下策略[节](./api-management-howto-policies.md#sections)和[范围](./api-management-howto-policies.md#scopes)中使用。  \r   \r -   **策略节：**入站  \r   \r -   **策略范围：**全局、产品、API、操作  \r   \r ##  <a name=\"SetUsageQuota\"></a>按订阅设置使用量配额  \r  `quota` 策略允许根据订阅强制实施可续订或有生存期的调用量和/或带宽配额。  \r   \r > [!IMPORTANT]\r >  每个策略文档只能使用此策略一次。  \r >   \r >  [策略表达式](./api-management-policy-expressions.md)不能用于此策略的任何策略属性。  \r   \r ### <a name=\"policy-statement\"></a>策略语句  \r   \r ```xml  \r <quota calls=\"number\" bandwidth=\"kilobytes\" renewal-period=\"seconds\">  \r     <api name=\"name\" calls=\"number\" bandwidth=\"kilobytes\">  \r         <operation name=\"name\" calls=\"number\" bandwidth=\"kilobytes\" />  \r     </api>  \r </quota>  \r ```  \r   \r ### <a name=\"example\"></a>示例  \r   \r ```xml  \r <policies>  \r     <inbound>  \r         <base />  \r         <quota calls=\"10000\" bandwidth=\"40000\" renewal-period=\"3600\" />  \r     </inbound>  \r     <outbound>  \r         <base />  \r     </outbound>  \r </policies>  \r ```  \r   \r ### <a name=\"elements\"></a>元素  \r   \r |名称|说明|必选|  \r |----------|-----------------|--------------|  \r |quota|根元素。|是|  \r |api|添加一个或多个此类元素，对产品中的 API 设置配额。 产品和 API 的配额是各自独立应用的。|否|  \r |operation|添加一个或多个此类元素，对 API 中的操作设置配额。 产品、API 和操作的配额是各自独立应用的。|否|  \r   \r ### <a name=\"attributes\"></a>属性  \r   \r |名称|说明|必选|默认|  \r |----------|-----------------|--------------|-------------|  \r |name|要向其应用配额的 API 或操作的名称。|是|不适用|  \r |bandwidth|在 `renewal-period` 所指定的时间间隔内允许的最大总字节数（千字节）。|必须指定 `calls` 和/或 `bandwidth`。|不适用|  \r |calls|在 `renewal-period` 所指定的时间间隔内允许的最大总调用数。|必须指定 `calls` 和/或 `bandwidth`。|不适用|  \r |renewal-period|在重置配额之前等待的时间长度，以秒为单位。|是|不适用|  \r   \r ### <a name=\"usage\"></a>使用情况  \r  此策略可在以下策略[节](./api-management-howto-policies.md#sections)和[范围](./api-management-howto-policies.md#scopes)中使用。  \r   \r -   **策略节：**入站  \r   \r -   **策略范围：**产品  \r   \r ##  <a name=\"SetUsageQuotaByKey\"></a>按密钥设置使用量配额  \r  `quota-by-key` 策略允许根据密钥强制实施可续订或有生存期的调用量和/或带宽配额。 密钥的值可以是任意字符串，通常使用策略表达式来提供密钥。 可以添加可选增量条件，指定在判断请求数是否达到配额时应计入哪些请求。  \r   \r  有关此策略的详细信息和示例，请参阅[使用 Azure API 管理进行高级请求限制](./api-management-sample-flexible-throttling.md)。  \r   \r > [!IMPORTANT]\r >  每个策略文档只能使用此策略一次。  \r >   \r >  [策略表达式](./api-management-policy-expressions.md)不能用于此策略的任何策略属性。  \r   \r ### <a name=\"policy-statement\"></a>策略语句  \r   \r ```xml  \r <quota-by-key calls=\"number\"   \r               bandwidth=\"kilobytes\"   \r               renewal-period=\"seconds\"  \r               increment-condition=\"condition\"   \r               counter-key=\"key value\" />  \r   \r ```  \r   \r ### <a name=\"example\"></a>示例  \r  在下面的示例中，配额与调用方 IP 地址相匹配。  \r   \r ```xml  \r <policies>  \r     <inbound>  \r         <base />  \r         <quota-by-key calls=\"10000\" bandwidth=\"40000\" renewal-period=\"3600\"  \r                       increment-condition=\"@(context.Response.StatusCode >= 200 && context.Response.StatusCode < 400)\"  \r                       counter-key=\"@(context.Request.IpAddress)\" />  \r     </inbound>  \r     <outbound>  \r         <base />  \r     </outbound>  \r </policies>  \r ```  \r   \r ### <a name=\"elements\"></a>元素  \r   \r |名称|说明|必选|  \r |----------|-----------------|--------------|  \r |quota|根元素。|是|  \r   \r ### <a name=\"attributes\"></a>属性  \r   \r |名称|说明|必选|默认|  \r |----------|-----------------|--------------|-------------|  \r |bandwidth|在 `renewal-period` 所指定的时间间隔内允许的最大总字节数（千字节）。|必须指定 `calls` 和/或 `bandwidth`。|不适用|  \r |calls|在 `renewal-period` 所指定的时间间隔内允许的最大总调用数。|必须指定 `calls` 和/或 `bandwidth`。|不适用|  \r |counter-key|用于配额策略的密钥。|是|不适用|  \r |increment-condition|一个布尔表达式，指定在判断请求数是否达到配额时是否应计入该请求 (`true`)|否|不适用|  \r |renewal-period|在重置配额之前等待的时间长度，以秒为单位。|是|不适用|  \r   \r ### <a name=\"usage\"></a>使用情况  \r  此策略可在以下策略[节](./api-management-howto-policies.md#sections)和[范围](./api-management-howto-policies.md#scopes)中使用。  \r   \r -   **策略节：**入站  \r   \r -   **策略范围：**全局、产品、API、操作  \r   \r ##  <a name=\"ValidateJWT\"></a>验证 JWT  \r  `validate-jwt` 策略强制从指定 HTTP 标头或指定查询参数提取的 JWT 必须存在且有效。  \r   \r > [!IMPORTANT]\r >  `validate-jwt` 策略要求 `exp` 注册的声明包括在 JWT 令牌中，除非 `require-expiration-time` 属性已指定并设置为 `false`。  \r > `validate-jwt` 策略支持 HS256 和 RS256 签名算法。 对于 HS256，必须采用内联方式在策略中以 base64 编码形式提供密钥。 对于 RS256，必须通过 Open ID 配置终结点提供密钥。  \r   \r ### <a name=\"policy-statement\"></a>策略语句  \r   \r ```xml  \r <validate-jwt   \r     header-name=\"name of http header containing the token (use query-parameter-name attribute if the token is passed in the URL)\"   \r     failed-validation-httpcode=\"http status code to return on failure\"   \r     failed-validation-error-message=\"error message to return on failure\"   \r     require-expiration-time=\"true|false\"\r     require-scheme=\"scheme\"\r     require-signed-tokens=\"true|false\"   \r     clock-skew=\"allowed clock skew in seconds\">  \r   <issuer-signing-keys>  \r     <key>base64 encoded signing key</key>  \r     <!-- if there are multiple keys, then add additional key elements -->  \r   </issuer-signing-keys>  \r   <audiences>  \r     <audience>audience string</audience>  \r     <!-- if there are multiple possible audiences, then add additional audience elements -->  \r   </audiences>  \r   <issuers>  \r     <issuer>issuer string</issuer>  \r     <!-- if there are multiple possible issuers, then add additional issuer elements -->  \r   </issuers>  \r   <required-claims>  \r     <claim name=\"name of the claim as it appears in the token\" match=\"all|any\">  \r       <value>claim value as it is expected to appear in the token</value>  \r       <!-- if there is more than one allowed values, then add additional value elements -->  \r     </claim>  \r     <!-- if there are multiple possible allowed values, then add additional value elements -->  \r   </required-claims>  \r   <openid-config url=\"full URL of the configuration endpoint, e.g. https://login.constoso.com/openid-configuration\" />  \r   <zumo-master-key id=\"key identifier\">key value</zumo-master-key>  \r </validate-jwt>  \r   \r ```  \r   \r ### <a name=\"examples\"></a>示例  \r   \r #### <a name=\"azure-mobile-services-token-validation\"></a>Azure 移动服务令牌验证  \r   \r ```xml  \r <validate-jwt header-name=\"x-zumo-auth\" failed-validation-httpcode=\"401\" failed-validation-error-message=\"Unauthorized. Supplied access token is invalid.\">  \r     <issuers>  \r         <issuer>urn:microsoft:windows-azure:zumo</issuer>  \r     </issuers>  \r     <audiences>  \r         <audience>Facebook</audience>  \r     </audiences>  \r     <issuer-signing-keys>  \r         <zumo-master-key id=\"0\">insert key here</zumo-master-key>  \r     </issuer-signing-keys>  \r </validate-jwt>  \r ```  \r   \r #### <a name=\"azure-active-directory-token-validation\"></a>Azure Active Directory 令牌验证  \r   \r ```xml  \r <validate-jwt header-name=\"Authorization\" failed-validation-httpcode=\"401\" failed-validation-error-message=\"Unauthorized. Access token is missing or invalid.\">  \r     <openid-config url=\"https://login.microsoftonline.com/contoso.onmicrosoft.com/.well-known/openid-configuration\" />  \r     <audiences>\r         <audience>25eef6e4-c905-4a07-8eb4-0d08d5df8b3f</audience>\r     </audiences>\r     <required-claims>  \r         <claim name=\"id\" match=\"all\">  \r             <value>insert claim here</value>  \r         </claim>  \r     </required-claims>  \r </validate-jwt>  \r ```  \r \r   \r #### <a name=\"azure-active-directory-b2c-token-validation\"></a>Azure Active Directory B2C 令牌验证  \r   \r ```xml  \r <validate-jwt header-name=\"Authorization\" failed-validation-httpcode=\"401\" failed-validation-error-message=\"Unauthorized. Access token is missing or invalid.\">  \r     <openid-config url=\"https://login.microsoftonline.com/tfp/contoso.onmicrosoft.com/b2c_1_signin/v2.0/.well-known/openid-configuration\" />\r     <audiences>\r         <audience>d313c4e4-de5f-4197-9470-e509a2f0b806</audience>\r     </audiences>\r     <required-claims>  \r         <claim name=\"id\" match=\"all\">  \r             <value>insert claim here</value>  \r         </claim>  \r     </required-claims>  \r </validate-jwt>  \r ```  \r   \r #### <a name=\"authorize-access-to-operations-based-on-token-claims\"></a>根据令牌声明授予操作访问权限  \r  以下示例演示了如何使用[验证 JWT](./api-management-access-restriction-policies.md#ValidateJWT) 策略根据令牌声明预先授予操作访问权限。 \r   \r ```xml  \r <!-- Copy the following snippet into the inbound section at the api (or higher) level to pre-authorize access to operations based on token claims -->  \r <set-variable name=\"signingKey\" value=\"insert signing key here\" />  \r <choose>  \r   <when condition=\"@(context.Request.Method.Equals(\"patch\",StringComparison.OrdinalIgnoreCase))\">  \r     <validate-jwt header-name=\"Authorization\">  \r       <issuer-signing-keys>  \r         <key>@((string)context.Variables[\"signingKey\"])</key>  \r       </issuer-signing-keys>  \r       <required-claims>  \r         <claim name=\"edit\">  \r           <value>true</value>  \r         </claim>  \r       </required-claims>  \r     </validate-jwt>  \r   </when>  \r   <when condition=\"@(new [] {\"post\", \"put\"}.Contains(context.Request.Method,StringComparer.OrdinalIgnoreCase))\">  \r     <validate-jwt header-name=\"Authorization\">  \r       <issuer-signing-keys>  \r         <key>@((string)context.Variables[\"signingKey\"])</key>  \r       </issuer-signing-keys>  \r       <required-claims>  \r         <claim name=\"create\">  \r           <value>true</value>  \r         </claim>  \r       </required-claims>  \r     </validate-jwt>  \r   </when>  \r   <otherwise>  \r     <validate-jwt header-name=\"Authorization\">  \r       <issuer-signing-keys>  \r         <key>@((string)context.Variables[\"signingKey\"])</key>  \r       </issuer-signing-keys>  \r     </validate-jwt>  \r   </otherwise>  \r </choose>  \r ```  \r   \r ### <a name=\"elements\"></a>元素  \r   \r |元素|说明|必选|  \r |-------------|-----------------|--------------|  \r |validate-jwt|根元素。|是|  \r |audiences|包含一系列可接受且可存在于令牌上的受众声明。 如果存在多个受众值，则会对每个值进行尝试，直到所有值都试完（这种情况表明验证失败），或者直到有一个值成功。 必须指定至少一个受众。|否|  \r |issuer-signing-keys|一系列 Base64 编码的安全密钥，用于验证签名的令牌。 如果存在多个安全密钥，则会对每个密钥进行尝试，直到所有密钥都试完（这种情况表明验证失败），或者直到有一个密钥成功（对令牌滚动更新十分有用）。 密钥元素有一个可选的 `id` 属性，用于与 `kid` 声明进行比较。|否|  \r |issuers|一系列可接受的、已颁发了令牌的主体。 如果存在多个颁发者值，则会对每个值进行尝试，直到所有值都试完（这种情况表明验证失败），或者直到有一个值成功。|否|  \r |openid-config|一个元素，用于指定兼容的 Open ID 配置终结点，以便从该终结点获取签名密钥和颁发者。|否|  \r |required-claims|包含一系列应存在于令牌上的声明，否则令牌会被视为无效。 将 `match` 属性设置为 `all` 时，策略中的每个声明值都必须存在于令牌中才会使验证成功。 将 `match` 属性设置为 `any` 时，至少一个声明必须存在于令牌中才会使验证成功。|否|  \r |zumo-master-key|Azure 移动服务颁发的令牌的主密钥|否|  \r   \r ### <a name=\"attributes\"></a>属性  \r   \r |名称|说明|必选|默认|  \r |----------|-----------------|--------------|-------------|  \r |clock-skew|时间跨度。 在令牌的到期声明存在于令牌中且早于当前日期/时间的情况下，提供某个较小的余量。|否|0 秒|  \r |failed-validation-error-message|JWT 未通过验证时会在 HTTP 响应正文中返回的错误消息。 此消息必须对任何特殊字符正确地进行转义。|否|默认错误消息取决于验证问题，例如“JWT 不存在”。|  \r |failed-validation-httpcode|JWT 未通过验证时会返回的 HTTP 状态代码。|否|401|  \r |header-name|包含令牌的 HTTP 标头的名称。|必须指定 `header-name` 或 `query-paremeter-name`，但不能将二者都指定。|不适用|  \r |id|使用 `key` 元素的 `id` 属性可以指定一个字符串，该字符串将与令牌中的 `kid` 声明（如果存在）进行比较，以便找出进行签名验证时需要使用的适当密钥。|否|不适用|  \r |match|`claim` 元素的 `match` 属性用于指定：是否策略中的每个声明值都必须存在于令牌中才会使验证成功。 可能的值包括：<br /><br /> -                          `all` - 策略中的每个声明值都必须存在于令牌中才会使验证成功。<br /><br /> -                          `any` - 至少一个声明值必须存在于令牌中才会使验证成功。|否|all|  \r |query-paremeter-name|包含令牌的查询参数的名称。|必须指定 `header-name` 或 `query-paremeter-name`，但不能将二者都指定。|不适用|  \r |require-expiration-time|布尔值。 指定令牌中是否需要到期声明。|否|true|\r |require-scheme|令牌方案的名称，例如“Bearer”。 设置了此属性时，策略将确保 Authorization 标头值中存在指定的方案。|否|不适用|\r |require-signed-tokens|布尔值。 指定令牌是否需要签名。|否|true|  \r |url|Open ID 配置终结点 URL，从中可以获取 Open ID 配置元数据。 对于 Azure Active Directory，请使用以下 URL：`https://login.microsoftonline.com/{tenant-name}/.well-known/openid-configuration`，将其中的 {tenant-name} 替换为你的目录租户名称，例如 `contoso.onmicrosoft.com`。|是|不适用|  \r   \r ### <a name=\"usage\"></a>使用情况  \r  此策略可在以下策略[节](./api-management-howto-policies.md#sections)和[范围](./api-management-howto-policies.md#scopes)中使用。  \r   \r -   **策略节：**入站  \r   \r -   **策略范围：**全局、产品、API、操作  \r   \r ## <a name=\"next-steps\"></a>后续步骤\r 有关如何使用策略的详细信息，请参阅 [API 管理中的策略](./api-management-howto-policies.md)。  \r "}