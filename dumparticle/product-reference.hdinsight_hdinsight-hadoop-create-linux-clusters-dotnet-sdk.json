{"Title":"使用 .NET 创建 Hadoop 群集 - Azure HDInsight","Description":"了解如何使用 HDInsight .NET SDK 在 Linux 中为 HDInsight 创建 Hadoop、HBase、Storm 或 Spark 群集。","Content":"# <a name=\"create-linux-based-clusters-in-hdinsight-using-the-net-sdk\"></a>使用 .NET SDK 在 HDInsight 中创建基于 Linux 的群集\r \r [!INCLUDE [selector](../../includes/hdinsight-create-linux-cluster-selector.md)]\r \r \r 了解如何使用 .NET SDK 在 Azure HDInsight 群集中创建 Hadoop 群集。\r \r > [!IMPORTANT]\r > 本文中的步骤创建了包含一个工作节点的群集。 如果计划使用 32 个以上的工作节点（在创建群集时或是在创建之后通过扩展群集进行），则需要选择至少具有 8 个核心和 14GB RAM 的头节点大小。\r >\r > 有关节点大小和相关费用的详细信息，请参阅 [HDInsight 定价](https://www.azure.cn/pricing/details/hdinsight/)。\r \r ## <a name=\"prerequisites\"></a>先决条件\r \r [!INCLUDE [delete-cluster-warning](../../includes/hdinsight-delete-cluster-warning.md)]\r \r * **一个 Azure 订阅**。 请参阅[获取 Azure 试用版](https://www.azure.cn/pricing/1rmb-trial/)。\r * **一个 Azure 存储帐户**。 请参阅[创建存储帐户](../storage/common/storage-create-storage-account.md#create-a-storage-account)。\r * **Visual Studio 2013、Visual Studio 2015 或 Visual Studio 2017**。\r \r ## <a name=\"create-clusters\"></a>创建群集\r \r 1. 打开 Visual Studio 2017。\r 2. 创建新的 Visual C# 控制台应用程序。\r 3. 在“工具”菜单中，单击“Nuget 程序包管理器”，并单击“程序包管理器控制台”。\r 4. 在控制台中运行下列命令以安装程序包：\r \r     ```powershell\r     Install-Package Microsoft.Rest.ClientRuntime.Azure.Authentication -Pre\r     Install-Package Microsoft.Azure.Management.ResourceManager -Pre\r     Install-Package Microsoft.Azure.Management.HDInsight\r     ```\r \r     这些命令将 .NET 库以及对这些库的引用添加到当前 Visual Studio 项目中。\r 5. 在解决方案资源管理器中双击“Program.cs”将它打开，粘贴以下代码，并提供变量的值：\r \r     ```csharp\r     using System;\r     using Microsoft.Rest;\r     using Microsoft.Rest.Azure.Authentication;\r     using Microsoft.Azure;\r     using Microsoft.Azure.Management.HDInsight;\r     using Microsoft.Azure.Management.HDInsight.Models;\r     using Microsoft.Azure.Management.ResourceManager;\r     using Microsoft.IdentityModel.Clients.ActiveDirectory;\r \r     namespace CreateHDInsightCluster\r     {\r         class Program\r         {\r             private static HDInsightManagementClient _hdiManagementClient;\r \r             private const string SubscriptionId = \"<Your Azure Subscription ID>\";\r             // Replace with your AAD tenant ID if necessary\r             private const string TenantId = UserTokenProvider.CommonTenantId; \r             // This is the GUID for the PowerShell client. Used for interactive logins in this example.\r             private const string ClientId = \"1950a258-227b-4e31-a9cf-717495945fc2\";\r             private static Uri BaseUri = new Uri(\"https://management.chinacloudapi.cn/\");\r \r             private const string ExistingResourceGroupName = \"<Enter Resource Group Name>\";\r             private const string ExistingStorageName = \"<Enter Default Storage Account Name>.blob.core.chinacloudapi.cn\";\r             private const string ExistingStorageKey = \"<Enter Default Storage Account Key>\";\r             private const string ExistingBlobContainer = \"<Enter Default Bob Container Name>\";\r \r             private const string NewClusterName = \"<Enter HDInsight Cluster Name>\";\r             private const int NewClusterNumNodes = 2;\r             private const string NewClusterLocation = \"CHINA EAST\"; // Must be the same as the default Storage account\r             private const OSType NewClusterOSType = OSType.Linux;\r             private const string NewClusterType = \"Hadoop\";\r             private const string NewClusterVersion = \"3.6\";\r             private const string NewClusterUsername = \"admin\";\r             private const string NewClusterPassword = \"<Enter HTTP User Password>\";\r             private const string NewClusterSshUserName = \"sshuser\";\r \r             // You can use eitehr password or public key. See https://docs.azure.cn/hdinsight/hdinsight-hadoop-linux-use-ssh-unix\r             private const string NewClusterSshPassword = \"<Enter SSH User Password>\";\r             private const string NewClusterSshPublicKey = @\"---- BEGIN SSH2 PUBLIC KEY ----\r                 Comment: \"\"rsa-key-20150731\"\"\r                 AAAAB3NzaC1yc2EAAAABJQAAAQEA4QiCRLqT7fnmUA5OhYWZNlZo6lLaY1c+IRsp\r                 gmPCsJVGQLu6O1wqcxRqiKk7keYq8bP5s30v6bIljsLZYTnyReNUa5LtFw7eauGr\r                 yVt3Pve6ejfWELhbVpi0iq8uJNFA9VvRkz8IP1JmjC5jsdnJhzQZtgkIrdn3w0e6\r                 WVfu15kKyY8YAiynVbdV51EB0SZaSLdMZkZQ81xi4DDtCZD7qvdtWEFwLa+EHdkd\r                 pzO36Mtev5XvseLQqzXzZ6aVBdlXoppGHXkoGHAMNOtEWRXpAUtEccjpATsaZhQR\r                 zZdZlzHduhM10ofS4YOYBADt9JohporbQVHM5w6qUhIgyiPo7w==\r                 ---- END SSH2 PUBLIC KEY ----\"; //replace the public key with your own\r \r             static void Main(string[] args)\r             {\r                 System.Console.WriteLine(\"Creating a cluster.  The process takes 10 to 20 minutes ...\");\r \r                 // Authenticate and get a token\r                 var authToken = GetTokenCloudCredentials(TenantId, ClientId, SubscriptionId);\r                 // Flag subscription for HDInsight, if it isn't already.\r                 EnableHDInsight(authToken);\r                 // Get an HDInsight management client\r                 _hdiManagementClient = new HDInsightManagementClient(authToken, BaseUri);\r \r                 // Set parameters for the new cluster\r                 var parameters = new ClusterCreateParameters\r                 {\r                     ClusterSizeInNodes = NewClusterNumNodes,\r                     UserName = NewClusterUsername,\r                     ClusterType = NewClusterType,\r                     OSType = NewClusterOSType,\r                     Version = NewClusterVersion,\r \r                     // Use an Azure storage account as the default storage\r                     DefaultStorageInfo = new AzureStorageInfo(ExistingStorageName, ExistingStorageKey, ExistingBlobContainer),\r \r                     // Is the cluster type RServer? If so, you can set the EdgeNodeSize.\r                     // Otherwise, the default VM size is used.\r                     //EdgeNodeSize = \"Standard_D12_v2\",\r \r                     Password = NewClusterPassword,\r                     Location = NewClusterLocation,\r \r                     SshUserName = NewClusterSshUserName,\r                     SshPassword = NewClusterSshPassword,\r                     //SshPublicKey = NewClusterSshPublicKey\r                 };\r \r                 // Is the cluster type RServer? If so, add the RStudio configuration option.\r                 /*\r                 parameters.Configurations.Add(\r                     \"rserver\",\r                     new Dictionary<string, string>()\r                     {\r                         { \"rstudio\", \"true\" }\r                     }\r                 );\r                 */\r \r                 // Create the cluster\r                 _hdiManagementClient.Clusters.Create(ExistingResourceGroupName, NewClusterName, parameters);\r \r                 System.Console.WriteLine(\"The cluster has been created. Press ENTER to continue ...\");\r                 System.Console.ReadLine();\r             }\r \r             /// <summary>\r             /// Authenticate to an Azure subscription and retrieve an authentication token\r             /// </summary>\r             static TokenCloudCredentials GetTokenCloudCredentials(string TenantId, string ClientId, string SubscriptionId)\r             {\r                 var authContext = new AuthenticationContext(\"https://login.chinacloudapi.cn/\" + TenantId);\r                 var tokenAuthResult = authContext.AcquireToken(\"https://management.core.chinacloudapi.cn/\", \r                     ClientId, \r                     new Uri(\"urn:ietf:wg:oauth:2.0:oob\"), \r                     PromptBehavior.Always, \r                     UserIdentifier.AnyUser);\r                 return new TokenCloudCredentials(SubscriptionId, tokenAuthResult.AccessToken);\r             }\r             /// <summary>\r             /// Marks your subscription as one that can use HDInsight, if it has not already been marked as such.\r             /// </summary>\r             /// <remarks>This is essentially a one-time action; if you have already done something with HDInsight\r             /// on your subscription, then this isn't needed at all and will do nothing.</remarks>\r             /// <param name=\"authToken\">An authentication token for your Azure subscription</param>\r             static void EnableHDInsight(TokenCloudCredentials authToken)\r             {\r                 // Create a client for the Resource manager and set the subscription ID\r                 var resourceManagementClient = new ResourceManagementClient(BaseUri, new TokenCredentials(authToken.Token));\r                 resourceManagementClient.SubscriptionId = SubscriptionId;\r                 // Register the HDInsight provider\r                 var rpResult = resourceManagementClient.Providers.Register(\"Microsoft.HDInsight\");\r             }\r         }\r     }\r     ```\r \r 6. 替换类成员值。\r 7. 按 **F5** 运行应用程序。 控制台窗口应打开并显示应用程序的状态。 系统会提示输入 Azure 帐户凭据。 创建一个 HDInsight 群集可能需要几分钟时间，通常为 15 分钟。\r \r ## <a name=\"use-bootstrap\"></a>使用 bootstrap\r \r 使用 bootstrap，可以在群集创建过程中配置添加设置。  有关详细信息，请参阅[使用 Bootstrap 自定义 HDInsight 群集](hdinsight-hadoop-customize-cluster-bootstrap.md)。\r \r 修改[创建群集](#create-clusters)中的示例以配置 Hive 设置：\r \r ```csharp\r static void Main(string[] args)\r {\r     System.Console.WriteLine(\"Creating a cluster.  The process takes 10 to 20 minutes ...\");\r \r     // Authenticate and get a token\r     var authToken = GetTokenCloudCredentials(TenantId, ClientId, SubscriptionId);\r     // Flag subscription for HDInsight, if it isn't already.\r     EnableHDInsight(authToken);\r     // Get an HDInsight management client\r     _hdiManagementClient = new HDInsightManagementClient(authToken, BaseUri);\r \r     // Set parameters for the new cluster\r     var extendedParameters = new ClusterCreateParametersExtended\r     {\r         Location = NewClusterLocation,\r         Properties = new ClusterCreateProperties\r         {\r             ClusterDefinition = new ClusterDefinition\r             {\r                 ClusterType = NewClusterType.ToString()\r             },\r             ClusterVersion = NewClusterVersion,\r             OperatingSystemType = NewClusterOSType\r         }\r     };\r \r     var coreConfigs = new Dictionary<string, string>\r     {\r         {\"fs.defaultFS\", string.Format(\"wasb://{0}@{1}\", ExistingBlobContainer, ExistingStorageName)},\r         {\r             string.Format(\"fs.azure.account.key.{0}\", ExistingStorageName),\r             ExistingStorageKey\r         }\r     };\r \r     // bootstrap\r     var hiveConfigs = new Dictionary<string, string>\r     {\r         { \"hive.metastore.client.socket.timeout\", \"90\"}\r     };\r \r     var gatewayConfigs = new Dictionary<string, string>\r     {\r         {\"restAuthCredential.isEnabled\", \"true\"},\r         {\"restAuthCredential.username\", NewClusterUsername},\r         {\"restAuthCredential.password\", NewClusterPassword}\r     };\r \r     var configurations = new Dictionary<string, Dictionary<string, string>>\r     {\r         {\"core-site\", coreConfigs},\r         {\"gateway\", gatewayConfigs},\r         {\"hive-site\", hiveConfigs}\r     };\r \r     var serializedConfig = JsonConvert.SerializeObject(configurations);\r     extendedParameters.Properties.ClusterDefinition.Configurations = serializedConfig;\r \r     var sshPublicKeys = new List<SshPublicKey>();\r     var sshPublicKey = new SshPublicKey\r     {\r         CertificateData =\r             string.Format(\"ssh-rsa {0}\", NewClusterSshPublicKey)\r     };\r     sshPublicKeys.Add(sshPublicKey);\r \r     var headNode = new Role\r     {\r         Name = \"headnode\",\r         TargetInstanceCount = 2,\r         HardwareProfile = new HardwareProfile\r         {\r             VmSize = \"Large\"\r         },\r         OsProfile = new OsProfile\r         {\r             LinuxOperatingSystemProfile = new LinuxOperatingSystemProfile\r             {\r                 UserName = NewClusterSshUserName,\r                 Password = NewClusterSshPassword //,\r                 // When use a SSH pulbic key, make sure to remove comments, headers and trailers, and concatenate the key into one line \r                 //SshProfile = new SshProfile\r                 //{\r                 //    SshPublicKeys = sshPublicKeys\r                 //}\r             }\r         }\r     };\r \r     var workerNode = new Role\r     {\r         Name = \"workernode\",\r         TargetInstanceCount = NewClusterNumNodes,\r         HardwareProfile = new HardwareProfile\r         {\r             VmSize = \"Large\"\r         },\r         OsProfile = new OsProfile\r         {\r             LinuxOperatingSystemProfile = new LinuxOperatingSystemProfile\r             {\r                 UserName = NewClusterSshUserName,\r                 Password = NewClusterSshPassword //,\r                 //SshProfile = new SshProfile\r                 //{\r                 //    SshPublicKeys = sshPublicKeys\r                 //}\r             }\r         }\r     };\r \r     extendedParameters.Properties.ComputeProfile = new ComputeProfile();\r     extendedParameters.Properties.ComputeProfile.Roles.Add(headNode);\r     extendedParameters.Properties.ComputeProfile.Roles.Add(workerNode);\r \r     _hdiManagementClient.Clusters.Create(ExistingResourceGroupName, NewClusterName, extendedParameters);\r \r     System.Console.WriteLine(\"The cluster has been created. Press ENTER to continue ...\");\r     System.Console.ReadLine();\r }\r ```\r \r ## <a name=\"use-script-action\"></a>使用脚本操作\r \r 使用脚本操作，可以在群集创建过程中配置其他设置。  有关详细信息，请参阅[使用脚本操作自定义基于 Linux 的 HDInsight 群集](hdinsight-hadoop-customize-cluster-linux.md)。\r \r 修改 [创建群集](#create-clusters) 中的示例，以便调用脚本操作来安装 R：\r \r ```csharp\r static void Main(string[] args)\r {\r     System.Console.WriteLine(\"Creating a cluster.  The process takes 10 to 20 minutes ...\");\r \r     // Authenticate and get a token\r     var authToken = GetTokenCloudCredentials(TenantId, ClientId, SubscriptionId);\r     // Flag subscription for HDInsight, if it isn't already.\r     EnableHDInsight(authToken);\r     // Get an HDInsight management client\r     _hdiManagementClient = new HDInsightManagementClient(authToken, BaseUri);\r \r     // Set parameters for the new cluster\r     var parameters = new ClusterCreateParameters\r     {\r         ClusterSizeInNodes = NewClusterNumNodes,\r         Location = NewClusterLocation,\r         ClusterType = NewClusterType,\r         OSType = NewClusterOSType,\r         Version = NewClusterVersion,\r \r         DefaultStorageInfo = new AzureStorageInfo(ExistingStorageName, ExistingStorageKey, ExistingBlobContainer),\r \r         UserName = NewClusterUsername,\r         Password = NewClusterPassword,\r         SshUserName = NewClusterSshUserName,\r         SshPublicKey = NewClusterSshPublicKey\r     };\r \r     ScriptAction rScriptAction = new ScriptAction(\"Install R\",\r         new Uri(\"https://hdiconfigactions.blob.core.windows.net/linuxrconfigactionv01/r-installer-v01.sh\"), \"\");\r \r     parameters.ScriptActions.Add(ClusterNodeType.HeadNode,new System.Collections.Generic.List<ScriptAction> { rScriptAction});\r     parameters.ScriptActions.Add(ClusterNodeType.WorkerNode, new System.Collections.Generic.List<ScriptAction> { rScriptAction });\r \r     _hdiManagementClient.Clusters.Create(ExistingResourceGroupName, NewClusterName, parameters);\r \r     System.Console.WriteLine(\"The cluster has been created. Press ENTER to continue ...\");\r     System.Console.ReadLine();\r }\r ```\r \r ## <a name=\"troubleshoot\"></a>故障排除\r \r 如果在创建 HDInsight 群集时遇到问题，请参阅[访问控制要求](hdinsight-administer-use-portal-linux.md#create-clusters)。\r \r ## <a name=\"next-steps\"></a>后续步骤\r 成功创建 HDInsight 群集后，请参考以下主题来了解如何使用群集。 \r \r ### <a name=\"hadoop-clusters\"></a>Hadoop 群集\r * [将 Hive 与 HDInsight 配合使用](hadoop/hdinsight-use-hive.md)\r * [将 Pig 与 HDInsight 配合使用](hadoop/hdinsight-use-pig.md)\r * [将 MapReduce 与 HDInsight 配合使用](hadoop/hdinsight-use-mapreduce.md)\r \r ### <a name=\"hbase-clusters\"></a>HBase 群集\r * [HBase on HDInsight 入门](hbase/apache-hbase-tutorial-get-started-linux.md)\r * [为 HBase on HDInsight 开发 Java 应用程序](hbase/apache-hbase-build-java-maven-linux.md)\r \r ### <a name=\"storm-clusters\"></a>Storm 群集\r * [为 Storm on HDInsight 开发 Java 拓扑](storm/apache-storm-develop-java-topology.md)\r * [在 Storm on HDInsight 中使用 Python 组件](storm/apache-storm-develop-python-topology.md)\r * [使用 Storm on HDInsight 部署和监视拓扑](storm/apache-storm-deploy-monitor-topology-linux.md)\r \r ### <a name=\"spark-clusters\"></a>Spark 群集\r * [使用 Scala 创建独立的应用程序](spark/apache-spark-create-standalone-application.md)\r * [使用 Livy 在 Spark 群集中远程运行作业](spark/apache-spark-livy-rest-interface.md)\r * [Spark 和 BI：使用 HDInsight 中的 Spark 和 BI 工具执行交互式数据分析](spark/apache-spark-use-bi-tools.md)\r * [Spark 和机器学习：使用 HDInsight 中的 Spark 预测食品检查结果](spark/apache-spark-machine-learning-mllib-ipython.md)\r * [Spark 流式处理：使用 HDInsight 中的 Spark 生成实时流式处理应用程序](spark/apache-spark-eventhub-streaming.md)\r \r ### <a name=\"run-jobs\"></a>运行作业\r * [使用.NET SDK 在 HDInsight 中运行 Hive 作业](hadoop/apache-hadoop-use-hive-dotnet-sdk.md)\r * [使用.NET SDK 在 HDInsight 中运行 Pig 作业](hadoop/apache-hadoop-use-pig-dotnet-sdk.md)\r * [使用.NET SDK 在 HDInsight 中运行 Sqoop 作业](hadoop/apache-hadoop-use-sqoop-dotnet-sdk.md)\r * [在 HDInsight 中运行 Oozie 作业](hdinsight-use-oozie.md)\r <!--Update_Description: update wording and link references-->\r "}