{"Title":"概述 SQL 数据仓库中的表","Description":"Azure SQL 数据仓库表入门。","Content":"# <a name=\"overview-of-tables-in-sql-data-warehouse\"></a>概述 SQL 数据仓库中的表\r \r > [!div class=\"op_single_selector\"]\r > * [概述][Overview]\r > * [数据类型][Data Types]\r > * [分布][Distribute]\r > * [索引][Index]\r > * [分区][Partition]\r > * [统计信息][Statistics]\r > * [临时][Temporary]\r > \r > \r \r 在 Azure SQL 数据仓库中创建表的入门操作很简单。  基本的 [CREATE TABLE][CREATE TABLE] 语法与常用语法无异，这种语法你在使用其他数据库时很可能已经很熟悉了。  创建表时，只需为表和列命名，并为每个列定义数据类型即可。  如果已经在其他数据库中创建过表，则此操作对你来说应该很熟悉。\r \r ```sql  \r CREATE TABLE Customers (FirstName VARCHAR(25), LastName VARCHAR(25))\r  ``` \r \r 以上示例创建名为 Customers 的表，该表包含两个列：FirstName 和 LastName。  每个列都定义了数据类型 VARCHAR(25)，其数据限制为 25 个字符。  表的这些基本属性以及其他属性大多与其他数据库相同。  每个列都定义了数据类型，确保数据的完整性。  可以通过添加索引来减少 I/O，从而改进性能。  需要修改数据时，可通过添加分区来改进性能。\r \r [重命名][RENAME] SQL 数据仓库表的操作如下所示：\r \r ```sql  \r RENAME OBJECT Customer TO CustomerOrig; \r  ```\r \r ## <a name=\"distributed-tables\"></a>分布式表\r 由 SQL 数据仓库之类的分布式系统引入的新的基本属性是 **分布列**。  分布列的含义正如其名。  分布列是指决定后台数据如何分布或划分的列。  如果在创建表时未指定分布列，该表的数据会自动根据 **轮循机制**进行分布。  虽然在某些情况下轮循机制表可能已经足够，但是定义分布列可以大大减少查询期间的数据移动，从而优化性能。  在表中有少量数据的情况下，选择创建具有“复制”分布类型的表会将数据复制到每个计算节点，并减少每次查询执行时的数据移动。 若要详细了解如何选择分布列，请参阅[分布表][Distribute]。\r \r ## <a name=\"indexing-and-partitioning-tables\"></a>对表进行索引和分区\r 当你在使用 SQL 数据仓库的过程中变得更老练以后，如果你想要优化性能，则需了解有关表设计的详细信息。  若要了解详细信息，请参阅有关[表数据类型][Data Types]、[分布表][Distribute]、[为表编制索引][Index]、[将表分区][Partition]的文章。\r \r ## <a name=\"table-statistics\"></a>表统计信息\r 若要获取 SQL 数据仓库的最佳性能，统计信息异常重要。  由于 SQL 数据仓库不会自动创建和更新统计信息（这可能与在 Azure SQL 数据库中遇到的情况一样），因此请阅读我们有关[统计信息][Statistics]的文章。该文章可能是需要阅读的最重要的文章之一，可确保获得最佳查询性能。\r \r ## <a name=\"temporary-tables\"></a>临时表\r 临时表是指仅在登录期间存在且其他用户无法查看的表。  临时表可用于防止他人查看临时结果，并且不需清除。  由于临时表也利用本地存储，因此对于某些操作来说，临时表可以提供更快速的性能。  请参阅[临时表][Temporary]的文章，了解有关临时表的更多详细信息。\r \r ## <a name=\"external-tables\"></a>外部表\r 外部表，也称 PolyBase 表，是指可以从 SQL 数据仓库查询但其指向的数据却位于 SQL 数据仓库外部的表。  例如，可以创建一个外部表，让其指向 Azure Blob 存储上的文件。  有关如何创建和查询外部表的更多详细信息，请参阅 [使用 PolyBase 加载数据][Load data with Polybase]。  \r \r ## <a name=\"unsupported-table-features\"></a>不支持的表功能\r 虽然 SQL 数据仓库包含许多与其他数据库提供的表功能相同的表功能，但也有一些功能是不受支持的。  下面是目前仍不支持的部分表功能的列表。\r \r | 不支持的功能 |\r | --- |\r | 主键、外键、Unique 和 Check [表约束][Table Constraints] |\r | [唯一索引][Unique Indexes] |\r | [计算列][Computed Columns] |\r | [稀疏列][Sparse Columns] |\r | [用户定义的类型][User-Defined Types] |\r | [序列][Sequence] |\r | [触发器][Triggers] |\r | [索引视图][Indexed Views] |\r | [同义词][Synonyms] |\r \r ## <a name=\"table-size-queries\"></a>表大小查询\r 若要确定这 60 个分布中每个分布的表所占用的空间和行，一个简单的方法是使用 [DBCC PDW_SHOWSPACEUSED][DBCC PDW_SHOWSPACEUSED]。\r \r ```sql\r DBCC PDW_SHOWSPACEUSED('dbo.FactInternetSales');\r ```\r \r 但是，使用 DBCC 命令可能会受到很大限制。  使用动态管理视图 (DMV)，可以查看更多详细信息，并可对查询结果进行更多控制。  一开始请创建此视图，我们在本文以及其他文章中的许多示例将引用此视图。\r \r ```sql\r CREATE VIEW dbo.vTableSizes\r AS\r WITH base\r AS\r (\r SELECT \r  GETDATE()                                                             AS  [execution_time]\r , DB_NAME()                                                            AS  [database_name]\r , s.name                                                               AS  [schema_name]\r , t.name                                                               AS  [table_name]\r , QUOTENAME(s.name)+'.'+QUOTENAME(t.name)                              AS  [two_part_name]\r , nt.[name]                                                            AS  [node_table_name]\r , ROW_NUMBER() OVER(PARTITION BY nt.[name] ORDER BY (SELECT NULL))     AS  [node_table_name_seq]\r , tp.[distribution_policy_desc]                                        AS  [distribution_policy_name]\r , c.[name]                                                             AS  [distribution_column]\r , nt.[distribution_id]                                                 AS  [distribution_id]\r , i.[type]                                                             AS  [index_type]\r , i.[type_desc]                                                        AS  [index_type_desc]\r , nt.[pdw_node_id]                                                     AS  [pdw_node_id]\r , pn.[type]                                                            AS  [pdw_node_type]\r , pn.[name]                                                            AS  [pdw_node_name]\r , di.name                                                              AS  [dist_name]\r , di.position                                                          AS  [dist_position]\r , nps.[partition_number]                                               AS  [partition_nmbr]\r , nps.[reserved_page_count]                                            AS  [reserved_space_page_count]\r , nps.[reserved_page_count] - nps.[used_page_count]                    AS  [unused_space_page_count]\r , nps.[in_row_data_page_count] \r     + nps.[row_overflow_used_page_count] \r     + nps.[lob_used_page_count]                                        AS  [data_space_page_count]\r , nps.[reserved_page_count] \r  - (nps.[reserved_page_count] - nps.[used_page_count]) \r  - ([in_row_data_page_count] \r          + [row_overflow_used_page_count]+[lob_used_page_count])       AS  [index_space_page_count]\r , nps.[row_count]                                                      AS  [row_count]\r from \r     sys.schemas s\r INNER JOIN sys.tables t\r     ON s.[schema_id] = t.[schema_id]\r INNER JOIN sys.indexes i\r     ON  t.[object_id] = i.[object_id]\r     AND i.[index_id] <= 1\r INNER JOIN sys.pdw_table_distribution_properties tp\r     ON t.[object_id] = tp.[object_id]\r INNER JOIN sys.pdw_table_mappings tm\r     ON t.[object_id] = tm.[object_id]\r INNER JOIN sys.pdw_nodes_tables nt\r     ON tm.[physical_name] = nt.[name]\r INNER JOIN sys.dm_pdw_nodes pn\r     ON  nt.[pdw_node_id] = pn.[pdw_node_id]\r INNER JOIN sys.pdw_distributions di\r     ON  nt.[distribution_id] = di.[distribution_id]\r INNER JOIN sys.dm_pdw_nodes_db_partition_stats nps\r     ON nt.[object_id] = nps.[object_id]\r     AND nt.[pdw_node_id] = nps.[pdw_node_id]\r     AND nt.[distribution_id] = nps.[distribution_id]\r LEFT OUTER JOIN (select * from sys.pdw_column_distribution_properties where distribution_ordinal = 1) cdp\r     ON t.[object_id] = cdp.[object_id]\r LEFT OUTER JOIN sys.columns c\r     ON cdp.[object_id] = c.[object_id]\r     AND cdp.[column_id] = c.[column_id]\r )\r , size\r AS\r (\r SELECT\r    [execution_time]\r ,  [database_name]\r ,  [schema_name]\r ,  [table_name]\r ,  [two_part_name]\r ,  [node_table_name]\r ,  [node_table_name_seq]\r ,  [distribution_policy_name]\r ,  [distribution_column]\r ,  [distribution_id]\r ,  [index_type]\r ,  [index_type_desc]\r ,  [pdw_node_id]\r ,  [pdw_node_type]\r ,  [pdw_node_name]\r ,  [dist_name]\r ,  [dist_position]\r ,  [partition_nmbr]\r ,  [reserved_space_page_count]\r ,  [unused_space_page_count]\r ,  [data_space_page_count]\r ,  [index_space_page_count]\r ,  [row_count]\r ,  ([reserved_space_page_count] * 8.0)                                 AS [reserved_space_KB]\r ,  ([reserved_space_page_count] * 8.0)/1000                            AS [reserved_space_MB]\r ,  ([reserved_space_page_count] * 8.0)/1000000                         AS [reserved_space_GB]\r ,  ([reserved_space_page_count] * 8.0)/1000000000                      AS [reserved_space_TB]\r ,  ([unused_space_page_count]   * 8.0)                                 AS [unused_space_KB]\r ,  ([unused_space_page_count]   * 8.0)/1000                            AS [unused_space_MB]\r ,  ([unused_space_page_count]   * 8.0)/1000000                         AS [unused_space_GB]\r ,  ([unused_space_page_count]   * 8.0)/1000000000                      AS [unused_space_TB]\r ,  ([data_space_page_count]     * 8.0)                                 AS [data_space_KB]\r ,  ([data_space_page_count]     * 8.0)/1000                            AS [data_space_MB]\r ,  ([data_space_page_count]     * 8.0)/1000000                         AS [data_space_GB]\r ,  ([data_space_page_count]     * 8.0)/1000000000                      AS [data_space_TB]\r ,  ([index_space_page_count]  * 8.0)                                   AS [index_space_KB]\r ,  ([index_space_page_count]  * 8.0)/1000                              AS [index_space_MB]\r ,  ([index_space_page_count]  * 8.0)/1000000                           AS [index_space_GB]\r ,  ([index_space_page_count]  * 8.0)/1000000000                        AS [index_space_TB]\r FROM base\r )\r SELECT * \r FROM size\r ;\r ```\r \r ### <a name=\"table-space-summary\"></a>表空间摘要\r 此查询返回行以及按表划分的空间。  此查询适用于查看哪些表是最大的表，以及这些表是按轮循机制分布的、按复制分布的还是按哈希分布的。  对于哈希分布表，此查询还显示分布列。  大多数情况下，最大的表应该是哈希分布，并使用聚集列存储索引。\r \r ```sql\r SELECT \r      database_name\r ,    schema_name\r ,    table_name\r ,    distribution_policy_name\r ,      distribution_column\r ,    index_type_desc\r ,    COUNT(distinct partition_nmbr) as nbr_partitions\r ,    SUM(row_count)                 as table_row_count\r ,    SUM(reserved_space_GB)         as table_reserved_space_GB\r ,    SUM(data_space_GB)             as table_data_space_GB\r ,    SUM(index_space_GB)            as table_index_space_GB\r ,    SUM(unused_space_GB)           as table_unused_space_GB\r FROM \r     dbo.vTableSizes\r GROUP BY \r      database_name\r ,    schema_name\r ,    table_name\r ,    distribution_policy_name\r ,      distribution_column\r ,    index_type_desc\r ORDER BY\r     table_reserved_space_GB desc\r ;\r ```\r \r ### <a name=\"table-space-by-distribution-type\"></a>按分布类型划分的表空间\r ```sql\r SELECT \r      distribution_policy_name\r ,    SUM(row_count)                as table_type_row_count\r ,    SUM(reserved_space_GB)        as table_type_reserved_space_GB\r ,    SUM(data_space_GB)            as table_type_data_space_GB\r ,    SUM(index_space_GB)           as table_type_index_space_GB\r ,    SUM(unused_space_GB)          as table_type_unused_space_GB\r FROM dbo.vTableSizes\r GROUP BY distribution_policy_name\r ;\r ```\r \r ### <a name=\"table-space-by-index-type\"></a>按索引类型划分的表空间\r ```sql\r SELECT \r      index_type_desc\r ,    SUM(row_count)                as table_type_row_count\r ,    SUM(reserved_space_GB)        as table_type_reserved_space_GB\r ,    SUM(data_space_GB)            as table_type_data_space_GB\r ,    SUM(index_space_GB)           as table_type_index_space_GB\r ,    SUM(unused_space_GB)          as table_type_unused_space_GB\r FROM dbo.vTableSizes\r GROUP BY index_type_desc\r ;\r ```\r \r ### <a name=\"distribution-space-summary\"></a>分布空间摘要\r ```sql\r SELECT \r     distribution_id\r ,    SUM(row_count)                as total_node_distribution_row_count\r ,    SUM(reserved_space_MB)        as total_node_distribution_reserved_space_MB\r ,    SUM(data_space_MB)            as total_node_distribution_data_space_MB\r ,    SUM(index_space_MB)           as total_node_distribution_index_space_MB\r ,    SUM(unused_space_MB)          as total_node_distribution_unused_space_MB\r FROM dbo.vTableSizes\r GROUP BY     distribution_id\r ORDER BY    distribution_id\r ;\r ```\r \r ## <a name=\"next-steps\"></a>后续步骤\r 有关详细信息，请参阅有关[表数据类型][Data Types]、[分布表][Distribute]、[为表编制索引][Index]、[将表分区][Partition]、[维护表统计信息][Statistics]和[临时表][Temporary]的文章。  有关最佳实践的详细信息，请参阅 [SQL 数据仓库最佳实践][SQL Data Warehouse Best Practices]。\r \r <!--Image references-->\r \r <!--Article references-->\r [Overview]: ./sql-data-warehouse-tables-overview.md\r [Data Types]: ./sql-data-warehouse-tables-data-types.md\r [Distribute]: ./sql-data-warehouse-tables-distribute.md\r [Index]: ./sql-data-warehouse-tables-index.md\r [Partition]: ./sql-data-warehouse-tables-partition.md\r [Statistics]: ./sql-data-warehouse-tables-statistics.md\r [Temporary]: ./sql-data-warehouse-tables-temporary.md\r [SQL Data Warehouse Best Practices]: ./sql-data-warehouse-best-practices.md\r [Load data with Polybase]: ./sql-data-warehouse-load-from-azure-blob-storage-with-polybase.md\r \r <!--MSDN references-->\r [CREATE TABLE]: https://msdn.microsoft.com/library/mt203953.aspx\r [RENAME]: https://msdn.microsoft.com/library/mt631611.aspx\r [DBCC PDW_SHOWSPACEUSED]: https://msdn.microsoft.com/library/mt204028.aspx\r [Table Constraints]: https://msdn.microsoft.com/library/ms188066.aspx\r [Computed Columns]: https://msdn.microsoft.com/library/ms186241.aspx\r [Sparse Columns]: https://msdn.microsoft.com/library/cc280604.aspx\r [User-Defined Types]: https://msdn.microsoft.com/library/ms131694.aspx\r [Sequence]: https://msdn.microsoft.com/library/ff878091.aspx\r [Triggers]: https://msdn.microsoft.com/library/ms189799.aspx\r [Indexed Views]: https://msdn.microsoft.com/library/ms191432.aspx\r [Synonyms]: https://msdn.microsoft.com/library/ms177544.aspx\r [Unique Indexes]: https://msdn.microsoft.com/library/ms188783.aspx\r \r <!--Other Web references-->\r \r <!--Update_Description: update meta properties, wording update-->"}