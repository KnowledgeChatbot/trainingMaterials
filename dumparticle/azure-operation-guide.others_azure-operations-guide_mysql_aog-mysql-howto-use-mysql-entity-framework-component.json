{"Title":"如何使用 MySQL EntityFramework 组件处理 MYSQL PaaS DB","Description":"演示如何使用 MySQL EntityFramework 组件对 MySQL PaaS DB 进行操作","Content":"\r # 如何使用 MySQL EntityFramework 组件处理 MYSQL PaaS DB\r \r MySQL Database on Azure 是 Azure 平台上推出的 MySQL 云数据库服务，通过全面兼容 MySQL 协议，为用户提供了一个全托管的性能稳定、可快速部署、高可用、高安全性的数据库服务。客户可以使用常见的支持 MySQL 的平台与技术进行开发与集成。本文演示了如何使用 MySQL EntityFramework 组件对 MySQL PaaS DB 进行操作。\r \r ## 系统环境 / 应用程序信息\r \r ASP.NET 2005 Core / MYSQL EntityFrameWork Core\r \r ## 详细代码\r \r 在 VS 2015 Net Core 的环境中，安装 EntityFrameWork Core 组件，代码和测试后结果如下：\r  \r 其中 **Data1Context.cs** 文件为：\r \r     using Microsoft.EntityFrameworkCore;\r     using MySQL.Data.EntityFrameworkCore.Extensions;\r     \r     namespace ConsoleApp1\r     {\r         /// <summary>\r         /// The entity framework context with a data1 DbSet\r         /// </summary>\r         public class Data1Context : DbContext\r         {\r             public Data1Context(DbContextOptions<Data1Context> options)\r             : base(options)\r             { }\r     \r             public DbSet<Data1> Data1 { get; set; }\r         }\r     \r         /// <summary>\r         /// Factory class for EmployeesContext\r         /// </summary>\r         public static class Data1ContextFactory\r         {\r             public static Data1Context Create(string connectionString)\r             {\r                 var optionsBuilder = new DbContextOptionsBuilder<Data1Context>();\r                 optionsBuilder.UseMySQL(connectionString);\r     \r                 //Ensure database creation\r                 var context = new Data1Context(optionsBuilder.Options);\r                 context.Database.EnsureCreated();\r     \r                 return context;\r             }\r         }\r     \r         /// <summary>\r         /// A basic class for an Employee\r         /// </summary>\r         public class Data1\r         {\r             public int Id { get; set; }\r             public string Name1 { get; set; }\r         }\r     \r     }\r \r **Program.cs** 文件为：\r \r     using System;\r     using System.Collections.Generic;\r     using System.Linq;\r     using System.Threading.Tasks;\r     using Microsoft.Extensions.Configuration;\r     \r     namespace ConsoleApp1\r     {\r         public class Program\r         {\r             public static void Main(string[] args)\r             {\r                 var builder = new ConfigurationBuilder().AddJsonFile(\"appsettings.json\", optional: false, reloadOnChange: true);\r     \r                 var configuration = builder.Build();\r     \r                 string connectionString = configuration.GetConnectionString(\"SampleConnection\");\r     \r                 // Create an employee instance and save the entity to the database\r                 var entry = new Data1() { Id = 3, Name1 = \"XingBing\" };\r     \r                 using (var context = Data1ContextFactory.Create(connectionString))\r                 {\r                     context.Add(entry);\r                     context.SaveChanges();\r                 }\r     \r                 Console.WriteLine($\"Data1 was saved in the database with id: {entry.Id}\");\r                 Console.ReadKey();\r             }\r         }\r     }\r     \r **appsettings.json** 文件为：\r \r     {\r         \"ConnectionStrings\": {\r             \"SampleConnection\": \"server=XXXXXX.mysqldb.chinacloudapi.cn;userid=XXXXXX%YYYYYY;pwd=XXXXXXXXX;port=3306;database=xyudb;sslmode=none;\"\r         }\r     }\r     \r **project.json** 文件为：\r \r     {\r         \"version\": \"1.0.0-*\",\r         \"buildOptions\": {\r             \"debugType\": \"portable\",\r             \"emitEntryPoint\": true,\r             \"copyToOutput\": {\r             \"include\": \"appsettings.json\"\r             }\r         },\r         \"dependencies\": {\r             \"Microsoft.Extensions.Configuration\": \"1.0.0\",\r             \"Microsoft.Extensions.Configuration.Json\": \"1.0.0\",\r             \"Microsoft.EntityFrameworkCore\": \"1.0.0\",\r             \"MySql.Data.Core\": \"7.0.4-IR-191\",\r             \"MySql.Data.EntityFrameworkCore\": \"7.0.4-IR-191\"\r         },\r         \"frameworks\": {\r             \"netcoreapp1.0\": {\r                 \"dependencies\": {\r                     \"Microsoft.NETCore.App\": {\r                     \"type\": \"platform\",\r                     \"version\": \"1.0.0\"\r                     }\r                 },\r                 \"imports\": [\r                     \"dnxcore50\",\r                     \"portable-net452+win81\"\r                 ]\r             }\r         }\r     }\r \r ## 项目组成\r \r ![solutions](./media/aog-mysql-howto-use-mysql-entity-framework-component/solutions.jpg)\r \r ## 运行及测试结果\r \r ![console](./media/aog-mysql-howto-use-mysql-entity-framework-component/console.jpg)\r \r ![grid](./media/aog-mysql-howto-use-mysql-entity-framework-component/grid.jpg)\r \r ## 组件地址\r \r [MySql.Data.EntityFrameworkCore 7.0.7-m61](https://www.nuget.org/packages/MySql.Data.EntityFrameworkCore)\r \r ## 参考方法\r \r [MySQL EF Core provider and Connector/Net 7.0.4 入门教程](http://insidemysql.com/howto-starting-with-mysql-ef-core-provider-and-connectornet-7-0-4/)\r "}