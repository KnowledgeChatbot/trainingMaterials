{"Title":"Azure Service Fabric Docker Compose 预览版","Description":"Azure Service Fabric 接受 Docker Compose 格式，因此可以更轻松地安排使用 Service Fabric 的现有容器。 这种支持目前处于预览状态。","Content":"# <a name=\"using-volume-plugins-and-logging-drivers-in-your-container\"></a>在容器中使用卷插件和日志记录驱动程序\r Service Fabric 支持为容器服务指定 [Docker 卷插件](https://docs.docker.com/engine/extend/plugins_volume/)和 [Docker 日志记录驱动程序](https://docs.docker.com/engine/admin/logging/overview/)。  这将使你能够在 [Azure 文件](https://www.azure.cn/services/storage/files/)中持久保存数据，即使容器已移动或在另一台主机上重启也是如此。\r \r 当前只有适用于 Linux 容器的卷驱动程序，如下所示。  如果使用 Windows 容器，使用最新的 1709 版 Windows Server 无需卷驱动程序即可将卷映射到 Azure 文件 [SMB3 共享](https://blogs.msdn.microsoft.com/clustering/2017/08/10/container-storage-support-with-cluster-shared-volumes-csv-storage-spaces-direct-s2d-smb-global-mapping/)。 这需要将群集中的虚拟机更新到 Windows Server 1709 版本。\r \r ## <a name=\"install-volumelogging-driver\"></a>安装卷/日志记录驱动程序\r \r 如果计算机上未安装 Docker 卷/日志记录驱动程序，请通过 RDP/SSH 连接到计算机手动安装它，或者通过 [VMSS 启动脚本](https://www.azure.cn/resources/templates/201-vmss-custom-script-windows/)或 [SetupEntryPoint](/service-fabric/service-fabric-application-model#describe-a-service) 脚本安装。 选择上述方法之一，可以编写脚本来安装[用于 Azure 的 Docker 卷驱动程序](https://docs.docker.com/docker-for-azure/persistent-data-volumes/)：\r \r ```bash\r docker plugin install --alias azure --grant-all-permissions docker4x/cloudstor:17.09.0-ce-azure1  \\\r     CLOUD_PLATFORM=AZURE \\\r     AZURE_STORAGE_ACCOUNT=\"[MY-STORAGE-ACCOUNT-NAME]\" \\\r     AZURE_STORAGE_ACCOUNT_KEY=\"[MY-STORAGE-ACCOUNT-KEY]\" \\\r     AZURE_STORAGE_ENDPOINT=\"core.chinacloudapi.cn\" \\\r     DEBUG=1\r ```\r <!--Add AZURE_STORAGE_ENDPOINT=\"core.chinacloudapi.cn\" -->\r \r ## <a name=\"specify-the-plugin-or-driver-in-the-manifest\"></a>在清单中指定插件或驱动程序\r 如以下清单所示，应用程序清单中指定了这些插件：\r \r ```xml\r ?xml version=\"1.0\" encoding=\"UTF-8\"?>\r <ApplicationManifest ApplicationTypeName=\"WinNodeJsApp\" ApplicationTypeVersion=\"1.0\" xmlns=\"http://schemas.microsoft.com/2011/01/fabric\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r     <Description>Calculator Application</Description>\r     <Parameters>\r         <Parameter Name=\"ServiceInstanceCount\" DefaultValue=\"3\"></Parameter>\r       <Parameter Name=\"MyCpuShares\" DefaultValue=\"3\"></Parameter>\r     </Parameters>\r     <ServiceManifestImport>\r         <ServiceManifestRef ServiceManifestName=\"NodeServicePackage\" ServiceManifestVersion=\"1.0\"/>\r      <Policies>\r        <ContainerHostPolicies CodePackageRef=\"NodeService.Code\" Isolation=\"hyperv\"> \r         <PortBinding ContainerPort=\"8905\" EndpointRef=\"Endpoint1\"/>\r         <RepositoryCredentials PasswordEncrypted=\"false\" Password=\"****\" AccountName=\"test\"/>\r         <LogConfig Driver=\"etwlogs\" >\r           <DriverOption Name=\"test\" Value=\"vale\"/>\r         </LogConfig>\r         <Volume Source=\"c:\\workspace\" Destination=\"c:\\testmountlocation1\" IsReadOnly=\"false\"></Volume>\r         <Volume Source=\"d:\\myfolder\" Destination=\"c:\\testmountlocation2\" IsReadOnly=\"true\"> </Volume>\r         <Volume Source=\"myvolume1\" Destination=\"c:\\testmountlocation2\" Driver=\"azure\" IsReadOnly=\"true\">\r            <DriverOption Name=\"share\" Value=\"models\"/>\r         </Volume>\r        </ContainerHostPolicies>\r    </Policies>\r     </ServiceManifestImport>\r     <ServiceTemplates>\r         <StatelessService ServiceTypeName=\"StatelessNodeService\" InstanceCount=\"5\">\r             <SingletonPartition></SingletonPartition>\r         </StatelessService>\r     </ServiceTemplates>\r </ApplicationManifest>\r ```\r \r 在前面的示例中，`Volume` 的 `Source` 标记指的是源文件夹。 源文件夹可以是 VM 中托管容器或永久性远程存储的文件夹。 `Destination` 标记是 `Source` 映射到正在运行的容器中的位置。  因此，目标不能为容器中的现有位置。\r \r 指定卷插件时，Service Fabric 使用指定的参数自动创建卷。 `Source` 标记是该卷的名称，`Driver` 标记指定卷驱动程序插件。 可使用 `DriverOption` 标记指定选项，如以下代码片段所示：\r \r ```xml\r <Volume Source=\"myvolume1\" Destination=\"c:\\testmountlocation4\" Driver=\"azure\" IsReadOnly=\"true\">\r            <DriverOption Name=\"share\" Value=\"models\"/>\r </Volume>\r ```\r 如果指定了 Docker 日志记录驱动程序，则有必要部署代理（或容器）以处理群集中的日志。  `DriverOption` 标记还可用于指定日志驱动程序选项。\r \r 请参阅以下文章，将容器部署到 Service Fabric 群集：\r \r [在 Service Fabric 上部署容器](service-fabric-deploy-container.md)\r \r <!--Update_Description: wording update, update link -->"}