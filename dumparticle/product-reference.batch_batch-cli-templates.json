{"Title":"运行端到端的 Azure Batch 作业而无需编写代码（预览版）","Description":"创建 Azure CLI 的模板文件，以创建 Batch 池、作业和任务。","Content":"# <a name=\"use-azure-batch-cli-templates-and-file-transfer-preview\"></a>使用 Azure Batch CLI 模板和文件传输（预览版）\r \r 使用 Azure CLI 可在不编写代码的情况下运行批处理作业。\r \r 创建并使用 Azure CLI 的模板文件，创建 Batch 池、作业和任务。 可轻松将作业输入文件上传到与下载的 Batch 帐户和作业输出文件相关联的存储帐户。\r \r ## <a name=\"overview\"></a>概述\r \r 通过 Azure CLI 扩展，非开发者用户可使用端到端的 Batch。 可创建池、上传输入数据、创建作业和相关联的任务，以及下载生成的输出数据 - 无需任何代码，直接使用 CLI 或将 CLI 集成到脚本。\r \r 批处理模板基于 [Azure CLI 中现有的批处理支持](/batch/batch-cli-get-started#json-files-for-resource-creation)，允许 JSON 文件为池、作业、任务及其他项的创建指定属性值。 通过 Batch 模板，可以在 JSON 文件功能的基础上添加以下功能：\r \r -   可以定义参数。 使用模板时，仅指定参数值以创建项，而在模板正文中指定其他项属性值。 了解 Batch 和 Batch 运行的应用程序的用户可以创建模板、指定池、作业和任务属性值。 不太熟悉 Batch 和/或应用程序的用户只需指定定义的参数的值。\r \r -   使用作业任务工厂可创建与作业相关联的一个或多个任务，而无需创建多个任务定义，因此极大地简化了作业的提交。\r \r \r 需要将输入数据文件应用于作业，且通常会生成输出数据文件。 默认情况下，可使用 CLI 将与每个 Batch 帐户和文件相关联的存储帐户轻松转移到和转移出此存储帐户，无需进行编码，且无需任何存储凭据。\r \r 例如，[ffmpeg](http://ffmpeg.org/) 是处理音频和视频文件的常用应用程序。 Azure Batch CLI 可用于调用 ffmpeg，以便将源视频文件转码为不同解决方法。\r \r -   已创建池模板。 创建模板的用户了解如何调用 ffmpeg 应用程序及其需求；他们可指定适当的操作系统、VM 大小、安装 ffmpeg 的方法（例如，从应用程序包或使用包管理器进行安装），以及其他池属性值。 已创建参数，因此当使用模板时，仅需指定池 ID 和 VM 数。\r \r -   已创建作业模板。 创建模板的用户了解如何调用 ffmpeg，以便将源视频转码为不同的分辨率，并指定任务命令行；他们还了解存在包含源视频文件（每个输入文件均包含所需任务）的文件夹。\r \r -   具有一组要转码的视频文件的最终用户首先需要使用池模板创建一个池，然后仅指定池 ID 和所需的 VM 数量。 然后，他们可以上传源文件以进行转码。 可使用作业模板提交作业，仅指定池 ID 和上传的源文件的位置。 创建批处理作业时，每个输入文件生成一项任务。 最后，将下载已转码的输出文件。\r \r ## <a name=\"installation\"></a>安装\r \r 模板和文件传输功能需要安装扩展。\r \r 有关如何安装 Azure CLI 的说明，请参阅[安装 Azure CLI 2.0](/cli/install-azure-cli)。\r \r 安装 Azure CLI 后，即可使用以下 CLI 命令安装最新版本的 Batch 扩展：\r \r ```azurecli\r az extension add --source https://github.com/Azure/azure-batch-cli-extensions/releases/download/azure-batch-cli-extensions-2.0.0/azure_batch_cli_extensions-2.0.0-py2.py3-none-any.whl\r ```\r \r 有关批处理扩展的详细信息，请参阅 [Azure Batch CLI Extensions for Windows, Mac and Linux](https://github.com/Azure/azure-batch-cli-extensions#microsoft-azure-batch-cli-extensions-for-windows-mac-and-linux)（Windows、Mac 和 Linux 的 Azure Batch CLI 扩展）。\r \r ## <a name=\"templates\"></a>模板\r \r 通过 Azure Batch CLI，可通过指定包含属性名称和值的 JSON 文件创建池、作业和任务等项。 例如：\r \r ```azurecli\r az batch pool create --json-file AppPool.json\r ```\r \r Azure Batch 模板在功能和语法上非常类似于 Azure 资源管理器模板。 它们是包含项属性名称和值的 JSON 文件，但添加了以下主要概念：\r \r -   **参数**\r \r     -   允许在正文部分中指定属性值，使用模板时，仅需提供参数值。 例如，池的完整定义应放入正文且仅定义池 id 的一个参数；因此仅需提供一个池 ID 字符串来创建池。\r         \r     -   模板正文可由了解 Batch 和 Batch 运行的应用程序的人进行创建；使用模板时，必须提供仅作者定义的参数值。 因此，没有深入了解 Batch 和/或应用程序的用户可以使用模板。\r \r -   **变量**\r \r     -   允许在一个位置指定简单或复杂参数值，并在模板正文中的一个或多个位置使用它们。 变量可以简化和减小模板大小，以及通过更改位置的属性（其值可能会更改）使其更易于维护。\r \r -   **更高级别的构造**\r \r     -   Batch API 中尚不可用的模板提供了一些更高级别的构造。 例如，可以在作业模板中定义任务工厂，以使用常见任务定义为作业创建多项任务。 这些构造避免了进行编码以动态创建多个 JSON 文件（如每个任务创建一个文件），以及创建脚本文件以通过程序包管理器安装应用程序等需求。\r \r     -   在某些时候（如果适用），可能会将这些构造添加到 Batch 服务，且在 Batch API、UI 等中可用。\r \r ### <a name=\"pool-templates\"></a>池模板\r \r 除参数和变量的标准模板功能外，池模板还支持以下更高级别的构造：\r \r -   **包引用**\r \r     -   允许通过使用包管理器将软件复制到池节点（可选）。 已指定包管理器和包 ID。 能够声明一个或多个包，便无需创建获取所需包的脚本、安装脚本，以及在每个池节点上运行脚本。\r \r 下面是一个模板示例，该示例创建已安装 ffmpeg 的 Linux VM 的池，且仅需提供要使用的池 ID 字符串和 VM 数：\r \r ```json\r {\r     \"parameters\": {\r         \"nodeCount\": {\r             \"type\": \"int\",\r             \"metadata\": {\r                 \"description\": \"The number of pool nodes\"\r             }\r         },\r         \"poolId\": {\r             \"type\": \"string\",\r             \"metadata\": {\r                 \"description\": \"The pool ID \"\r             }\r         }\r     },\r     \"pool\": {\r         \"type\": \"Microsoft.Batch/batchAccounts/pools\",\r         \"apiVersion\": \"2016-12-01\",\r         \"properties\": {\r             \"id\": \"[parameters('poolId')]\",\r             \"virtualMachineConfiguration\": {\r                 \"imageReference\": {\r                     \"publisher\": \"Canonical\",\r                     \"offer\": \"UbuntuServer\",\r                     \"sku\": \"16.04.0-LTS\",\r                     \"version\": \"latest\"\r                 },\r                 \"nodeAgentSKUId\": \"batch.node.ubuntu 16.04\"\r             },\r             \"vmSize\": \"STANDARD_D3_V2\",\r             \"targetDedicatedNodes\": \"[parameters('nodeCount')]\",\r             \"enableAutoScale\": false,\r             \"maxTasksPerNode\": 1,\r             \"packageReferences\": [\r                 {\r                     \"type\": \"aptPackage\",\r                     \"id\": \"ffmpeg\"\r                 }\r             ]\r         }\r     }\r }\r ```\r \r 如果模板文件名为 _pool-ffmpeg.json_，并会调用模板，如下所示：\r \r ```azurecli\r az batch pool create --template pool-ffmpeg.json\r ```\r \r ### <a name=\"job-templates\"></a>作业模板\r \r 除参数和变量的标准模板功能外，作业模板还支持以下更高级别的构造：\r \r -   **任务工厂**\r \r     -   通过一个任务定义即可为作业创建多项任务。 支持三种类型的任务工厂 - 参数扫描、每个文件任务和任务集合。\r \r 下面是一个模板示例，该示例创建使用 ffmpeg 将 MP4 视频文件转码为两个较低分辨率之一（会创建每个源视频文件的一个任务）的作业：\r \r ```json\r {\r     \"parameters\": {\r         \"poolId\": {\r             \"type\": \"string\",\r             \"metadata\": {\r                 \"description\": \"The name of Azure Batch pool which runs the job\"\r             }\r         },\r         \"jobId\": {\r             \"type\": \"string\",\r             \"metadata\": {\r                 \"description\": \"The name of Azure Batch job\"\r             }\r         },\r         \"resolution\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"428x240\",\r             \"allowedValues\": [\r                 \"428x240\",\r                 \"854x480\"\r             ],\r             \"metadata\": {\r                 \"description\": \"Target video resolution\"\r             }\r         }\r     },\r     \"job\": {\r         \"type\": \"Microsoft.Batch/batchAccounts/jobs\",\r         \"apiVersion\": \"2016-12-01\",\r         \"properties\": {\r             \"id\": \"[parameters('jobId')]\",\r             \"constraints\": {\r                 \"maxWallClockTime\": \"PT5H\",\r                 \"maxTaskRetryCount\": 1\r             },\r             \"poolInfo\": {\r                 \"poolId\": \"[parameters('poolId')]\"\r             },\r             \"taskFactory\": {\r                 \"type\": \"taskPerFile\",\r                 \"source\": { \r                     \"fileGroup\": \"ffmpeg-input\"\r                 },\r                 \"repeatTask\": {\r                     \"commandLine\": \"ffmpeg -i {fileName} -y -s [parameters('resolution')] -strict -2 {fileNameWithoutExtension}_[parameters('resolution')].mp4\",\r                     \"resourceFiles\": [\r                         {\r                             \"blobSource\": \"{url}\",\r                             \"filePath\": \"{fileName}\"\r                         }\r                     ],\r                     \"outputFiles\": [\r                         {\r                             \"filePattern\": \"{fileNameWithoutExtension}_[parameters('resolution')].mp4\",\r                             \"destination\": {\r                                 \"autoStorage\": {\r                                     \"path\": \"{fileNameWithoutExtension}_[parameters('resolution')].mp4\",\r                                     \"fileGroup\": \"ffmpeg-output\"\r                                 }\r                             },\r                             \"uploadOptions\": {\r                                 \"uploadCondition\": \"TaskSuccess\"\r                             }\r                         }\r                     ]\r                 }\r             },\r             \"onAllTasksComplete\": \"terminatejob\"\r         }\r     }\r }\r ```\r \r 如果模板文件名为 _job-ffmpeg.json_，并会调用模板，如下所示：\r \r ```azurecli\r az batch job create --template job-ffmpeg.json\r ```\r \r ## <a name=\"file-groups-and-file-transfer\"></a>文件组和文件传输\r \r 大部分作业和任务均需要输入文件并生成输出文件。 输入文件和输出文件通常需要从客户端传输到节点，或从节点传输到客户端。 Azure Batch CLI 扩展提取文件传输，并利用默认情况下为每个 Batch 帐户创建的存储帐户。\r \r 文件组等同于在 Azure 存储帐户中创建的容器。 文件组允许包含子文件夹。\r \r Batch CLI 扩展提供相关的命令，以将客户端的文件上传到指定文件组，并将指定文件组的文件下载到客户端。\r \r ```azurecli\r az batch file upload --local-path c:\\source_videos\\*.mp4 \r     --file-group ffmpeg-input\r \r az batch file download --file-group ffmpeg-output --local-path\r     c:\\output_lowres_videos\r ```\r \r 通过池和作业模板，可将存储在文件组中的文件指定为复制到池节点或离开池节点返回到文件组。 例如，在以前指定的作业模板中，任务工厂的文件组“ffmpeg-input”被指定为复制到节点以供转码的源视频文件的位置；文件组“ffmpeg-output”被用作将已转码的输出文件从运行每个任务的节点上复制到的位置。\r \r ## <a name=\"summary\"></a>摘要\r \r 目前仅对 Azure CLI 添加了模板和文件传输支持。 目标是向无需使用 Batch API 开发代码的用户（如研究人员、IT 用户等）展开可使用 Batch 的受众。 了解 Azure、Batch 和 Batch 运行的应用程序的用户无需编码即可创建模板以创建池和作业。 有了模板参数，对批处理和应用程序没有深入了解的用户也可使用这些模板。\r \r 试用 Azure CLI 的 Batch 扩展，并通过本文的评论区或 [Azure Batch 论坛](https://social.msdn.microsoft.com/forums/azure/home?forum=azurebatch)向我们提供任何反馈或建议。\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r - 请参阅批处理模板博客文章：[Running Azure Batch jobs using the Azure CLI – no code required](https://azure.microsoft.com/en-us/blog/running-azure-batch-jobs-using-the-azure-cli-no-code-required/)（使用 Azure CLI 运行 Azure 批处理作业 - 无需代码）。\r - 有关安装和使用情况的详细文档、示例和源代码，请参阅 [Azure GitHub 存储库](https://github.com/Azure/azure-batch-cli-extensions)。\r \r <!-- Update_Description: wording update -->\r "}