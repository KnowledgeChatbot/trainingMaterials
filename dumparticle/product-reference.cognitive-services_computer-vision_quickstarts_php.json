{"Title":"计算机视觉 API PHP 快速入门","Description":"获取信息和代码示例，帮助自己快速开始使用 PHP 和认知服务中的计算机视觉 API。","Content":"# <a name=\"computer-vision-php-quick-starts\"></a>计算机视觉 PHP 快速入门\r \r 本文提供信息和代码示例来帮助读者快速开始使用计算机视觉 API 和 PHP 来完成以下任务：\r - [分析图像](#AnalyzeImage) \r - [使用特定于域的模型](#DomainSpecificModel)\r - [以智能方式生成缩略图](#GetThumbnail)\r - [从图像中检测并提取文本](#OCR)\r \r 在[此处](../Vision-API-How-to-Topics/HowToSubscribe.md)详细了解如何获取免费订阅密钥\r \r ## 使用计算机视觉 API 通过 PHP 分析图像 <a name=\"AnalyzeImage\"> </a>\r \r 使用[“分析图像”方法](https://dev.cognitive.azure.cn/docs/services/56f91f2d778daf23d8ec6739/operations/56f91f2e778daf14a499e1fa)，可以基于图像内容提取视觉特征。 可以上传图像或指定图像 URL 并选择要返回的特征，包括：\r - 在此[分类](../Category-Taxonomy.md)中定义的类别。 \r - 与图像内容相关的标记的详细列表。 \r - 完整句子中图像内容的说明。 \r - 图像包含的任何人脸的坐标、性别和年龄。\r - ImageType（剪贴画或线条绘图）\r - 主色、强调色，或者图像是否为黑白色。\r - 图像是否包含色情或性暗示内容。 \r \r ### <a name=\"analyze-an-image-php-example-request\"></a>分析图像 PHP 示例请求\r \r 更改 REST URL 以使用订阅密钥的获取位置，并将“Ocp-Apim-Subscription-Key”值替换为有效的订阅密钥。\r \r ```php\r <?php\r // This sample uses the Apache HTTP client from HTTP Components (http://hc.apache.org/httpcomponents-client-ga/)\r require_once 'HTTP/Request2.php';\r \r $request = new Http_Request2('https://api.cognitive.azure.cn/vision/v1.0/analyze');\r $url = $request->getUrl();\r \r $headers = array(\r     // Request headers\r     'Content-Type' => 'application/json',\r \r     // NOTE: Replace the \"Ocp-Apim-Subscription-Key\" value with a valid subscription key.\r     'Ocp-Apim-Subscription-Key' => '13hc77781f7e4b19b5fcdd72a8df7156',\r );\r \r $request->setHeader($headers);\r \r $parameters = array(\r     // Request parameters\r     'visualFeatures' => 'Categories',\r     'details' => '{string}',\r     'language' => 'en',\r );\r \r $url->setQueryVariables($parameters);\r \r $request->setMethod(HTTP_Request2::METHOD_POST);\r \r // Request body\r $request->setBody(\"{body}\");  // Replace with the body, for example, \"{\"url\": \"http://www.example.com/images/image.jpg\"}\r \r try\r {\r     $response = $request->send();\r     echo $response->getBody();\r }\r catch (HttpException $ex)\r {\r     echo $ex;\r }\r \r ?>\r ```\r \r ### <a name=\"analyze-an-image-response\"></a>分析图像响应\r \r 成功响应将以 JSON 格式返回。 下面是成功响应的示例： \r \r ```json\r {\r   \"categories\": [\r     {\r       \"name\": \"abstract_\",\r       \"score\": 0.00390625\r     },\r     {\r       \"name\": \"people_\",\r       \"score\": 0.83984375,\r       \"detail\": {\r         \"celebrities\": [\r           {\r             \"name\": \"Satya Nadella\",\r             \"faceRectangle\": {\r               \"left\": 597,\r               \"top\": 162,\r               \"width\": 248,\r               \"height\": 248\r             },\r             \"confidence\": 0.999028444\r           }\r         ]\r       }\r     }\r   ],\r   \"adult\": {\r     \"isAdultContent\": false,\r     \"isRacyContent\": false,\r     \"adultScore\": 0.0934349000453949,\r     \"racyScore\": 0.068613491952419281\r   },\r   \"tags\": [\r     {\r       \"name\": \"person\",\r       \"confidence\": 0.98979085683822632\r     },\r     {\r       \"name\": \"man\",\r       \"confidence\": 0.94493889808654785\r     },\r     {\r       \"name\": \"outdoor\",\r       \"confidence\": 0.938492476940155\r     },\r     {\r       \"name\": \"window\",\r       \"confidence\": 0.89513939619064331\r     }\r   ],\r   \"description\": {\r     \"tags\": [\r       \"person\",\r       \"man\",\r       \"outdoor\",\r       \"window\",\r       \"glasses\"\r     ],\r     \"captions\": [\r       {\r         \"text\": \"Satya Nadella sitting on a bench\",\r         \"confidence\": 0.48293603002174407\r       }\r     ]  },\r   \"requestId\": \"0dbec5ad-a3d3-4f7e-96b4-dfd57efe967d\",\r   \"metadata\": {\r     \"width\": 1500,\r     \"height\": 1000,\r     \"format\": \"Jpeg\"\r   },\r   \"faces\": [\r     {\r       \"age\": 44,\r       \"gender\": \"Male\",\r       \"faceRectangle\": {\r         \"left\": 593,\r         \"top\": 160,\r         \"width\": 250,\r         \"height\": 250\r       }\r     }\r   ],\r   \"color\": {\r     \"dominantColorForeground\": \"Brown\",\r     \"dominantColorBackground\": \"Brown\",\r     \"dominantColors\": [\r       \"Brown\",\r       \"Black\"\r     ],\r     \"accentColor\": \"873B59\",\r     \"isBWImg\": false\r   },\r   \"imageType\": {\r     \"clipArtType\": 0,\r     \"lineDrawingType\": 0\r   }\r }\r ```\r \r ## 使用特定于域的模型 <a name=\"DomainSpecificModel\"> </a>\r \r 特定于域的模型是经过训练，可在图像中识别一组特定对象的模型。 当前可用的两个特定于域的模型为 celebrities 和 landmarks。 以下示例识别图像中的地标。\r \r ### <a name=\"landmark-php-example-request\"></a>地标 PHP 示例请求\r \r 更改 REST URL 以使用订阅密钥的获取位置，并将“Ocp-Apim-Subscription-Key”值替换为有效的订阅密钥。\r \r ```php\r <html>\r <head>\r     <title>PHP Sample</title>\r </head>\r <body>\r <?php\r // This sample uses PEAR (https://pear.php.net/package/HTTP_Request2/download)\r require_once 'HTTP/Request2.php';\r \r // Change \"landmarks\" to \"celebrities\" in the url to use the Celebrities model.\r $request = new Http_Request2('https://api.cognitive.azure.cn/vision/v1.0/models/landmarks/analyze');\r $url = $request->getUrl();\r \r $headers = array(\r     // Request headers\r     'Content-Type' => 'application/json',\r \r     // NOTE: Replace the \"Ocp-Apim-Subscription-Key\" value with a valid subscription key.\r     'Ocp-Apim-Subscription-Key' => '13hc77781f7e4b19b5fcdd72a8df7156',\r );\r \r $request->setHeader($headers);\r \r $parameters = array(\r     // Request parameters\r     'model' => 'landmarks',   // Use 'model' => 'celebrities' to use the Celebrities model.\r );\r \r $url->setQueryVariables($parameters);\r \r $request->setMethod(HTTP_Request2::METHOD_POST);\r \r // Request body\r $body = json_encode(array(\r     // Request body parameters\r     'url' => 'https://upload.wikimedia.org/wikipedia/commons/2/23/Space_Needle_2011-07-04.jpg',\r ));\r $request->setBody($body);\r \r try\r {\r     $response = $request->send();\r     echo \"<pre>\" . json_encode(json_decode($response->getBody()), JSON_PRETTY_PRINT) . \"</pre>\";\r }\r catch (HttpException $ex)\r {\r     echo \"<pre>\" . $ex . \"</pre>\";\r }\r ?>\r </body>\r </html>\r ```\r \r ### <a name=\"landmark-example-response\"></a>地标示例响应\r \r 成功响应将以 JSON 格式返回。 下面是成功响应的示例：  \r \r ```json\r {\r     \"requestId\": \"0663b074-8eb3-4fab-a72e-4c31a49bd22e\",\r     \"metadata\": {\r         \"width\": 2096,\r         \"height\": 4132,\r         \"format\": \"Jpeg\"\r     },\r     \"result\": {\r         \"landmarks\": [\r             {\r                 \"name\": \"Space Needle\",\r                 \"confidence\": 0.9998178\r             }\r         ]\r     }\r }\r ```\r \r ## 使用计算机视觉 API 通过 PHP 获取缩略图 <a name=\"GetThumbnail\"> </a>\r \r 使用[“获取缩略图”方法](https://dev.cognitive.azure.cn/docs/services/56f91f2d778daf23d8ec6739/operations/56f91f2e778daf14a499e1fb)可以根据图像的兴趣区域 (ROI) 将该图像裁剪为所需的高度和宽度，即使纵横比不同于输入图像。 \r \r ### <a name=\"get-a-thumbnail-php-example-request\"></a>获取缩略图 PHP 示例请求\r \r 更改 REST URL 以使用订阅密钥的获取位置，并将“Ocp-Apim-Subscription-Key”值替换为有效的订阅密钥。\r \r ```php\r <?php\r // This sample uses the Apache HTTP client from HTTP Components (http://hc.apache.org/httpcomponents-client-ga/)\r require_once 'HTTP/Request2.php';\r \r $request = new Http_Request2('https://api.cognitive.azure.cn/vision/v1.0/generateThumbnail');\r $url = $request->getUrl();\r \r $headers = array(\r     // Request headers\r     'Content-Type' => 'application/json',\r \r     // NOTE: Replace the \"Ocp-Apim-Subscription-Key\" value with a valid subscription key.\r     'Ocp-Apim-Subscription-Key' => '13hc77781f7e4b19b5fcdd72a8df7156',\r );\r \r $request->setHeader($headers);\r \r $parameters = array(\r     // Request parameters\r     'width' => '{number}',      // Replace \"{number}\" with the desired width of your thumbnail.\r     'height' => '{number}',     // Replace \"{number}\" with the desired height of your thumbnail.\r     'smartCropping' => 'true',\r );\r \r $url->setQueryVariables($parameters);\r \r $request->setMethod(HTTP_Request2::METHOD_POST);\r \r // Request body\r $request->setBody(\"{body}\");    // Replace \"{body}\" with the body. For example, '{\"url\": \"http://www.example.com/images/image.jpg\"}'\r \r try\r {\r     $response = $request->send();\r     echo $response->getBody();\r }\r catch (HttpException $ex)\r {\r     echo $ex;\r }\r \r ?>\r ```\r \r ### <a name=\"get-a-thumbnail-response\"></a>获取缩略图响应\r \r 成功响应包含缩略图二进制文件。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。\r \r ## 使用计算机视觉 API 通过 PHP 执行光学字符识别 (OCR) <a name=\"OCR\"> </a>\r \r 使用[光学字符识别 (OCR) 方法](https://dev.cognitive.azure.cn/docs/services/56f91f2d778daf23d8ec6739/operations/56f91f2e778daf14a499e1fc)可以检测图像中的文本，并将识别到的字符提取到机器可用的字符流中。\r \r ### <a name=\"ocr-php-example-request\"></a>OCR PHP 示例请求\r \r 更改 REST URL 以使用订阅密钥的获取位置，并将“Ocp-Apim-Subscription-Key”值替换为有效的订阅密钥。\r \r ```php\r <?php\r // This sample uses the Apache HTTP client from HTTP Components (http://hc.apache.org/httpcomponents-client-ga/)\r require_once 'HTTP/Request2.php';\r \r $request = new Http_Request2('https://api.cognitive.azure.cn/vision/v1.0/ocr');\r $url = $request->getUrl();\r \r $headers = array(\r     // Request headers\r     'Content-Type' => 'application/json',\r \r     // NOTE: Replace the \"Ocp-Apim-Subscription-Key\" value with a valid subscription key.\r     'Ocp-Apim-Subscription-Key' => '13hc77781f7e4b19b5fcdd72a8df7156',\r );\r \r $request->setHeader($headers);\r \r $parameters = array(\r     // Request parameters\r     'language' => 'unk',\r     'detectOrientation ' => 'true',\r );\r \r $url->setQueryVariables($parameters);\r \r $request->setMethod(HTTP_Request2::METHOD_POST);\r \r // Request body\r $request->setBody(\"{body}\");    // Replace \"{body}\" with the body. For example, '{\"url\": \"http://www.example.com/images/image.jpg\"}'\r \r try\r {\r     $response = $request->send();\r     echo $response->getBody();\r }\r catch (HttpException $ex)\r {\r     echo $ex;\r }\r \r ?>\r ```\r \r ### <a name=\"ocr-example-response\"></a>OCR 示例响应\r \r 如果成功，则返回的 OCR 结果包括文本、区域范围框、线条和单词。 \r \r ```json \r {\r   \"language\": \"en\",\r   \"textAngle\": -2.0000000000000338,\r   \"orientation\": \"Up\",\r   \"regions\": [\r     {\r       \"boundingBox\": \"462,379,497,258\",\r       \"lines\": [\r         {\r           \"boundingBox\": \"462,379,497,74\",\r           \"words\": [\r             {\r               \"boundingBox\": \"462,379,41,73\",\r               \"text\": \"A\"\r             },\r             {\r               \"boundingBox\": \"523,379,153,73\",\r               \"text\": \"GOAL\"\r             },\r             {\r               \"boundingBox\": \"694,379,265,74\",\r               \"text\": \"WITHOUT\"\r             }\r           ]\r         },\r         {\r           \"boundingBox\": \"565,471,289,74\",\r           \"words\": [\r             {\r               \"boundingBox\": \"565,471,41,73\",\r               \"text\": \"A\"\r             },\r             {\r               \"boundingBox\": \"626,471,150,73\",\r               \"text\": \"PLAN\"\r             },\r             {\r               \"boundingBox\": \"801,472,53,73\",\r               \"text\": \"IS\"\r             }\r           ]\r         },\r         {\r           \"boundingBox\": \"519,563,375,74\",\r           \"words\": [\r             {\r               \"boundingBox\": \"519,563,149,74\",\r               \"text\": \"JUST\"\r             },\r             {\r               \"boundingBox\": \"683,564,41,72\",\r               \"text\": \"A\"\r             },\r             {\r               \"boundingBox\": \"741,564,153,73\",\r               \"text\": \"WISH\"\r             }\r           ]\r         }\r       ]\r     }\r   ]\r }\r ```\r \r "}