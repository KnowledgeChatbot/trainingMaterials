{"Title":"如何使用 Packer 在 Azure 中创建 Linux 虚拟机映像","Description":"了解如何使用 Packer 在 Azure 中创建 Linux 虚拟机映像","Content":"# <a name=\"how-to-use-packer-to-create-linux-virtual-machine-images-in-azure\"></a>如何使用 Packer 在 Azure 中创建 Linux 虚拟机映像\r 从定义 Linux 分发版和操作系统版本的映像创建 Azure 中的每个虚拟机 (VM)。 映像可以包括预安装的应用程序和配置。 Azure 应用商店为最常见的分发和应用程序环境提供了许多第一和第三方映像，或者用户可根据需求创建自己的自定义映像。 本文详细介绍如何使用开源工具 [Packer](https://www.packer.io/) 在 Azure 中定义和生成自定义映像。\r \r ## <a name=\"create-azure-resource-group\"></a>创建 Azure 资源组\r 生成过程中，Packer 将在生成源 VM 时创建临时 Azure 资源。 要捕获该源 VM 用作映像，必须定义资源组。 Packer 生成过程的输出存储在此资源组中。\r \r 使用 [az group create](https://docs.azure.cn/zh-cn/cli/group?view=azure-cli-latest#create) 创建资源组。 以下示例在“chinaeast”位置创建名为“myResourceGroup”的资源组：\r \r [!INCLUDE [azure-cli-2-azurechinacloud-environment-parameter](../../../includes/azure-cli-2-azurechinacloud-environment-parameter.md)]\r \r ```azurecli\r az group create -n myResourceGroup -l chinaeast\r ```\r \r \r ## <a name=\"create-azure-credentials\"></a>创建 Azure 凭据\r 使用服务主体通过 Azure 对 Packer 进行身份验证。 Azure 服务主体是可与应用、服务和自动化工具（如 Packer）结合使用的安全性标识。 用户控制和定义服务主体可在 Azure 中执行的操作的权限。\r \r 通过 [az ad sp create-for-rbac](https://docs.azure.cn/zh-cn/cli/ad/sp?view=azure-cli-latest#create-for-rbac) 创建服务主体并输出 Packer 需要的凭据：\r \r ```azurecli\r az ad sp create-for-rbac --query [appId,password,tenant]\r ```\r \r 前面命令的输出示例如下所示：\r \r ```azurecli\r \"f5b6a5cf-fbdf-4a9f-b3b8-3c2cd00225a4\",\r \"0e760437-bf34-4aad-9f8d-870be799c55d\",\r \"72f988bf-86f1-41af-91ab-2d7cd011db47\"\r ```\r \r 若要进行 Azure 身份验证，还需要通过 [az account show](https://docs.azure.cn/zh-cn/cli/account?view=azure-cli-latest#show) 获取 Azure 订阅 ID：\r \r ```azurecli\r az account show --query [id] --output tsv\r ```\r \r 在下一步中使用这两个命令的输出。\r \r ## <a name=\"define-packer-template\"></a>定义 Packer 模板\r 若要生成映像，请创建一个模板作为 JSON 文件。 在模板中，定义执行实际生成过程的生成器和设置程序。 Packer 具有 [Azure 设置程序](https://www.packer.io/docs/builders/azure.html)，允许定义 Azure 资源，如在前一步骤中创建的服务主体凭据。\r \r 创建名为 ubuntu.json 的文件并粘贴以下内容。 为以下内容输入自己的值：\r \r | 参数                           | 获取位置 |\r |-------------------------------------|----------------------------------------------------|\r | client_id                         | `az ad sp` 创建命令的第一行输出 - appId |\r | client_secret                     | `az ad sp` 创建命令的第二行输出 - password |\r | tenant_id                         | `az ad sp` 创建命令的第三行输出 - tenant |\r | subscription_id                   | `az account show` 命令的输出 |\r | *managed_image_resource_group_name* | 在第一步中创建的资源组的名称 |\r | *managed_image_name*                | 创建的托管磁盘映像的名称 |\r \r \r ```json\r {\r   \"builders\": [{\r     \"type\": \"azure-arm\",\r \r     \"client_id\": \"f5b6a5cf-fbdf-4a9f-b3b8-3c2cd00225a4\",\r     \"client_secret\": \"0e760437-bf34-4aad-9f8d-870be799c55d\",\r     \"tenant_id\": \"72f988bf-86f1-41af-91ab-2d7cd011db47\",\r     \"subscription_id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\",\r \r     \"managed_image_resource_group_name\": \"myResourceGroup\",\r     \"managed_image_name\": \"myPackerImage\",\r \r     \"os_type\": \"Linux\",\r     \"image_publisher\": \"Canonical\",\r     \"image_offer\": \"UbuntuServer\",\r     \"image_sku\": \"16.04-LTS\",\r \r     \"azure_tags\": {\r         \"dept\": \"Engineering\",\r         \"task\": \"Image deployment\"\r     },\r \r     \"cloud_environment_name\": \"AzureChinaCloud\",\r     \"location\": \"China East\",\r     \"vm_size\": \"Standard_DS2_v2\"\r   }],\r   \"provisioners\": [{\r     \"execute_command\": \"chmod +x {{ .Path }}; {{ .Vars }} sudo -E sh '{{ .Path }}'\",\r     \"inline\": [\r       \"apt-get update\",\r       \"apt-get upgrade -y\",\r       \"apt-get -y install nginx\",\r \r       \"/usr/sbin/waagent -force -deprovision+user && export HISTSIZE=0 && sync\"\r     ],\r     \"inline_shebang\": \"/bin/sh -x\",\r     \"type\": \"shell\"\r   }]\r }\r ```\r \r 此模板生成 Ubuntu 16.04 LTS 映像，请安装 NGINX，然后取消设置 VM。\r \r > [!NOTE]\r > 如果在此模板上进行扩展以便设置用户凭据，请将取消设置 Azure 代理的设置程序命令调整为读取 `-deprovision` 而非 `deprovision+user`。\r > `+user` 标志从源 VM 中删除所有用户帐户。\r \r \r ## <a name=\"build-packer-image\"></a>生成 Packer 映像\r 如果本地计算机上尚未安装 Packer，请[按照 Packer 安装说明](https://www.packer.io/docs/install/index.html)进行安装。\r \r 按如下所述指定 Packer 模板文件，生成映像：\r \r ```bash\r ./packer build ubuntu.json\r ```\r \r 前面命令的输出示例如下所示：\r \r ```bash\r azure-arm output will be in this color.\r \r ==> azure-arm: Running builder ...\r     azure-arm: Creating Azure Resource Manager (ARM) client ...\r ==> azure-arm: Creating resource group ...\r ==> azure-arm:  -> ResourceGroupName : ‘packer-Resource-Group-swtxmqm7ly’\r ==> azure-arm:  -> Location          : 'China East'\r ==> azure-arm:  -> Tags              :\r ==> azure-arm:  ->> dept : Engineering\r ==> azure-arm:  ->> task : Image deployment\r ==> azure-arm: Validating deployment template ...\r ==> azure-arm:  -> ResourceGroupName : ‘packer-Resource-Group-swtxmqm7ly’\r ==> azure-arm:  -> DeploymentName    : ‘pkrdpswtxmqm7ly’\r ==> azure-arm: Deploying deployment template ...\r ==> azure-arm:  -> ResourceGroupName : ‘packer-Resource-Group-swtxmqm7ly’\r ==> azure-arm:  -> DeploymentName    : ‘pkrdpswtxmqm7ly’\r ==> azure-arm: Getting the VM’s IP address ...\r ==> azure-arm:  -> ResourceGroupName   : ‘packer-Resource-Group-swtxmqm7ly’\r ==> azure-arm:  -> PublicIPAddressName : ‘packerPublicIP’\r ==> azure-arm:  -> NicName             : ‘packerNic’\r ==> azure-arm:  -> Network Connection  : ‘PublicEndpoint’\r ==> azure-arm:  -> IP Address          : ‘40.76.218.147’\r ==> azure-arm: Waiting for SSH to become available...\r ==> azure-arm: Connected to SSH!\r ==> azure-arm: Provisioning with shell script: /var/folders/h1/ymh5bdx15wgdn5hvgj1wc0zh0000gn/T/packer-shell868574263\r     azure-arm: WARNING! The waagent service will be stopped.\r     azure-arm: WARNING! Cached DHCP leases will be deleted.\r     azure-arm: WARNING! root password will be disabled. You will not be able to login as root.\r     azure-arm: WARNING! /etc/resolvconf/resolv.conf.d/tail and /etc/resolvconf/resolv.conf.d/original will be deleted.\r     azure-arm: WARNING! packer account and entire home directory will be deleted.\r ==> azure-arm: Querying the machine’s properties ...\r ==> azure-arm:  -> ResourceGroupName : ‘packer-Resource-Group-swtxmqm7ly’\r ==> azure-arm:  -> ComputeName       : ‘pkrvmswtxmqm7ly’\r ==> azure-arm:  -> Managed OS Disk   : ‘/subscriptions/guid/resourceGroups/packer-Resource-Group-swtxmqm7ly/providers/Microsoft.Compute/disks/osdisk’\r ==> azure-arm: Powering off machine ...\r ==> azure-arm:  -> ResourceGroupName : ‘packer-Resource-Group-swtxmqm7ly’\r ==> azure-arm:  -> ComputeName       : ‘pkrvmswtxmqm7ly’\r ==> azure-arm: Capturing image ...\r ==> azure-arm:  -> Compute ResourceGroupName : ‘packer-Resource-Group-swtxmqm7ly’\r ==> azure-arm:  -> Compute Name              : ‘pkrvmswtxmqm7ly’\r ==> azure-arm:  -> Compute Location          : ‘China East’\r ==> azure-arm:  -> Image ResourceGroupName   : ‘myResourceGroup’\r ==> azure-arm:  -> Image Name                : ‘myPackerImage’\r ==> azure-arm:  -> Image Location            : ‘chinaeast’\r ==> azure-arm: Deleting resource group ...\r ==> azure-arm:  -> ResourceGroupName : ‘packer-Resource-Group-swtxmqm7ly’\r ==> azure-arm: Deleting the temporary OS disk ...\r ==> azure-arm:  -> OS Disk : skipping, managed disk was used...\r Build ‘azure-arm’ finished.\r \r ==> Builds finished. The artifacts of successful builds are:\r --> azure-arm: Azure.ResourceManagement.VMImage:\r \r ManagedImageResourceGroupName: myResourceGroup\r ManagedImageName: myPackerImage\r ManagedImageLocation: chinaeast\r ```\r \r \r ## <a name=\"create-vm-from-azure-image\"></a>从 Azure 映像创建 VM\r 现在可以通过 [az vm create](https://docs.azure.cn/zh-cn/cli/vm?view=azure-cli-latest#create) 从映像创建 VM。 指定通过 `--image` 参数创建的映像。 以下示例从 myPackerImage 创建一个名为 myVM 的 VM，并生成 SSH 密钥（如果它们尚不存在）：\r \r ```azurecli\r az vm create \\\r     --resource-group myResourceGroup \\\r     --name myVM \\\r     --image myPackerImage \\\r     --admin-username azureuser \\\r     --generate-ssh-keys\r ```\r \r 创建 VM 需要几分钟时间。 创建 VM 后，请记下 Azure CLI 显示的 `publicIpAddress`。 此地址用于通过 Web 浏览器访问 NGINX 站点。\r \r 若要使 VM 能使用 Web 流量，请通过 [az vm open-port](https://docs.azure.cn/zh-cn/cli/vm?view=azure-cli-latest#open-port) 从 Internet 打开端口 80：\r \r ```azurecli\r az vm open-port \\\r     --resource-group myResourceGroup \\\r     --name myVM \\\r     --port 80\r ```\r \r ## <a name=\"test-vm-and-nginx\"></a>测试 VM 和 NGINX\r 现可打开 Web 浏览器，并在地址栏中输入 `http://publicIpAddress`。 在 VM 创建过程中提供自己的公共 IP 地址。 默认 NGINX 页如下例所示：\r \r ![NGINX 默认站点](./media/build-image-with-packer/nginx.png) \r \r \r ## <a name=\"next-steps\"></a>后续步骤\r 在此示例中，使用 Packer 创建已安装 NGINX 的 VM 映像。 可以将此 VM 映像与现有部署工作流配合使用，执行例如将应用部署到在使用 Ansible、Chef 或 Puppet 通过映像创建的 VM 中的操作。\r \r 有关适用于其他 Linux 发行版本的额外 Packer 模板示例，请参阅此 [GitHub 存储库](https://github.com/hashicorp/packer/tree/master/examples/azure)。\r <!--Update_Description: update scripts for managed disks-->"}