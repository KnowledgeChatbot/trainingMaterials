{"Title":"在 Linux 虚拟机上使用 Azure 自定义脚本扩展","Description":"使用自定义脚本扩展自动化 Linux VM 配置任务","Content":"# <a name=\"using-the-azure-custom-script-extension-with-linux-virtual-machines\"></a>在 Linux 虚拟机上使用 Azure 自定义脚本扩展\r >[!NOTE]\r > 必须修改从 GitHub 存储库“azure-quickstart-templates”下载的模板，以适应 Azure 中国云环境。 例如，替换某些终结点（将“blob.core.windows.net”替换为“blob.core.chinacloudapi.cn”，将“cloudapp.azure.com”替换为“chinacloudapp.cn”）；更改某些不受支持的 VM 映像；更改某些不受支持的 VM 大小。\r <!-- User Notification to update the endpoint-->\r \r 自定义脚本扩展在 Azure 虚拟机上下载并执行脚本。 此扩展适用于部署后配置、软件安装或其他任何配置/管理任务。 可以从 Azure 存储或其他可访问的 Internet 位置下载脚本，或者将脚本提供给扩展运行时。 自定义脚本扩展与 Azure Resource Manager 模板集成，也可以使用 Azure CLI、PowerShell、Azure 门户或 Azure 虚拟机 REST API 来运行它。\r \r 本文档详细说明如何从 Azure CLI 和 Azure Resource Manager 模板使用自定义脚本扩展，同时详细说明了 Linux 系统上的故障排除步骤。\r \r ## <a name=\"extension-configuration\"></a>扩展配置\r 自定义脚本扩展配置指定脚本位置和要运行命令等设置。 此配置可以存储在配置文件中、在命令行中指定，或者在 Azure Resource Manager 模板中指定。 敏感数据可以存储在受保护的配置中，此配置经过加密，只能在虚拟机内部解密。 当执行命令包含机密（例如密码）时，受保护的配置相当有用。\r \r ### <a name=\"public-configuration\"></a>公共配置\r 架构：\r \r **注意** - 这些属性名称区分大小写。 使用下述名称可避免部署问题。\r \r * **commandToExecute**：（必需，字符串）要执行的入口点脚本\r * **fileUris**：（可选，字符串数组）要下载的文件的 URL。\r * **timestamp**：（可选，整数）仅当通过更改此字段的值来触发脚本的重新运行时，才需使用此字段。\r \r ```json\r {\r   \"fileUris\": [\"<url>\"],\r   \"commandToExecute\": \"<command-to-execute>\"\r }\r ```\r \r ### <a name=\"protected-configuration\"></a>受保护的配置\r 架构：\r \r **注意** - 这些属性名称区分大小写。 使用下述名称可避免部署问题。\r \r * **commandToExecute**：（可选，字符串）要执行的入口点脚本。 如果命令包含机密（例如密码），请改用此字段。\r * **storageAccountName**：（可选，字符串）存储帐户的名称。 如果指定存储凭据，所有 fileUri 必须是 Azure Blob 的 URL。\r * **storageAccountKey**：（可选，字符串）存储帐户的访问密钥。\r \r ```json\r {\r   \"commandToExecute\": \"<command-to-execute>\",\r   \"storageAccountName\": \"<storage-account-name>\",\r   \"storageAccountKey\": \"<storage-account-key>\"\r }\r ```\r \r ## <a name=\"azure-cli\"></a>Azure CLI\r 使用 Azure CLI 来运行自定义脚本扩展时，请创建一个或多个至少包含文件 URI 和脚本执行命令的配置文件。\r \r [!INCLUDE [azure-cli-2-azurechinacloud-environment-parameter](../../../includes/azure-cli-2-azurechinacloud-environment-parameter.md)]\r \r ```azurecli\r az vm extension set --resource-group myResourceGroup --vm-name myVM --name customScript --publisher Microsoft.Azure.Extensions --settings ./script-config.json\r ```\r \r （可选）可以在命令中以 JSON 格式字符串的形式指定设置。 这样，便可以在执行期间指定配置，而无需使用单独的配置文件。\r \r ```azurecli\r az vm extension set '\r   --resource-group exttest `\r   --vm-name exttest `\r   --name customScript `\r   --publisher Microsoft.Azure.Extensions `\r   --settings '{\"fileUris\": [\"https://raw.githubusercontent.com/neilpeterson/test-extension/master/test.sh\"],\"commandToExecute\": \"./test.sh\"}'\r ```\r \r ### <a name=\"azure-cli-examples\"></a>Azure CLI 示例\r \r **示例 1** - 包含脚本文件的公共配置。\r \r ```json\r {\r   \"fileUris\": [\"https://raw.githubusercontent.com/neilpeterson/test-extension/master/test.sh\"],\r   \"commandToExecute\": \"./test.sh\"\r }\r ```\r \r Azure CLI 命令：\r \r ```azurecli\r az vm extension set --resource-group myResourceGroup --vm-name myVM --name customScript --publisher Microsoft.Azure.Extensions --settings ./script-config.json\r ```\r \r **示例 2** - 不包含脚本文件的公共配置。\r \r ```json\r {\r   \"commandToExecute\": \"apt-get -y update && apt-get install -y apache2\"\r }\r ```\r \r Azure CLI 命令：\r \r ```azurecli\r az vm extension set --resource-group myResourceGroup --vm-name myVM --name customScript --publisher Microsoft.Azure.Extensions --settings ./script-config.json\r ```\r \r **示例 3** - 使用公共配置文件指定脚本文件 URI，使用受保护的配置文件指定要执行的命令。\r \r 公共配置文件：\r \r ```json\r {\r   \"fileUris\": [\"https://gist.github.com/ahmetalpbalkan/b5d4a856fe15464015ae87d5587a4439/raw/466f5c30507c990a4d5a2f5c79f901fa89a80841/hello.sh\"]\r }\r ```\r \r 受保护的配置文件：  \r \r ```json\r {\r   \"commandToExecute\": \"./hello.sh <password>\"\r }\r ```\r \r Azure CLI 命令：\r \r ```azurecli\r az vm extension set --resource-group myResourceGroup --vm-name myVM --name customScript --publisher Microsoft.Azure.Extensions --settings ./script-config.json --protected-settings ./protected-config.json\r ```\r \r ## <a name=\"resource-manager-template\"></a>Resource Manager 模板\r 可以使用 Resource Manager 模板在虚拟机部署阶段运行 Azure 自定义脚本扩展。 为此，请将格式正确的 JSON 添加到部署模板。\r \r ### <a name=\"resource-manager-examples\"></a>Resource Manager 示例\r **示例 1** - 公共配置。\r \r ```json\r {\r     \"name\": \"scriptextensiondemo\",\r     \"type\": \"extensions\",\r     \"location\": \"[resourceGroup().location]\",\r     \"apiVersion\": \"2015-06-15\",\r     \"dependsOn\": [\r         \"[concat('Microsoft.Compute/virtualMachines/', parameters('scriptextensiondemoName'))]\"\r     ],\r     \"tags\": {\r         \"displayName\": \"scriptextensiondemo\"\r     },\r     \"properties\": {\r         \"publisher\": \"Microsoft.Azure.Extensions\",\r         \"type\": \"CustomScript\",\r         \"typeHandlerVersion\": \"2.0\",\r         \"autoUpgradeMinorVersion\": true,\r       \"settings\": {\r         \"fileUris\": [\r           \"https://gist.github.com/ahmetalpbalkan/b5d4a856fe15464015ae87d5587a4439/raw/466f5c30507c990a4d5a2f5c79f901fa89a80841/hello.sh\"\r         ],\r         \"commandToExecute\": \"sh hello.sh\"\r       }\r     }\r }\r ```\r \r **示例 2** - 受保护配置中的执行命令。\r \r ```json\r {\r   \"name\": \"config-app\",\r   \"type\": \"extensions\",\r   \"location\": \"[resourceGroup().location]\",\r   \"apiVersion\": \"2015-06-15\",\r   \"dependsOn\": [\r     \"[concat('Microsoft.Compute/virtualMachines/', concat(variables('vmName'),copyindex()))]\"\r   ],\r   \"tags\": {\r     \"displayName\": \"config-app\"\r   },\r   \"properties\": {\r     \"publisher\": \"Microsoft.Azure.Extensions\",\r     \"type\": \"CustomScript\",\r     \"typeHandlerVersion\": \"2.0\",\r     \"autoUpgradeMinorVersion\": true,\r     \"settings\": {\r       \"fileUris\": [\r         \"https://gist.github.com/ahmetalpbalkan/b5d4a856fe15464015ae87d5587a4439/raw/466f5c30507c990a4d5a2f5c79f901fa89a80841/hello.sh\"\r       ]              \r     },\r     \"protectedSettings\": {\r       \"commandToExecute\": \"sh hello.sh <password>\"\r     }\r   }\r }\r ```\r \r 有关完整示例，请参阅“.Net Core 音乐应用商店演示”中的 [音乐应用商店演示](https://github.com/neilpeterson/nepeters-azure-templates/tree/master/dotnet-core-music-linux-vm-sql-db)。\r \r ## <a name=\"troubleshooting\"></a>故障排除\r 运行自定义脚本扩展时，会创建脚本，或将脚本下载到类似于以下示例的目录。 命令输出也会保存到此目录中的 `stdout` 和 `stderr` 文件中。\r \r ```bash\r /var/lib/waagent/custom-script/download/0/\r ```\r \r Azure 脚本扩展生成一个日志，位置如下。\r \r ```bash\r /var/log/azure/custom-script/handler.log\r ```\r \r 也可以使用 Azure CLI 来检索自定义脚本扩展的执行状态。\r \r ```azurecli\r az vm extension list -g myResourceGroup --vm-name myVM\r ```\r \r 输出类似于以下文本：\r \r ```azurecli\r info:    Executing command vm extension get\r + Looking up the VM \"scripttst001\"\r data:    Publisher                   Name                                      Version  State\r data:    --------------------------  ----------------------------------------  -------  ---------\r data:    Microsoft.Azure.Extensions  CustomScript                              2.0      Succeeded\r data:    Microsoft.OSTCExtensions    Microsoft.Insights.VMDiagnosticsSettings  2.3      Succeeded\r info:    vm extension get command OK\r ```\r \r ## <a name=\"next-steps\"></a>后续步骤\r 有关其他 VM 脚本扩展的信息，请参阅 [Azure Script Extension overview for Linux](extensions-features.md?toc=%2fvirtual-machines%2flinux%2ftoc.json)（适用于 Linux 的 Azure 脚本扩展概述）。\r \r <!--Update_Description: update meta properties, wording update-->"}