{"Title":"Azure 通知中心安全推送","Description":"了解如何从 Azure 将安全推送通知发送到 iOS 应用。代码示例是使用 .Objective-C 和 C# 编写的。","Content":"\r #Azure 通知中心安全推送\r \r > [!div class=\"op_single_selector\"]\r >- [Windows Universal](./notification-hubs-aspnet-backend-windows-dotnet-wns-secure-push-notification.md)\r >- [iOS](./notification-hubs-aspnet-backend-ios-push-apple-apns-secure-notification.md)\r \r ##概述\r \r 利用 Azure 中的推送通知支持，你可以访问易于使用且横向扩展的多平台推送基础结构，这大大简化了为移动平台的使用者应用程序和企业应用程序实现推送通知的过程。\r \r 由于法规或安全约束，有时应用程序可能想要在通知中包含某些无法通过标准推送通知基础结构传输的内容。本教程介绍如何通过客户端设备和应用后端之间安全且经过验证的连接发送敏感信息，以便获得相同的体验。\r \r 在高级别中，此流程如下所示：\r \r 1. 应用后端：\r     - 在后端数据库中存储安全有效负载。\r     - 将此通知的 ID 发送到此设备（不发送任何安全信息）。\r 2. 此设备上的应用在接收通知时：\r     - 此设备将联系请求安全有效负载的后端。\r     - 此应用可以将有效负载显示为设备上的通知。\r \r 请务必注意，在之前的流程（以及本教程中）中，我们假设此设备会在用户登录后在本地存储中存储身份验证令牌。这可以保证完全无缝的体验，因为该设备可以使用此令牌检索通知的安全有效负载。如果您的应用程序未在设备上存储身份验证令牌，或者如果这些令牌可能已过期，此设备应用在收到通知时应显示提示用户启动应用的通用通知。然后，应用对用户进行身份验证并显示通知有效负载。\r \r 本安全推送教程演示如何安全地发送推送通知。本教程以[通知用户](./notification-hubs-aspnet-backend-ios-apple-apns-notification.md)教程为基础，因此您应该先完成该教程中的步骤。\r \r > [!NOTE]\r > 本教程假设您已根据[通知中心入门 (iOS)](./notification-hubs-ios-apple-push-notification-apns-get-started.md) 中所述创建并配置了通知中心。\r \r [!INCLUDE [notification-hubs-aspnet-backend-securepush](../../includes/notification-hubs-aspnet-backend-securepush.md)]\r \r ## 修改 iOS 项目\r \r 现在，将您的应用后端修改为只发送通知的 ID，您必须更改您的 iOS 应用来处理该通知并回调后端来检索要显示的安全消息。\r \r 若要实现此目标，我们必须编写逻辑来从应用后端检索安全内容。\r \r 1. 在 **AppDelegate.m** 中，请确保该应用将注册无提示通知，以便它可以处理从后端发送的通知 ID。添加 didFinishLaunchingWithOptions 中的 **UIRemoteNotificationTypeNewsstandContentAvailability** 选项：\r \r     ```\r     [[UIApplication sharedApplication] registerForRemoteNotificationTypes: UIRemoteNotificationTypeAlert | UIRemoteNotificationTypeBadge | UIRemoteNotificationTypeSound | UIRemoteNotificationTypeNewsstandContentAvailability];\r     ```\r \r 2. 在 **AppDelegate.m** 中，通过以下声明在顶部添加实现部分：\r \r     ```\r     @interface AppDelegate ()\r     - (void) retrieveSecurePayloadWithId:(int)payloadId completion: (void(^)(NSString*, NSError*)) completion;\r     @end\r     ```\r \r 3. 然后将以下代码添加到实现部分，将占位符 `{back-end endpoint}` 替换为先前获取的后端终结点：\r \r     ```\r     NSString *const GetNotificationEndpoint = @\"{back-end endpoint}/api/notifications\";\r \r     - (void) retrieveSecurePayloadWithId:(int)payloadId completion: (void(^)(NSString*, NSError*)) completion;\r     {\r         // check if authenticated\r         ANHViewController* rvc = (ANHViewController*) self.window.rootViewController;\r         NSString* authenticationHeader = rvc.registerClient.authenticationHeader;\r         if (!authenticationHeader) return;\r \r         NSURLSession* session = [NSURLSession\r                                  sessionWithConfiguration:[NSURLSessionConfiguration defaultSessionConfiguration]\r                                  delegate:nil\r                                  delegateQueue:nil];\r \r         NSURL* requestURL = [NSURL URLWithString:[NSString stringWithFormat:@\"%@/%d\", GetNotificationEndpoint, payloadId]];\r         NSMutableURLRequest* request = [NSMutableURLRequest requestWithURL:requestURL];\r         [request setHTTPMethod:@\"GET\"];\r         NSString* authorizationHeaderValue = [NSString stringWithFormat:@\"Basic %@\", authenticationHeader];\r         [request setValue:authorizationHeaderValue forHTTPHeaderField:@\"Authorization\"];\r \r         NSURLSessionDataTask* dataTask = [session dataTaskWithRequest:request completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\r             NSHTTPURLResponse* httpResponse = (NSHTTPURLResponse*) response;\r             if (!error && httpResponse.statusCode == 200)\r             {\r                 NSLog(@\"Received secure payload: %@\", [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding]);\r \r                 NSMutableDictionary *json = [NSJSONSerialization JSONObjectWithData:data options: NSJSONReadingMutableContainers error: &error];\r \r                 completion([json objectForKey:@\"Payload\"], nil);\r             }\r             else\r             {\r                 NSLog(@\"Error status: %ld, request: %@\", (long)httpResponse.statusCode, error);\r                 if (error)\r                     completion(nil, error);\r                 else {\r                     completion(nil, [NSError errorWithDomain:@\"APICall\" code:httpResponse.statusCode userInfo:nil]);\r                 }\r             }\r         }];\r         [dataTask resume];\r     }\r     ```\r \r 此方法使用存储在共享首选项中的凭据调用应用后端来检索通知内容。\r \r 4. 现在我们必须处理传入通知，并使用上面的方法来检索要显示的内容。首先，我们必须使您的 iOS 应用能在接收推送通知时在后台运行。在 **XCode** 中，在左侧面板上选择您的应用项目，然后单击中央窗格“目标”部分中的主应用目标。\r \r 5. 然后，单击中央窗格顶部的“功能”选项卡，然后选中“远程通知”复选框。\r \r     ![][IOS1]\r \r 6. 在 **AppDelegate.m** 中，添加以下方法来处理推送通知：\r \r     ```\r     -(void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler\r     {\r         NSLog(@\"%@\", userInfo);\r \r         [self retrieveSecurePayloadWithId:[[userInfo objectForKey:@\"secureId\"] intValue] completion:^(NSString * payload, NSError *error) {\r             if (!error) {\r                 // show local notification\r                 UILocalNotification* localNotification = [[UILocalNotification alloc] init];\r                 localNotification.fireDate = [NSDate dateWithTimeIntervalSinceNow:0];\r                 localNotification.alertBody = payload;\r                 localNotification.timeZone = [NSTimeZone defaultTimeZone];\r                 [[UIApplication sharedApplication] scheduleLocalNotification:localNotification];\r \r                 completionHandler(UIBackgroundFetchResultNewData);\r             } else {\r                 completionHandler(UIBackgroundFetchResultFailed);\r             }\r         }];\r \r     }\r     ```\r \r     请注意，最好由后端处理缺失身份验证标头属性或拒绝的情况。这些情况下的特定处理主要取决于您的目标用户体验。一种选择是显示包含用户用来进行身份验证的通用提示的通知，从而检索实际通知。\r \r ## 运行应用程序\r \r 若要运行应用程序，请执行以下操作：\r \r 1. 在 XCode 中，在物理 iOS 设备上运行此应用（推送通知将无法在模拟器中正常工作）。\r \r 2. 在 iOS 应用 UI 中，输入用户名和密码。这些信息可以是任意字符串，但必须是相同的值。\r \r 3. 在 iOS 应用 UI 中，单击“登录”。然后单击“发送推送”。您应该能看到通知中心中所显示的安全通知。\r \r [IOS1]: ./media/notification-hubs-aspnet-backend-ios-secure-push/secure-push-ios-1.png\r \r <!---HONumber=Mooncake_0725_2016-->"}