{"Title":"使用 API 管理中的客户端证书身份验证确保 API 安全 - Azure API 管理","Description":"了解如何使用客户端证书保护对 API 的访问","Content":"# <a name=\"how-to-secure-apis-using-client-certificate-authentication-in-api-management\"></a>如何使用 API 管理中的客户端证书身份验证确保 API 安全\r \r API 管理提供的功能可确保使用客户端证书安全地访问 API（即，客户端到 API 管理）。 目前，可以针对所需值检查客户端证书的指纹。 还可以针对已上传到 API 管理的现有证书检查指纹。  \r \r 有关使用客户端证书保护对 API 后端服务的访问（即，API 管理到后端）的信息，请参阅[如何使用客户端证书身份验证保护后端服务](./api-management-howto-mutual-certificates.md)\r \r ## <a name=\"checking-the-expiration-date\"></a>检查到期日期\r \r 可以将以下策略配置为检查证书是否过期：\r \r ```\r <choose>\r     <when condition=\"@(context.Request.Certificate == null || context.Request.Certificate.NotAfter < DateTime.Now)\" >\r         <return-response>\r             <set-status code=\"403\" reason=\"Invalid client certificate\" />\r         </return-response>\r     </when>\r </choose>\r ```\r \r ## <a name=\"checking-the-issuer-and-subject\"></a>检查颁发者和使用者\r \r 可以将以下策略配置为检查客户端证书的颁发者和使用者：\r \r ```\r <choose>\r     <when condition=\"@(context.Request.Certificate == null || context.Request.Certificate.Issuer != \"trusted-issuer\" || context.Request.Certificate.SubjectName != \"expected-subject-name\")\" >\r         <return-response>\r             <set-status code=\"403\" reason=\"Invalid client certificate\" />\r         </return-response>\r     </when>\r </choose>\r ```\r \r ## <a name=\"checking-the-thumbprint\"></a>检查指纹\r \r 可以将以下策略配置为检查客户端证书的指纹：\r \r ```\r <choose>\r     <when condition=\"@(context.Request.Certificate == null || context.Request.Certificate.Thumbprint != \"desired-thumbprint\")\" >\r         <return-response>\r             <set-status code=\"403\" reason=\"Invalid client certificate\" />\r         </return-response>\r     </when>\r </choose>\r ```\r \r ## <a name=\"checking-a-thumbprint-against-certificates-uploaded-to-api-management\"></a>针对已上传到 API 管理的证书检查指纹\r \r 以下示例演示如何针对已上传到 API 管理的证书，检查客户端证书的指纹： \r \r ```\r <choose>\r     <when condition=\"@(context.Request.Certificate == null || !context.Deployment.Certificates.Any(c => c.Value.Thumbprint == context.Request.Certificate.Thumbprint))\" >\r         <return-response>\r             <set-status code=\"403\" reason=\"Invalid client certificate\" />\r         </return-response>\r     </when>\r </choose>\r \r ```\r \r ## <a name=\"next-step\"></a>后续步骤\r \r *  [如何使用客户端证书身份验证确保后端服务安全](./api-management-howto-mutual-certificates.md)\r *  [如何上传证书](./api-management-howto-mutual-certificates.md#step1)\r \r "}