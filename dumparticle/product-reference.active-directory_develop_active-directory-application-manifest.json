{"Title":"了解 Azure Active Directory 应用程序清单","Description":"详细介绍 Azure Active Directory 应用程序清单，该清单表示 Azure AD 租户中的应用程序标识配置，并方便实现 OAuth 授权、许可体验和其他功能。","Content":"# <a name=\"understanding-the-azure-active-directory-application-manifest\"></a>了解 Azure Active Directory 应用程序清单\r 与 Azure Active Directory (AD) 集成的应用程序必须向 Azure AD 租户注册，提供应用程序的持久性标识配置。 在运行时查阅此配置，启用允许应用程序通过 Azure AD 外包和中转身份验证/授权的方案。 有关 Azure AD 应用程序模型的详细信息，请参阅 [添加、更新和删除应用程序][ADD-UPD-RMV-APP] 一文。\r \r ## <a name=\"updating-an-applications-identity-configuration\"></a>更新应用程序的标识配置\r 实际上有多个可用的选项可以更新应用程序的标识配置属性，这些选项因功能与难度而有所不同，包括：\r \r - 在 [Azure 经典门户][AZURE-CLASSIC-PORTAL]的 Web 用户界面中可以更新应用程序的最常见属性。 这是更新应用程序属性最快且最不容易出错的方法，但无法像下面两种方法一样提供对所有属性的完全访问权限。\r - 对于需要在其中更新 Azure 经典管理门户中未公开的属性更高级方案，可以修改 **应用程序清单**。 这是本文的重点，会在下一部分中开始详细讨论。\r - 也可以编写使用[图形 API][GRAPH-API] 的应用程序来更新应用程序，这是最费力的方法。 如果要编写管理软件或需要自动定期更新应用程序属性，这可能是个不错的选择。\r \r ## <a name=\"using-the-application-manifest-to-update-an-applications-identity-configuration\"></a>使用应用程序清单更新应用程序的标识配置\r 借助 [Azure 经典管理门户][AZURE-CLASSIC-PORTAL]，可以通过使用内联清单编辑器更新应用程序清单来管理应用程序的标识配置。 还可以下载应用程序清单并将其作为 JSON 文件上传。 不会将实际的文件存储在目录中。 应用程序清单只是 Azure AD 图形 API 应用程序实体上的 HTTP GET 操作，上传是应用程序实体上的 HTTP PATCH 操作。\r \r 因此，要了解应用程序清单的格式和属性，需要参考图形 API [应用程序实体][APPLICATION-ENTITY] 文档。 可通过应用程序清单上传执行的更新示例包括：\r \r - 声明 Web API 公开的权限范围 (oauth2Permissions)。 有关使用 oauth2Permissions 委派权限范围实现用户模拟的信息，请参阅[将应用程序与 Azure Active Directory 集成][INTEGRATING-APPLICATIONS-AAD]中的“向其他应用程序公开 Web API”。 如前所述，图形 API [实体和复杂类型][APPLICATION-ENTITY]参考文章中介绍了应用程序实体属性，包括属于 [OAuth2Permission][APPLICATION-ENTITY-OAUTH2-PERMISSION] 类型集合的 oauth2Permissions 属性。\r - 声明应用公开的应用程序角色 (appRoles)。 应用程序实体的 appRoles 属性是 [AppRole][APPLICATION-ENTITY-APP-ROLE]类型的集合。 请参阅 [使用 Azure AD 在云应用程序中执行基于角色的访问控制][RBAC-CLOUD-APPS-AZUREAD] 一文，以获取实现示例。\r - 声明已知的客户端应用程序 (knownClientApplications)，可让你以逻辑方式将指定客户端应用程序的许可绑定到资源/Web API。\r - 请求 Azure AD 对登录用户发出组成员资格声明 (groupMembershipClaims)。  也可将此配置为发出有关用户目录角色成员资格的声明。 请参阅 [使用 AD 组在云应用程序中执行授权][AAD-GROUPS-FOR-AUTHORIZATION] 一文，以获取实现示例。\r - 允许应用程序支持 OAuth 2.0 隐式授权流 (oauth2AllowImplicitFlow)。 这种类型的授权流可用于嵌入式 JavaScript 网页或单页应用程序 (SPA)。 有关隐式授权许可的详细信息，请参阅 [了解 Azure Active Directory 中的 OAuth2 隐式授予流][IMPLICIT-GRANT]。\r - 允许使用 X509 证书作为密钥 (keyCredentials)。 有关实现示例，请参阅文章[在 Office 365 中构建服务和守护程序应用][O365-SERVICE-DAEMON-APPS]和 [使用 Azure Resource Manager API 进行身份验证的开发人员指南][DEV-GUIDE-TO-AUTH-WITH-ARM]。\r - 为应用程序（标识符 URI[]）添加新的应用 ID URI。 应用 ID URI 用于唯一标识其 Azure AD 租户中的应用程序（或是通过已验证的自定义域限定多个租户方案时跨多个 Azure AD 租户中的应用程序）。 在请求资源应用程序的权限，或获取资源应用程序的访问令牌时使用应用程序 ID URI。 更新此元素时，相应的服务主体的 servicePrincipalNames[] 集合将做出同样的更新，该集合位于应用程序的主租户中。\r \r 使用应用程序清单还能很好地跟踪应用程序注册状态。 由于它以 JSON 格式提供，因此文件表示形式可以签入源代码管理，以及应用程序的源代码。\r \r ## <a name=\"step-by-step-example\"></a>分步示例\r 现在，让我们逐步了解通过应用程序清单更新应用程序标识配置所需执行的步骤。 我们重点演示前述示例之一，说明如何在资源应用程序中声明新的权限范围：\r \r 1. 导航到 [Azure 经典管理门户][AZURE-CLASSIC-PORTAL] ，使用具有服务管理员或协同管理员权限的帐户登录。\r 2. 在经过身份验证后，向下滚动并选择左侧导航面板中的 Azure“Active Directory”扩展 (1)，然后单击应用程序注册的 Azure AD 租户 (2)。\r \r     ![选择 Azure AD 租户][SELECT-AZURE-AD-TENANT]\r 3. 出现“目录”页时，单击页面顶部的“应用程序”(1) 以查看在租户中注册的应用程序列表。 然后在列表中找到要更新的应用程序并单击 (2)。\r \r     ![选择 Azure AD 租户][SELECT-AZURE-AD-APP]\r 4. 选择应用程序的主页后，注意页面底部的“管理清单”功能 (1)。 如果单击此链接，系统将提示下载或上传 JSON 清单文件。 单击“下载清单”(2)。 随后即会出现下载确认对话框，提示你单击“下载清单”(3) 进行确认。然后，可打开文件或将其保存到本地 (4)。\r \r     ![管理清单，下载选项][MANAGE-MANIFEST-DOWNLOAD]\r \r     ![下载清单][DOWNLOAD-MANIFEST]\r 5. 在此示例中，我们已在本地保存了文件，因此可以在编辑器中打开该文件，对 JSON 进行更改，并再次保存。 下面是 JSON 结构在 Visual Studio JSON 编辑器中的外观。 请注意，它遵循 [应用程序实体][APPLICATION-ENTITY] 的架构，如前所述：\r \r     ![更新清单 JSON][UPDATE-MANIFEST]\r \r     例如，假设要在资源应用程序 (API) 中实现/公开名为“Employees.Read.All”的新权限，你只需将新的/第二个元素添加到 oauth2Permissions 集合，如下所示：\r \r     ```\r     \"oauth2Permissions\": [\r     {\r     \"adminConsentDescription\": \"Allow the application to access MyWebApplication on behalf of the signed-in user.\",\r     \"adminConsentDisplayName\": \"Access MyWebApplication\",\r     \"id\": \"aade5b35-ea3e-481c-b38d-cba4c78682a0\",\r     \"isEnabled\": true,\r     \"type\": \"User\",\r     \"userConsentDescription\": \"Allow the application to access MyWebApplication on your behalf.\",\r     \"userConsentDisplayName\": \"Access MyWebApplication\",\r     \"value\": \"user_impersonation\"\r     },\r     {\r     \"adminConsentDescription\": \"Allow the application to have read-only access to all Employee data.\",\r     \"adminConsentDisplayName\": \"Read-only access to Employee records\",\r     \"id\": \"2b351394-d7a7-4a84-841e-08a6a17e4cb8\",\r     \"isEnabled\": true,\r     \"type\": \"User\",\r     \"userConsentDescription\": \"Allow the application to have read-only access to your Employee data.\",\r     \"userConsentDisplayName\": \"Read-only access to your Employee records\",\r     \"value\": \"Employees.Read.All\"\r     }\r     ],\r     ```\r \r     条目必须唯一，因此必须为 `\"id\"` 属性生成新的全局唯一 ID (GUID)。 在本例中，由于我们指定了 `\"type\": \"User\"`，此权限可由资源/API 应用程序注册所在的 Azure AD 租户所验证的任何帐户同意。 此操作授予客户端应用程序代表帐户进行访问的权限。 说明和显示名称字符串将在同意期间使用，并显示在 Azure 经典门户中。\r 6. 完成更新清单后，请返回到 Azure 经典门户中的 Azure AD 应用程序页并再次单击“管理清单”功能 (1)。 但这次请选择“上传清单”选项 (2)。 与下载时类似，你将看到另一个对话框，提示你选择 JSON 文件的位置。 单击“浏览文件...”(3)，使用“选择要上传的文件”对话框选择 JSON 文件 (4)，然后按下“打开”。 对话框消失后，请选择“确定”复选标记 (5)，随即会上传清单。  \r \r     ![管理清单，上传选项][MANAGE-MANIFEST-UPLOAD]\r \r     ![上传清单 JSON][UPLOAD-MANIFEST]\r \r     ![上传清单 JSON - 确认][UPLOAD-MANIFEST-CONFIRM]\r \r 保存清单后，即可允许注册的客户端应用程序访问上面添加的新权限。 此时可以使用 Azure 经典管理门户的 Web UI，不必编辑客户端应用程序的清单：  \r \r 1. 首先，转到要添加新 API 的访问权限的客户端应用程序的“配置”页，并单击“添加应用程序”按钮。\r 2. 屏幕中会显示租户中已注册的资源应用程序 (API) 的列表。 单击资源应用程序名称旁边的加号 (+) 进行选择。  \r 3. 然后，单击右下角的复选标记。\r 4. 返回到客户端配置页的“添加应用程序”部分时，可在列表中看到新的资源应用程序。 如果将光标转到该行右侧的“委派的权限”部分上方，可以看到显示的下拉列表。 单击该列表，并选择新权限，以将其添加到客户端请求的权限列表。 注意：此新权限存储在客户端应用程序标识配置的“requiredResourceAccess”集合属性中。\r \r ![针对其他应用程序的权限][PERMS-TO-OTHER-APPS]\r \r ![针对其他应用程序的权限][PERMS-SELECT-APP]\r \r ![针对其他应用程序的权限][PERMS-SELECT-PERMS]\r \r 就这么简单。 现在，你的应用程序使用其新标识配置来运行。\r \r ## <a name=\"next-steps\"></a>后续步骤\r - 有关 Azure AD 中应用程序的应用程序对象与服务主体对象之间关系的详细信息，请参阅 [Azure AD 中的应用程序对象和服务主体对象][AAD-APP-OBJECTS]。\r - 请参阅 [Azure AD 开发人员术语表][AAD-DEVELOPER-GLOSSARY]，了解某些核心的 Azure Active Directory (AD) 开发人员概念的定义。\r \r 欢迎使用以下 DISQUS 意见部分提供反馈，以帮助我们改进与制作内容。\r \r <!--Image references-->\r [DOWNLOAD-MANIFEST]: ./media/active-directory-application-manifest/download-manifest.png\r [MANAGE-MANIFEST-DOWNLOAD]: ./media/active-directory-application-manifest/manage-manifest-download.png\r [MANAGE-MANIFEST-UPLOAD]: ./media/active-directory-application-manifest/manage-manifest-upload.png\r [PERMS-SELECT-APP]: ./media/active-directory-application-manifest/portal-perms-select-app.png\r [PERMS-SELECT-PERMS]: ./media/active-directory-application-manifest/portal-perms-select-perms.png\r [PERMS-TO-OTHER-APPS]: ./media/active-directory-application-manifest/portal-perms-to-other-apps.png\r [SELECT-AZURE-AD-APP]: ./media/active-directory-application-manifest/select-azure-ad-application.png\r [SELECT-AZURE-AD-TENANT]: ./media/active-directory-application-manifest/select-azure-ad-tenant.png\r [UPDATE-MANIFEST]: ./media/active-directory-application-manifest/update-manifest.png\r [UPLOAD-MANIFEST]: ./media/active-directory-application-manifest/upload-manifest.png\r [UPLOAD-MANIFEST-CONFIRM]: ./media/active-directory-application-manifest/upload-manifest-confirm.png\r \r <!--article references -->\r [AAD-APP-OBJECTS]: active-directory-application-objects.md\r [AAD-DEVELOPER-GLOSSARY]: active-directory-dev-glossary.md\r [AAD-GROUPS-FOR-AUTHORIZATION]: http://www.dushyantgill.com/blog/2014/12/10/authorization-cloud-applications-using-ad-groups/\r [ADD-UPD-RMV-APP]: active-directory-integrating-applications.md\r [APPLICATION-ENTITY]: https://msdn.microsoft.com/Library/Azure/Ad/Graph/api/entity-and-complex-type-reference#application-entity\r [APPLICATION-ENTITY-APP-ROLE]: https://msdn.microsoft.com/Library/Azure/Ad/Graph/api/entity-and-complex-type-reference#approle-type\r [APPLICATION-ENTITY-OAUTH2-PERMISSION]: https://msdn.microsoft.com/Library/Azure/Ad/Graph/api/entity-and-complex-type-reference#oauth2permission-type\r [AZURE-CLASSIC-PORTAL]: https://manage.windowsazure.cn\r [DEV-GUIDE-TO-AUTH-WITH-ARM]: http://www.dushyantgill.com/blog/2015/05/23/developers-guide-to-auth-with-azure-resource-manager-api/\r [GRAPH-API]: active-directory-graph-api.md\r [IMPLICIT-GRANT]: active-directory-dev-understanding-oauth2-implicit-grant.md\r [INTEGRATING-APPLICATIONS-AAD]: active-directory-integrating-applications.md\r [O365-PERM-DETAILS]: https://msdn.microsoft.com/office/office365/HowTo/application-manifest\r [O365-SERVICE-DAEMON-APPS]: https://msdn.microsoft.com/office/office365/howto/building-service-apps-in-office-365\r [RBAC-CLOUD-APPS-AZUREAD]: http://www.dushyantgill.com/blog/2014/12/10/roles-based-access-control-in-cloud-applications-using-azure-ad/\r \r <!--Update_Description: wording update -->\r "}