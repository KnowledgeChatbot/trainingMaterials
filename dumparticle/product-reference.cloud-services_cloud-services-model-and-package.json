{"Title":"什么是云服务模型和包","Description":"描述 Azure 中的云服务模型（.csdef、.cscfg）和包 (.cspkg)","Content":"# <a name=\"what-is-the-cloud-service-model-and-how-do-i-package-it\"></a>什么是云服务模型以及如何将其打包？\r 云服务由以下三个组件创建：服务定义 (.csdef)、服务配置 (.cscfg) 和服务包 (.cspkg)。 **ServiceDefinition.csdef** 和 **ServiceConfig.cscfg** 文件都基于 XML，同时介绍云服务的结构及其配置方式；统称为模型。 **ServicePackage.cspkg** 是基于 **ServiceDefinition.csdef** 和其他文件生成的 zip 文件，它包含所有必需的基于二进制的依赖项。 Azure 可从 **ServicePackage.cspkg** 和 **ServiceConfig.cscfg** 两者创建云服务。\r \r 云服务在 Azure 中开始运行后，可以通 **ServiceConfig.cscfg** 文件重新进行配置，但不能更改定义。\r \r ## <a name=\"what-would-you-like-to-know-more-about\"></a>想了解哪方面的详细信息？\r \r * 我想了解有关 [ServiceDefinition.csdef](#csdef) 和 [ServiceConfig.cscfg](#cscfg) 文件的详细信息。\r * 我知道了，请提供有关可配置内容的 [示例](#next-steps) 。\r * 我想要创建 [ServicePackage.cspkg](#cspkg)。\r * 我正在使用 Visual Studio，我想要...\r   * [创建云服务][vs_create]\r   * [重新配置现有云服务][vs_reconfigure]\r   * [部署云服务项目][vs_deploy]\r   * [通过远程桌面连接到云服务实例][remotedesktop]\r \r ## <a name=\"csdef\"></a> ServiceDefinition.csdef\r **ServiceDefinition.csdef** 文件指定 Azure 用于配置云服务的设置。 [Azure Service Definition Schema (.csdef File)](https://msdn.microsoft.com/zh-cn/library/azure/ee758711.aspx)（Azure 服务定义架构（.csdef 文件））为服务定义文件提供允许的格式。 以下示例显示了可为 Web 角色和辅助角色定义的设置：\r \r ```xml\r <?xml version=\"1.0\" encoding=\"utf-8\"?>\r <ServiceDefinition name=\"MyServiceName\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2008/10/ServiceDefinition\">\r   <WebRole name=\"WebRole1\" vmsize=\"Medium\">\r     <Sites>\r       <Site name=\"Web\">\r         <Bindings>\r           <Binding name=\"HttpIn\" endpointName=\"HttpIn\" />\r         </Bindings>\r       </Site>\r     </Sites>\r     <Endpoints>\r       <InputEndpoint name=\"HttpIn\" protocol=\"http\" port=\"80\" />\r       <InternalEndpoint name=\"InternalHttpIn\" protocol=\"http\" />\r     </Endpoints>\r     <Certificates>\r       <Certificate name=\"Certificate1\" storeLocation=\"LocalMachine\" storeName=\"My\" />\r     </Certificates>\r     <Imports>\r       <Import moduleName=\"Connect\" />\r       <Import moduleName=\"Diagnostics\" />\r       <Import moduleName=\"RemoteAccess\" />\r       <Import moduleName=\"RemoteForwarder\" />\r     </Imports>\r     <LocalResources>\r       <LocalStorage name=\"localStoreOne\" sizeInMB=\"10\" />\r       <LocalStorage name=\"localStoreTwo\" sizeInMB=\"10\" cleanOnRoleRecycle=\"false\" />\r     </LocalResources>\r     <Startup>\r       <Task commandLine=\"Startup.cmd\" executionContext=\"limited\" taskType=\"simple\" />\r     </Startup>\r   </WebRole>\r \r   <WorkerRole name=\"WorkerRole1\">\r     <ConfigurationSettings>\r       <Setting name=\"DiagnosticsConnectionString\" />\r     </ConfigurationSettings>\r     <Imports>\r       <Import moduleName=\"RemoteAccess\" />\r       <Import moduleName=\"RemoteForwarder\" />\r     </Imports>\r     <Endpoints>\r       <InputEndpoint name=\"Endpoint1\" protocol=\"tcp\" port=\"10000\" />\r       <InternalEndpoint name=\"Endpoint2\" protocol=\"tcp\" />\r     </Endpoints>\r   </WorkerRole>\r </ServiceDefinition>\r ```\r \r 可以参考 [服务定义架构](https://msdn.microsoft.com/library/azure/ee758711.aspx) 更好地了解此处使用的 XML 架构，而以下是部分元素的快速说明：\r \r **Sites**\r 包含 IIS7 中承载的网站或 Web 应用程序的定义。\r \r **InputEndpoints** \r 包含用于联系云服务的终结点的定义。\r \r **InternalEndpoints** \r 包含角色实例用于相互通信的终结点的定义。\r \r **ConfigurationSettings** \r 包含特定角色功能的设置定义。\r \r **Certificates** \r 包含角色所需证书的定义。前面的代码示例显示了用于 Azure Connect 的配置的证书。\r \r **LocalResources** \r 包含本地存储资源的定义。本地存储资源是角色实例运行于的虚拟机的文件系统中的保留目录。\r \r **Imports** \r 包含已导入模块的定义。前面的代码示例显示了远程桌面连接和 Azure Connect 的模块。\r \r **Startup** \r 包含在角色启动时运行的任务。任务在 .cmd 文件或可执行文件中定义。\r \r ## <a name=\"cscfg\"></a> ServiceConfiguration.cscfg\r 云服务设置配置由 **ServiceConfiguration.cscfg** 文件中的值确定。 指定要为此文件中每个角色部署的实例数。 在服务定义文件中定义的配置设置值已添加到服务配置文件中。 与云服务相关联的所有管理证书的指纹也会添加到该文件中。 [Azure Service Configuration Schema (.cscfg File)](https://msdn.microsoft.com/zh-cn/library/azure/ee758710.aspx)（Azure 服务配置架构（.cscfg 文件））为服务配置文件提供允许的格式。\r \r 服务配置文件不与应用程序一起打包，而是作为单独的文件上传到 Azure 并用于配置云服务。无需重新部署云服务即可上传新的服务配置文件。云服务正在运行时可以更改云服务的配置值。以下示例显示了可为 Web 角色和辅助角色定义的配置设置：\r \r ```xml\r <?xml version=\"1.0\"?>\r <ServiceConfiguration serviceName=\"MyServiceName\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2008/10/ServiceConfiguration\">\r   <Role name=\"WebRole1\">\r     <Instances count=\"2\" />\r     <ConfigurationSettings>\r       <Setting name=\"SettingName\" value=\"SettingValue\" />\r     </ConfigurationSettings>\r \r     <Certificates>\r       <Certificate name=\"CertificateName\" thumbprint=\"CertThumbprint\" thumbprintAlgorithm=\"sha1\" />\r       <Certificate name=\"Microsoft.WindowsAzure.Plugins.RemoteAccess.PasswordEncryption\"\r          thumbprint=\"CertThumbprint\" thumbprintAlgorithm=\"sha1\" />\r     </Certificates>\r   </Role>\r </ServiceConfiguration>\r ```\r \r 可以参考[服务配置架构](https://msdn.microsoft.com/zh-cn/library/azure/ee758710.aspx)以更好了解此处使用的 XML 架构，而以下是元素的快速说明：\r \r **实例**  \r 为角色配置运行角色实例数。 若要防止云服务在升级期间可能变得不可用，建议部署面向 web 角色的多个实例。 部署多个实例即表示遵守 [Azure 计算服务级别协议 (SLA)](https://www.azure.cn/support/legal/sla/) 中的准则，此协议可以保证在为一个服务部署了两个或多个角色实例时，面向 Internet 的角色拥有 99.95% 的外部连接。\r \r **ConfigurationSettings**\r 为角色配置运行实例的设置。`<Setting>` 元素的名称必须与服务定义文件中的设置定义匹配。\r \r **Certificates**  \r 配置服务使用的证书。 前面的代码示例演示如何定义 RemoteAccess 模块的证书。 *指纹*属性的值必须设置为要使用的证书的指纹。\r \r <p/>\r \r > [!NOTE]\r > 通过使用文本编辑器，可以将证书的指纹添加到配置文件中。 或者，可以在 Visual Studio 中角色的“属性”页的“证书”选项卡上添加值。\r > \r > \r \r ## <a name=\"defining-ports-for-role-instances\"></a>定义角色实例的端口\r Azure 仅允许 Web 角色有一个入口点。 即所有通信都通过一个 IP 地址完成。 可以通过配置主机头使请求指向正确的位置来配置网站共享一个端口。 此外，可将应用程序配置为侦听 IP 地址上的已知端口。\r \r 以下示例显示了具有网站和 Web 应用程序的 Web 角色的配置。该网站配置为端口 80 上的默认入口位置，Web 应用程序配置为接收来自名为“mail.mysite.chinacloudapp.cn”的备用主机标头的请求。\r \r ```xml\r     <WebRole>\r       <ConfigurationSettings>\r         <Setting name=\"DiagnosticsConnectionString\" />\r       </ConfigurationSettings>\r       <Endpoints>\r         <InputEndpoint name=\"HttpIn\" protocol=\"http\" port=\"80\" />\r         <InputEndpoint name=\"Https\" protocol=\"https\" port=\"443\" certificate=\"SSL\"/>\r         <InputEndpoint name=\"NetTcp\" protocol=\"tcp\" port=\"808\" certificate=\"SSL\"/>\r       </Endpoints>\r       <LocalResources>\r         <LocalStorage name=\"Sites\" cleanOnRoleRecycle=\"true\" sizeInMB=\"100\" />\r       </LocalResources>\r       <Site name=\"Mysite\" packageDir=\"Sites\\Mysite\">\r         <Bindings>\r           <Binding name=\"http\" endpointName=\"HttpIn\" />\r           <Binding name=\"https\" endpointName=\"Https\" />\r           <Binding name=\"tcp\" endpointName=\"NetTcp\" />\r         </Bindings>\r       </Site>\r       <Site name=\"MailSite\" packageDir=\"MailSite\">\r         <Bindings>\r           <Binding name=\"mail\" endpointName=\"HttpIn\" hostheader=\"mail.mysite.chinacloudapp.cn\" />\r         </Bindings>\r         <VirtualDirectory name=\"artifacts\" />\r         <VirtualApplication name=\"storageproxy\">\r           <VirtualDirectory name=\"packages\" packageDir=\"Sites\\storageProxy\\packages\"/>\r         </VirtualApplication>\r       </Site>\r     </WebRole>\r ```\r \r ## <a name=\"changing-the-configuration-of-a-role\"></a>更改角色的配置\r 当云服务在 Azure 中运行时，可以更新其配置而无需使服务处于脱机状态。 要更改配置信息，可以上传新的配置文件或就地编辑配置文件，并将其应用于正在运行的服务。 可对服务配置进行以下更改：\r \r - **更改配置设置的值**\r 当配置设置改变时，角色实例可以选择在实例处于联机状态时应用此更改，或选择正常回收实例并在实例处于脱机状态时应用此更改。\r \r - **更改角色实例的服务拓扑**\r 拓扑更改不会影响正在运行的实例，但正在删除实例的情况除外。所有剩余的实例通常不需要回收；但可以选择回收角色实例以响应拓扑更改。\r \r - **更改证书指纹**\r 仅可在角色实例处于脱机状态时更新一个证书。如果在角色实例处于联机状态时添加、删除或更改了某个证书，则 Azure 会使实例脱机以更新证书，并在更改完成后使其重新联机。\r \r ### <a name=\"handling-configuration-changes-with-service-runtime-events\"></a>使用服务运行时事件处理配置更改\r [Azure 运行时库](https://msdn.microsoft.com/zh-cn/library/azure/mt419365.aspx)包括 [Microsoft.WindowsAzure.ServiceRuntime](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.serviceruntime.aspx) 命名空间，它为与 Azure 环境（来自角色实例中运行的代码）的交互提供类。 [RoleEnvironment](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.serviceruntime.roleenvironment.aspx) 类定义在配置更改前后引发的以下事件：\r \r - [Changing](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.serviceruntime.roleenvironment.changing.aspx) 事件  \r   此事件发生在配置更改应用于某个角色的指定实例之前，使你有机会记下角色实例（如有必要）。\r - [Changed](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.serviceruntime.roleenvironment.changed.aspx) 事件  \r   发生在配置更改已应用于某个角色的指定实例之后。\r \r > [!NOTE]\r > 由于证书更改始终使角色实例处于脱机状态，因此不会引发 RoleEnvironment.Changing 或 RoleEnvironment.Changed 事件。\r \r ## <a name=\"cspkg\"></a> ServicePackage.cspkg\r 要将应用程序部署为 Azure 中的云服务，必须首先以适当的格式打包该应用程序。 可以使用 CSPack 命令行工具（与 [Azure SDK](https://www.azure.cn/downloads/) 一起安装）创建包文件，作为 Visual Studio 的替代。\r \r **CSPack** 使用服务定义文件和服务配置文件的内容来定义包的内容。 CSPack 生成可以使用 [Azure 门户](./cloud-services-how-to-create-deploy-portal.md#create-and-deploy) 上传到 Azure 的应用程序包文件 (.cspkg)。 默认情况下，该应用程序包名为 `[ServiceDefinitionFileName].cspkg`，但可以通过使用 CSPack 的 `/out` 选项指定不同的名称。\r \r **CSPack** 位于 `C:\\Program Files\\Microsoft SDKs\\Azure\\.NET SDK[sdk-version]\\bin`\r \r >[!NOTE]\r CSPack.exe（在 Windows 中）可通过运行随 SDK 一起安装的“Azure 命令提示符”快捷方式使用。\r >  \r > 运行 CSPack.exe 程序本身来查看有关所有可能的开关和命令的文档。\r \r <p />\r \r >[!TIP]\r 在 Azure 计算模拟器中本地运行云服务时，使用“/copyonly”选项。此选项将应用程序的二进制文件复制到目录布局，以便在计算模拟器中运行。\r \r ### <a name=\"example-command-to-package-a-cloud-service\"></a>打包云服务的示例命令\r 以下示例创建包含 Web 角色信息的应用程序包。该命令指定待使用的服务定义文件、可以找到二进制文件的目录以及包文件名称。\r \r ```cmd\r cspack [DirectoryName]\\[ServiceDefinition]\r        /role:[RoleName];[RoleBinariesDirectory]\r        /sites:[RoleName];[VirtualPath];[PhysicalPath]\r        /out:[OutputFileName]\r ```\r \r 如果应用程序包含 Web 角色和辅助角色，则使用以下命令：\r \r ```cmd\r cspack [DirectoryName]\\[ServiceDefinition]\r        /out:[OutputFileName]\r        /role:[RoleName];[RoleBinariesDirectory]\r        /sites:[RoleName];[VirtualPath];[PhysicalPath]\r        /role:[RoleName];[RoleBinariesDirectory];[RoleAssemblyName]\r ```\r \r 其中变量如下所示定义：\r \r | 变量 | 值 |\r | ------------------------- | ----- |\r | \\[DirectoryName\\]         | 包含 Azure 项目 .csdef 文件的根项目目录下的子目录。|\r | \\[ServiceDefinition\\]     | 服务定义文件的名称。 默认情况下，此文件名为 ServiceDefinition.csdef。  |\r | \\[OutputFileName\\]        | 生成的包文件的名称。 通常，此值设为该应用程序的名称。 如果未指定任何文件名称，则应用程序包将创建为 \\[ApplicationName\\].cspkg。|\r | \\[RoleName\\]              | 在服务定义文件中定义的角色的名称。|\r | \\[RoleBinariesDirectory] | 该角色二进制文件的位置。|\r | \\[VirtualPath\\]           | 在服务定义的站点部分中定义的每个虚拟路径的物理目录。|\r | \\[PhysicalPath\\]          | 在服务定义的站点节点中定义的每个虚拟路径的内容的物理目录。|\r | \\[RoleAssemblyName\\]      | 角色的二进制文件的名称。| \r \r ## <a name=\"next-steps\"></a> 后续步骤\r \r 我正在创建云服务包，并且我想要...\r \r * [为云服务实例设置远程桌面][remotedesktop]\r * [部署云服务项目][deploy]\r \r 我正在使用 Visual Studio，我想要...\r \r * [创建新的云服务][vs_create]\r * [重新配置现有云服务][vs_reconfigure]\r * [部署云服务项目][vs_deploy]\r * [为云服务实例设置远程桌面][vs_remote]\r \r [deploy]: cloud-services-how-to-create-deploy-portal.md\r [remotedesktop]: cloud-services-role-enable-remote-desktop-new-portal.md\r [vs_remote]: ../vs-azure-tools-remote-desktop-roles.md\r [vs_deploy]: ../vs-azure-tools-cloud-service-publish-set-up-required-services-in-visual-studio.md\r [vs_reconfigure]: ../vs-azure-tools-configure-roles-for-cloud-service.md\r [vs_create]: ../vs-azure-tools-azure-project-create.md\r \r <!--Update_Description:update wording and link references-->"}