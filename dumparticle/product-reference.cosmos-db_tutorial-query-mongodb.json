{"Title":"Azure Cosmos DB：如何使用 MongoDB API 进行查询？","Description":"了解如何使用 Azure Cosmos DB 的 MongoDB API 进行查询","Content":"# <a name=\"azure-cosmos-db-how-to-query-with-api-for-mongodb\"></a>Azure Cosmos DB：如何使用 MongoDB API 进行查询？\r \r Azure Cosmos DB [MongoDB API](mongodb-introduction.md) 支持 [MongoDB shell 查询](https://docs.mongodb.com/manual/tutorial/query-documents/)。 \r \r 本文涵盖以下任务： \r \r > [!div class=\"checklist\"]\r > * 使用 MongoDB 查询数据\r \r ## <a name=\"sample-document\"></a>示例文档\r \r 本文中的查询使用下面的示例文档。\r \r ```json\r {\r   \"id\": \"WakefieldFamily\",\r   \"parents\": [\r       { \"familyName\": \"Wakefield\", \"givenName\": \"Robin\" },\r       { \"familyName\": \"Miller\", \"givenName\": \"Ben\" }\r   ],\r   \"children\": [\r       {\r         \"familyName\": \"Merriam\", \r         \"givenName\": \"Jesse\", \r         \"gender\": \"female\", \"grade\": 1,\r         \"pets\": [\r             { \"givenName\": \"Goofy\" },\r             { \"givenName\": \"Shadow\" }\r         ]\r       },\r       { \r         \"familyName\": \"Miller\", \r          \"givenName\": \"Lisa\", \r          \"gender\": \"female\", \r          \"grade\": 8 }\r   ],\r   \"address\": { \"state\": \"NY\", \"county\": \"Manhattan\", \"city\": \"NY\" },\r   \"creationDate\": 1431620462,\r   \"isRegistered\": false\r }\r ```\r ## <a name=\"examplequery1\"></a>示例查询 1 \r \r 在上述家庭示例文档中，以下查询返回其 ID 字段匹配 `WakefieldFamily` 的文档。\r \r **查询**\r \r     db.families.find({ id: \"WakefieldFamily\"})\r \r **结果**\r \r     {\r     \"_id\": \"ObjectId(\\\"58f65e1198f3a12c7090e68c\\\")\",\r     \"id\": \"WakefieldFamily\",\r     \"parents\": [\r       {\r         \"familyName\": \"Wakefield\",\r         \"givenName\": \"Robin\"\r       },\r       {\r         \"familyName\": \"Miller\",\r         \"givenName\": \"Ben\"\r       }\r     ],\r     \"children\": [\r       {\r         \"familyName\": \"Merriam\",\r         \"givenName\": \"Jesse\",\r         \"gender\": \"female\",\r         \"grade\": 1,\r         \"pets\": [\r           { \"givenName\": \"Goofy\" },\r           { \"givenName\": \"Shadow\" }\r         ]\r       },\r       {\r         \"familyName\": \"Miller\",\r         \"givenName\": \"Lisa\",\r         \"gender\": \"female\",\r         \"grade\": 8\r       }\r     ],\r     \"address\": {\r       \"state\": \"NY\",\r       \"county\": \"Manhattan\",\r       \"city\": \"NY\"\r     },\r     \"creationDate\": 1431620462,\r     \"isRegistered\": false\r     }\r \r ## <a name=\"examplequery2\"></a>示例查询 2 \r \r 下一个查询返回该家庭中的所有子女。 \r \r **查询**\r \r     db.familes.find( { id: \"WakefieldFamily\" }, { children: true } )\r \r **结果**\r \r     {\r     \"_id\": \"ObjectId(\"58f65e1198f3a12c7090e68c\")\",\r     \"children\": [\r       {\r         \"familyName\": \"Merriam\",\r         \"givenName\": \"Jesse\",\r         \"gender\": \"female\",\r         \"grade\": 1,\r         \"pets\": [\r           { \"givenName\": \"Goofy\" },\r           { \"givenName\": \"Shadow\" }\r         ]\r       },\r       {\r         \"familyName\": \"Miller\",\r         \"givenName\": \"Lisa\",\r         \"gender\": \"female\",\r         \"grade\": 8\r       }\r     ]\r     }\r \r ## <a name=\"examplequery3\"></a>示例查询 3 \r \r 下一个查询返回所有已注册的家庭。 \r \r **查询**\r \r     db.families.find( { \"isRegistered\" : true })\r **结果**不返回任何文档。 \r \r ## <a name=\"examplequery4\"></a>示例查询 4\r \r 下一个查询返回所有未注册的家庭。 \r \r **查询**\r \r     db.families.find( { \"isRegistered\" : false })\r **结果**\r \r      {\r     \"_id\": ObjectId(\"58f65e1198f3a12c7090e68c\"),\r     \"id\": \"WakefieldFamily\",\r     \"parents\": [{\r         \"familyName\": \"Wakefield\",\r         \"givenName\": \"Robin\"\r     }, {\r         \"familyName\": \"Miller\",\r         \"givenName\": \"Ben\"\r     }],\r     \"children\": [{\r         \"familyName\": \"Merriam\",\r         \"givenName\": \"Jesse\",\r         \"gender\": \"female\",\r         \"grade\": 1,\r         \"pets\": [{\r             \"givenName\": \"Goofy\"\r         }, {\r             \"givenName\": \"Shadow\"\r         }]\r     }, {\r         \"familyName\": \"Miller\",\r         \"givenName\": \"Lisa\",\r         \"gender\": \"female\",\r         \"grade\": 8\r     }],\r     \"address\": {\r         \"state\": \"NY\",\r         \"county\": \"Manhattan\",\r         \"city\": \"NY\"\r     },\r     \"creationDate\": 1431620462,\r     \"isRegistered\": false\r }\r \r ## <a name=\"examplequery5\"></a>示例查询 5\r \r 下一个查询返回所有未注册且所在州为纽约 (NY) 的家庭。 \r \r **查询**\r \r      db.families.find( { \"isRegistered\" : false, \"address.state\" : \"NY\" })\r \r **结果**\r \r      {\r     \"_id\": ObjectId(\"58f65e1198f3a12c7090e68c\"),\r     \"id\": \"WakefieldFamily\",\r     \"parents\": [{\r         \"familyName\": \"Wakefield\",\r         \"givenName\": \"Robin\"\r     }, {\r         \"familyName\": \"Miller\",\r         \"givenName\": \"Ben\"\r     }],\r     \"children\": [{\r         \"familyName\": \"Merriam\",\r         \"givenName\": \"Jesse\",\r         \"gender\": \"female\",\r         \"grade\": 1,\r         \"pets\": [{\r             \"givenName\": \"Goofy\"\r         }, {\r             \"givenName\": \"Shadow\"\r         }]\r     }, {\r         \"familyName\": \"Miller\",\r         \"givenName\": \"Lisa\",\r         \"gender\": \"female\",\r         \"grade\": 8\r     }],\r     \"address\": {\r         \"state\": \"NY\",\r         \"county\": \"Manhattan\",\r         \"city\": \"NY\"\r     },\r     \"creationDate\": 1431620462,\r     \"isRegistered\": false\r }\r \r ## <a name=\"examplequery6\"></a>示例查询 6\r \r 下一个查询返回子女读 8 年级的所有家庭。\r \r **查询**\r \r      db.families.find( { children : { $elemMatch: { grade : 8 }} } )\r \r **结果**\r \r      {\r     \"_id\": ObjectId(\"58f65e1198f3a12c7090e68c\"),\r     \"id\": \"WakefieldFamily\",\r     \"parents\": [{\r         \"familyName\": \"Wakefield\",\r         \"givenName\": \"Robin\"\r     }, {\r         \"familyName\": \"Miller\",\r         \"givenName\": \"Ben\"\r     }],\r     \"children\": [{\r         \"familyName\": \"Merriam\",\r         \"givenName\": \"Jesse\",\r         \"gender\": \"female\",\r         \"grade\": 1,\r         \"pets\": [{\r             \"givenName\": \"Goofy\"\r         }, {\r             \"givenName\": \"Shadow\"\r         }]\r     }, {\r         \"familyName\": \"Miller\",\r         \"givenName\": \"Lisa\",\r         \"gender\": \"female\",\r         \"grade\": 8\r     }],\r     \"address\": {\r         \"state\": \"NY\",\r         \"county\": \"Manhattan\",\r         \"city\": \"NY\"\r     },\r     \"creationDate\": 1431620462,\r     \"isRegistered\": false\r }\r \r ## <a name=\"examplequery7\"></a>示例查询 7\r \r 下一个查询返回有 3 个子女的家庭。\r \r **查询**\r \r       db.Family.find( {children: { $size:3} } )\r \r **结果**\r \r 不返回任何结果，因为子女数不超过 2。 仅当参数为 2 时此查询才能成功，并返回完整的文档。\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r 在本教程中，已完成以下内容：\r \r > [!div class=\"checklist\"]\r > * 现已了解如何使用 MongoDB 进行查询 \r \r 现可继续学习下一教程，了解如何全局分发数据。\r \r > [!div class=\"nextstepaction\"]\r > [全局分发数据](tutorial-global-distribution-documentdb.md)\r \r <!-- Update_Description: update meta properties -->"}