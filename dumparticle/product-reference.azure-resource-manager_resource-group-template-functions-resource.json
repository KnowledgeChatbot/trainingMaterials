{"Title":"Azure Resource Manager 模板函数 - 资源","Description":"介绍可在 Azure Resource Manager 模板中用于检索资源相关值的函数。","Content":"# <a name=\"resource-functions-for-azure-resource-manager-templates\"></a>用于 Azure Resource Manager 模板的资源函数\r \r Resource Manager 提供以下用于获取资源值的函数：\r \r * [listKeys 和 list{Value}](#listkeys)\r * [providers](#providers)\r * [reference](#reference)\r * [resourceGroup](#resourcegroup)\r * [resourceId](#resourceid)\r * [订阅](#subscription)\r \r 若要从参数、变量或当前部署获取值，请参阅 [Deployment value functions](resource-group-template-functions-deployment.md)（部署值函数）。\r \r <a id=\"listkeys\" />\r <a id=\"list\" />\r \r ## <a name=\"listkeys-and-listvalue\"></a>listKeys 和 list{Value}\r `listKeys(resourceName or resourceIdentifier, apiVersion)`\r \r `list{Value}(resourceName or resourceIdentifier, apiVersion)`\r \r 返回支持 list 操作的任何资源类型的值。 最常见的用法是 `listKeys`。 \r \r ### <a name=\"parameters\"></a>Parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | resourceName 或 resourceIdentifier |是 |字符串 |资源的唯一标识符。 |\r | apiVersion |是 |字符串 |资源运行时状态的 API 版本。 通常采用 **yyyy-mm-dd**格式。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r ListKeys 返回的对象采用以下格式：\r \r ```json\r {\r   \"keys\": [\r     {\r       \"keyName\": \"key1\",\r       \"permissions\": \"Full\",\r       \"value\": \"{value}\"\r     },\r     {\r       \"keyName\": \"key2\",\r       \"permissions\": \"Full\",\r       \"value\": \"{value}\"\r     }\r   ]\r }\r ```\r \r 其他列表函数具有不同的返回格式。 若要查看函数的格式，请将其包含在 outputs 节中，如示例模板所示。 \r \r ### <a name=\"remarks\"></a>备注\r \r 以 **list** 开头的任何操作都可用作模板中的函数。 可用操作不仅包括 listKeys，也包括 `list`、`listAdminKeys` 和 `listStatus` 等操作。 但是，不能使用请求正文中需要值的“list”操作。 例如，[列出帐户 SAS](https://docs.microsoft.com/rest/api/storagerp/storageaccounts#StorageAccounts_ListAccountSAS) 操作需要 signedExpiry 等请求正文参数，因此不能在模板中使用它。\r \r 若要确定哪些资源类型具有列表操作，请使用以下选项：\r \r * 查看资源提供程序的 [REST API 操作](https://docs.microsoft.com/rest/api/)，并查找列表操作。 例如，存储帐户具有 [listKeys 操作](https://docs.microsoft.com/rest/api/storagerp/storageaccounts#StorageAccounts_ListKeys)。\r * 使用 [Get-AzureRmProviderOperation](https://docs.microsoft.com/powershell/module/azurerm.resources/get-azurermprovideroperation) PowerShell cmdlet。 以下示例获取存储帐户的所有列表操作：\r \r   ```powershell\r   Get-AzureRmProviderOperation -OperationSearchString \"Microsoft.Storage/*\" | where {$_.Operation -like \"*list*\"} | FT Operation\r   ```\r * 使用以下 Azure CLI 命令，仅筛选列表操作：\r \r   ```azurecli\r   az provider operation show --namespace Microsoft.Storage --query \"resourceTypes[?name=='storageAccounts'].operations[].name | [?contains(@, 'list')]\"\r   ```\r \r 使用 [resourceId 函数](#resourceid)或格式 `{providerNamespace}/{resourceType}/{resourceName}` 指定资源。\r \r ### <a name=\"example\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/listkeys.json)演示如何从 outputs 节中的存储帐户返回主密钥和辅助密钥。\r \r ```json\r {\r   \"$schema\": \"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r   \"contentVersion\": \"1.0.0.0\",\r   \"parameters\": {\r       \"storageAccountName\": { \r           \"type\": \"string\"\r       }\r   },\r   \"resources\": [\r     {\r       \"name\": \"[parameters('storageAccountName')]\",\r       \"type\": \"Microsoft.Storage/storageAccounts\",\r       \"apiVersion\": \"2016-12-01\",\r       \"sku\": {\r         \"name\": \"Standard_LRS\"\r       },\r       \"kind\": \"Storage\",\r       \"location\": \"[resourceGroup().location]\",\r       \"tags\": {},\r       \"properties\": {\r       }\r     }\r   ],\r   \"outputs\": {\r       \"referenceOutput\": {\r           \"type\": \"object\",\r           \"value\": \"[listKeys(parameters('storageAccountName'), '2016-12-01')]\"\r       }\r     }\r }\r ``` \r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/listkeys.json --parameters storageAccountName=<your-storage-account>\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/listkeys.json -storageAccountName <your-storage-account>\r ```\r \r <a id=\"providers\" />\r \r ## <a name=\"providers\"></a>providers\r `providers(providerNamespace, [resourceType])`\r \r 返回有关资源提供程序及其支持的资源类型的信息。 如果未提供资源类型，该函数将返回资源提供程序支持的所有类型。\r \r ### <a name=\"parameters\"></a>Parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | providerNamespace |是 |字符串 |提供程序的命名空间 |\r | resourceType |否 |字符串 |指定的命名空间中的资源类型。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 将使用以下格式返回支持的每个类型： \r \r ```json\r {\r     \"resourceType\": \"{name of resource type}\",\r     \"locations\": [ all supported locations ],\r     \"apiVersions\": [ all supported API versions ]\r }\r ```\r \r 不保证返回值的数组排序。\r \r ### <a name=\"example\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/providers.json)演示如何使用 provider 函数：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"providerNamespace\": {\r             \"type\": \"string\"\r         },\r         \"resourceType\": {\r             \"type\": \"string\"\r         }\r     },\r     \"resources\": [],\r     \"outputs\": {\r         \"providerOutput\": {\r             \"value\": \"[providers(parameters('providerNamespace'), parameters('resourceType'))]\",\r             \"type\" : \"object\"\r         }\r     }\r }\r ```\r \r 对于 Microsoft.Web 资源提供程序和站点资源类型，上面的示例返回以下格式的对象：\r \r ```json\r {\r   \"resourceType\": \"sites\",\r   \"locations\": [\r     \"China East\",\r     \"China North\",\r     ...\r   ],\r   \"apiVersions\": [\r     \"2016-08-01\",\r     \"2016-03-01\",\r     \"2015-08-01-preview\",\r     \"2015-08-01\",\r     ...\r   ]\r }\r ```\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/providers.json --parameters providerNamespace=Microsoft.Web resourceType=sites\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/providers.json -providerNamespace Microsoft.Web -resourceType sites\r ```\r \r <a id=\"reference\" />\r \r ## <a name=\"reference\"></a>reference\r `reference(resourceName or resourceIdentifier, [apiVersion], ['Full'])`\r \r 返回表示资源的运行时状态的对象。\r \r ### <a name=\"parameters\"></a>Parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | resourceName 或 resourceIdentifier |是 |字符串 |资源的名称或唯一标识符。 |\r | apiVersion |否 |字符串 |指定的资源的 API 版本。 如果资源不是在同一模板中预配的，请包含此参数。 通常采用 **yyyy-mm-dd**格式。 |\r | 'Full' |否 |字符串 |一个值，指定是否要返回完整资源对象。 如果未指定 `'Full'`，仅返回资源的属性对象。 完整对象包括资源 ID 和位置等值。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 每种资源类型返回 reference 函数的不同属性。 该函数不返回单个预定义的格式。 同样，返回的值因是否指定了完整对象而有所不同。 若要查看资源类型的属性，请返回 outputs 节中的对象，如示例所示。\r \r ### <a name=\"remarks\"></a>备注\r \r reference 函数从运行时状态派生其值，因此不能在 variables 节中使用。 可以在模板的 outputs 节中使用它。 \r \r 如果在相同的模板内设置了引用的资源，则可使用 reference 函数来隐式声明一个资源依赖于另一个资源。 不需要同时使用 dependsOn 属性。 只有当引用的资源已完成部署后，才会对函数求值。\r \r 若要查看资源类型的属性名称和值，请创建一个模板，该模板返回 outputs 节中的对象。 如果有现有的该类型的资源，则模板只返回对象而不部署任何新资源。 \r \r 通常情况下，可以使用 reference 函数返回对象的特定值，例如 blob 终结点 URI 或完全限定的域名。\r \r ```json\r \"outputs\": {\r     \"BlobUri\": {\r         \"value\": \"[reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), '2016-01-01').primaryEndpoints.blob]\",\r         \"type\" : \"string\"\r     },\r     \"FQDN\": {\r         \"value\": \"[reference(concat('Microsoft.Network/publicIPAddresses/', parameters('ipAddressName')), '2016-03-30').dnsSettings.fqdn]\",\r         \"type\" : \"string\"\r     }\r }\r ```\r \r 需要不属于属性架构的资源值时，请使用 `'Full'`。 例如，若要设置密钥保管库访问策略，请获取虚拟机的标识属性。\r \r ```json\r {\r   \"type\": \"Microsoft.KeyVault/vaults\",\r   \"properties\": {\r     \"tenantId\": \"[reference(concat('Microsoft.Compute/virtualMachines/', variables('vmName')), '2017-03-30', 'Full').identity.tenantId]\",\r     \"accessPolicies\": [\r       {\r         \"tenantId\": \"[reference(concat('Microsoft.Compute/virtualMachines/', variables('vmName')), '2017-03-30', 'Full').identity.tenantId]\",\r         \"objectId\": \"[reference(concat('Microsoft.Compute/virtualMachines/', variables('vmName')), '2017-03-30', 'Full').identity.principalId]\",\r         \"permissions\": {\r           \"keys\": [\r             \"all\"\r           ],\r           \"secrets\": [\r             \"all\"\r           ]\r         }\r       }\r     ],\r     ...\r ```\r \r 有关前面模板的完整示例，请参阅[从 Windows 到 Key Vault](https://github.com/rjmax/AzureSaturday/blob/master/Demo02.ManagedServiceIdentity/demo08.msiWindowsToKeyvault.json)。 一个类似示例可用于 [Linux](https://github.com/rjmax/AzureSaturday/blob/master/Demo02.ManagedServiceIdentity/demo07.msiLinuxToArm.json)。\r \r ### <a name=\"example\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/referencewithstorage.json)部署一个资源并引用该资源。\r \r ```json\r {\r   \"$schema\": \"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r   \"contentVersion\": \"1.0.0.0\",\r   \"parameters\": {\r       \"storageAccountName\": { \r           \"type\": \"string\"\r       }\r   },\r   \"resources\": [\r     {\r       \"name\": \"[parameters('storageAccountName')]\",\r       \"type\": \"Microsoft.Storage/storageAccounts\",\r       \"apiVersion\": \"2016-12-01\",\r       \"sku\": {\r         \"name\": \"Standard_LRS\"\r       },\r       \"kind\": \"Storage\",\r       \"location\": \"[resourceGroup().location]\",\r       \"tags\": {},\r       \"properties\": {\r       }\r     }\r   ],\r   \"outputs\": {\r       \"referenceOutput\": {\r           \"type\": \"object\",\r           \"value\": \"[reference(parameters('storageAccountName'))]\"\r       },\r       \"fullReferenceOutput\": {\r         \"type\": \"object\",\r         \"value\": \"[reference(parameters('storageAccountName'), '2016-12-01', 'Full')]\"\r       }\r     }\r }\r ``` \r \r 上面的示例返回两个对象。 属性对象采用以下格式：\r \r ```json\r {\r    \"creationTime\": \"2017-10-09T18:55:40.5863736Z\",\r    \"primaryEndpoints\": {\r      \"blob\": \"https://examplestorage.blob.core.chinacloudapi.cn/\",\r      \"file\": \"https://examplestorage.file.core.chinacloudapi.cn/\",\r      \"queue\": \"https://examplestorage.queue.core.chinacloudapi.cn/\",\r      \"table\": \"https://examplestorage.table.core.chinacloudapi.cn/\"\r    },\r    \"primaryLocation\": \"chinaeast\",\r    \"provisioningState\": \"Succeeded\",\r    \"statusOfPrimary\": \"available\",\r    \"supportsHttpsTrafficOnly\": false\r }\r ```\r \r 完整对象采用以下格式：\r \r ```json\r {\r   \"apiVersion\":\"2016-12-01\",\r   \"location\":\"chinaeast\",\r   \"sku\": {\r     \"name\":\"Standard_LRS\",\r     \"tier\":\"Standard\"\r   },\r   \"tags\":{},\r   \"kind\":\"Storage\",\r   \"properties\": {\r     \"creationTime\":\"2017-10-09T18:55:40.5863736Z\",\r     \"primaryEndpoints\": {\r       \"blob\":\"https://examplestorage.blob.core.chinacloudapi.cn/\",\r       \"file\":\"https://examplestorage.file.core.chinacloudapi.cn/\",\r       \"queue\":\"https://examplestorage.queue.core.chinacloudapi.cn/\",\r       \"table\":\"https://examplestorage.table.core.chinacloudapi.cn/\"\r     },\r     \"primaryLocation\":\"chinaeast\",\r     \"provisioningState\":\"Succeeded\",\r     \"statusOfPrimary\":\"available\",\r     \"supportsHttpsTrafficOnly\":false\r   },\r   \"subscriptionId\":\"<subscription-id>\",\r   \"resourceGroupName\":\"functionexamplegroup\",\r   \"resourceId\":\"Microsoft.Storage/storageAccounts/examplestorage\",\r   \"referenceApiVersion\":\"2016-12-01\",\r   \"condition\":true,\r   \"isConditionTrue\":true,\r   \"isTemplateResource\":false,\r   \"isAction\":false,\r   \"provisioningOperation\":\"Read\"\r }\r ```\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/referencewithstorage.json --parameters storageAccountName=<your-storage-account>\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/referencewithstorage.json -storageAccountName <your-storage-account>\r ```\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/reference.json)引用未部署到此模板中的存储帐户。 同一资源组内已存在该存储帐户。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"parameters\": {\r         \"storageAccountName\": {\r             \"type\": \"string\"\r         }\r     },\r     \"resources\": [],\r     \"outputs\": {\r         \"ExistingStorage\": {\r             \"value\": \"[reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), '2016-01-01')]\",\r             \"type\" : \"object\"\r         }\r     }\r }\r ```\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/reference.json --parameters storageAccountName=<your-storage-account>\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/reference.json -storageAccountName <your-storage-account>\r ```\r \r <a id=\"resourcegroup\" />\r \r ## <a name=\"resourcegroup\"></a>resourceGroup\r `resourceGroup()`\r \r 返回表示当前资源组的对象。 \r \r ### <a name=\"return-value\"></a>返回值\r \r 返回的对象采用以下格式：\r \r ```json\r {\r   \"id\": \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}\",\r   \"name\": \"{resourceGroupName}\",\r   \"location\": \"{resourceGroupLocation}\",\r   \"tags\": {\r   },\r   \"properties\": {\r     \"provisioningState\": \"{status}\"\r   }\r }\r ```\r \r ### <a name=\"remarks\"></a>备注\r \r resourceGroup 函数的一个常见用途是在与资源组相同的位置中创建资源。 以下示例使用资源组位置来分配网站的位置。\r \r ```json\r \"resources\": [\r    {\r       \"apiVersion\": \"2016-08-01\",\r       \"type\": \"Microsoft.Web/sites\",\r       \"name\": \"[parameters('siteName')]\",\r       \"location\": \"[resourceGroup().location]\",\r       ...\r    }\r ]\r ```\r \r ### <a name=\"example\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/resourcegroup.json)返回资源组的属性。\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"resources\": [],\r     \"outputs\": {\r         \"resourceGroupOutput\": {\r             \"value\": \"[resourceGroup()]\",\r             \"type\" : \"object\"\r         }\r     }\r }\r ```\r \r 上述示例返回采用以下格式的对象：\r \r ```json\r {\r   \"id\": \"/subscriptions/{subscription-id}/resourceGroups/examplegroup\",\r   \"name\": \"examplegroup\",\r   \"location\": \"chinaeast\",\r   \"properties\": {\r     \"provisioningState\": \"Succeeded\"\r   }\r }\r ```\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/resourcegroup.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/resourcegroup.json \r ```\r \r <a id=\"resourceid\" />\r \r ## <a name=\"resourceid\"></a>resourceId\r `resourceId([subscriptionId], [resourceGroupName], resourceType, resourceName1, [resourceName2]...)`\r \r 返回资源的唯一标识符。 如果资源名称不确定或未设置在相同的模板内，请使用此函数。 \r \r ### <a name=\"parameters\"></a>Parameters\r \r | 参数 | 必选 | 类型 | 说明 |\r |:--- |:--- |:--- |:--- |\r | subscriptionId |否 |字符串（GUID 格式） |默认值为当前订阅。 如果需要检索另一个订阅中的资源，请指定此值。 |\r | resourceGroupName |否 |字符串 |默认值为当前资源组。 如果需要检索另一个资源组中的资源，请指定此值。 |\r | resourceType |是 |字符串 |资源类型，包括资源提供程序命名空间。 |\r | resourceName1 |是 |字符串 |资源的名称。 |\r | resourceName2 |否 |字符串 |下一个资源名称段（如果资源是嵌套的）。 |\r \r ### <a name=\"return-value\"></a>返回值\r \r 将使用以下格式返回标识符：\r \r ```json\r /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\r ```\r \r ### <a name=\"remarks\"></a>备注\r \r 指定的参数值取决于资源是否位于与当前部署相同的订阅和资源组中。\r \r 若要获取同一订阅和资源组中存储帐户的资源 ID，请使用：\r \r ```json\r \"[resourceId('Microsoft.Storage/storageAccounts','examplestorage')]\"\r ```\r \r 若要获取同一订阅但不同资源组中存储帐户的资源 ID，请使用：\r \r ```json\r \"[resourceId('otherResourceGroup', 'Microsoft.Storage/storageAccounts','examplestorage')]\"\r ```\r \r 若要获取不同订阅和资源组中存储帐户的资源 ID，请使用：\r \r ```json\r \"[resourceId('xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'otherResourceGroup', 'Microsoft.Storage/storageAccounts','examplestorage')]\"\r ```\r \r 若要获取不同资源组中数据库的资源 ID，请使用：\r \r ```json\r \"[resourceId('otherResourceGroup', 'Microsoft.SQL/servers/databases', parameters('serverName'), parameters('databaseName'))]\"\r ```\r \r 通常，在替代资源组中使用存储帐户或虚拟网络时，需要使用此函数。 以下示例演示了如何轻松使用外部资源组中的资源：\r \r ```json\r {\r   \"$schema\": \"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r   \"contentVersion\": \"1.0.0.0\",\r   \"parameters\": {\r       \"virtualNetworkName\": {\r           \"type\": \"string\"\r       },\r       \"virtualNetworkResourceGroup\": {\r           \"type\": \"string\"\r       },\r       \"subnet1Name\": {\r           \"type\": \"string\"\r       },\r       \"nicName\": {\r           \"type\": \"string\"\r       }\r   },\r   \"variables\": {\r       \"vnetID\": \"[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]\",\r       \"subnet1Ref\": \"[concat(variables('vnetID'),'/subnets/', parameters('subnet1Name'))]\"\r   },\r   \"resources\": [\r   {\r       \"apiVersion\": \"2015-05-01-preview\",\r       \"type\": \"Microsoft.Network/networkInterfaces\",\r       \"name\": \"[parameters('nicName')]\",\r       \"location\": \"[parameters('location')]\",\r       \"properties\": {\r           \"ipConfigurations\": [{\r               \"name\": \"ipconfig1\",\r               \"properties\": {\r                   \"privateIPAllocationMethod\": \"Dynamic\",\r                   \"subnet\": {\r                       \"id\": \"[variables('subnet1Ref')]\"\r                   }\r               }\r           }]\r        }\r   }]\r }\r ```\r \r ### <a name=\"example\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/resourceid.json)返回资源组中存储帐户的资源 ID：\r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"resources\": [],\r     \"outputs\": {\r         \"sameRGOutput\": {\r             \"value\": \"[resourceId('Microsoft.Storage/storageAccounts','examplestorage')]\",\r             \"type\" : \"string\"\r         },\r         \"differentRGOutput\": {\r             \"value\": \"[resourceId('otherResourceGroup', 'Microsoft.Storage/storageAccounts','examplestorage')]\",\r             \"type\" : \"string\"\r         },\r         \"differentSubOutput\": {\r             \"value\": \"[resourceId('11111111-1111-1111-1111-111111111111', 'otherResourceGroup', 'Microsoft.Storage/storageAccounts','examplestorage')]\",\r             \"type\" : \"string\"\r         },\r         \"nestedResourceOutput\": {\r             \"value\": \"[resourceId('Microsoft.SQL/servers/databases', 'serverName', 'databaseName')]\",\r             \"type\" : \"string\"\r         }\r     }\r }\r ```\r \r 上述示例中使用默认值的输出为：\r \r | 名称 | 类型 | 值 |\r | ---- | ---- | ----- |\r | sameRGOutput | String | /subscriptions/{current-sub-id}/resourceGroups/examplegroup/providers/Microsoft.Storage/storageAccounts/examplestorage |\r | differentRGOutput | String | /subscriptions/{current-sub-id}/resourceGroups/otherResourceGroup/providers/Microsoft.Storage/storageAccounts/examplestorage |\r | differentSubOutput | 字符串 | /subscriptions/11111111-1111-1111-1111-111111111111/resourceGroups/otherResourceGroup/providers/Microsoft.Storage/storageAccounts/examplestorage |\r | nestedResourceOutput | String | /subscriptions/{current-sub-id}/resourceGroups/examplegroup/providers/Microsoft.SQL/servers/serverName/databases/databaseName |\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/resourceid.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/resourceid.json \r ```\r \r <a id=\"subscription\" />\r \r ## <a name=\"subscription\"></a>subscription\r `subscription()`\r \r 返回有关当前部署的订阅的详细信息。 \r \r ### <a name=\"return-value\"></a>返回值\r \r 该函数返回以下格式：\r \r ```json\r {\r     \"id\": \"/subscriptions/{subscription-id}\",\r     \"subscriptionId\": \"{subscription-id}\",\r     \"tenantId\": \"{tenant-id}\",\r     \"displayName\": \"{name-of-subscription}\"\r }\r ```\r \r ### <a name=\"example\"></a>示例\r \r 以下[示例模板](https://github.com/Azure/azure-docs-json-samples/blob/master/azure-resource-manager/functions/subscription.json)显示了在 outputs 节中调用的 subscription 函数。 \r \r ```json\r {\r     \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r     \"contentVersion\": \"1.0.0.0\",\r     \"resources\": [],\r     \"outputs\": {\r         \"subscriptionOutput\": {\r             \"value\": \"[subscription()]\",\r             \"type\" : \"object\"\r         }\r     }\r }\r ```\r \r 要使用 Azure CLI 部署此示例模板，请使用：\r \r ```azurecli\r az group deployment create -g functionexamplegroup --template-uri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/subscription.json\r ```\r \r 要使用 PowerShell 部署此示例模板，请使用：\r \r ```powershell\r New-AzureRmResourceGroupDeployment -ResourceGroupName functionexamplegroup -TemplateUri https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/functions/subscription.json \r ```\r \r ## <a name=\"next-steps\"></a>后续步骤\r * 有关 Azure Resource Manager 模板中各部分的说明，请参阅 [Authoring Azure Resource Manager templates](resource-group-authoring-templates.md)（创作 Azure Resource Manager 模板）。\r * 若要合并多个模板，请参阅[将链接的模板与 Azure Resource Manager 配合使用](resource-group-linked-templates.md)。\r * 若要在创建资源类型时迭代指定的次数，请参阅[在 Azure Resource Manager 中创建多个资源实例](resource-group-create-multiple.md)。\r * 若要查看如何部署已创建的模板，请参阅[使用 Azure Resource Manager 模板部署应用程序](resource-group-template-deploy.md)。\r \r <!--Update_Description: update meta properties, add full parameter cmdlet sample and json file-->"}