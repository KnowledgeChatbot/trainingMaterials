{"Title":"安全地连接到 Azure Service Fabric 群集","Description":"介绍如何对访问 Service Fabric 群集的客户端进行身份验证，以及如何保护客户端与群集之间的通信。","Content":"# <a name=\"connect-to-a-secure-cluster\"></a>连接到安全群集\r \r 当客户端连接到 Service Fabric 群集节点时，可以使用证书安全性或 Azure Active Directory (AAD) 与客户端建立经过身份验证的安全通信。 此身份验证可确保只有经过授权的用户才能访问该群集和部署的应用程序，以及执行管理任务。  创建群集时，必须事先在该群集上启用证书或 AAD 安全性。  有关群集安全方案的详细信息，请参阅[群集安全性](service-fabric-cluster-security.md)。 如果要连接到使用证书保护的群集，请在连接到群集的计算机上[设置客户端证书](service-fabric-connect-to-secure-cluster.md#connectsecureclustersetupclientcert)。 \r \r <a id=\"connectsecureclustercli\"></a> \r \r ## <a name=\"connect-to-a-secure-cluster-using-azure-service-fabric-cli-sfctl\"></a>使用 Azure Service Fabric CLI (sfctl) 连接到安全群集\r \r 可以通过多种不同方式使用 Service Fabric CLI (sfctl) 连接到安全群集。 使用客户端证书进行身份验证时，证书详细信息必须与部署到群集节点的证书匹配。 如果证书具有证书颁发机构 (CA)，则需要另外指定受信任的 CA。\r \r 可以使用 `sfctl cluster select` 命令连接到群集。\r \r 可以通过两种不同方式指定客户端证书：作为证书和密钥对，或作为单个 pem 文件。 对于受密码保护的 `pem` 文件，系统将自动提示输入密码。\r \r 若要将客户端证书指定为 pem 文件，请在 `--pem` 参数中指定文件路径。 例如：\r \r ```azurecli\r sfctl cluster select --endpoint https://testsecurecluster.com:19080 --pem ./client.pem\r ```\r \r 在运行任何命令之前，受密码保护的 pem 文件将提示用户输入密码。\r \r 若要指定证书、密钥对，请使用 `--cert` 和 `--key` 参数指定每个相应文件的文件路径。\r \r ```azurecli\r sfctl cluster select --endpoint https://testsecurecluster.com:19080 --cert ./client.crt --key ./keyfile.key\r ```\r \r 有时用于保护测试或开发群集的证书未通过证书验证。 若要绕过证书验证，请指定 `--no-verify` 选项。 例如：\r \r > [!WARNING]\r > 连接到生产 Service Fabric 群集时，不要使用 `no-verify` 选项。\r \r ```azurecli\r sfctl cluster select --endpoint https://testsecurecluster.com:19080 --pem ./client.pem --no-verify\r ```\r \r 此外，可以指定受信任 CA 证书或单个证书的目录的路径。 若要指定这些路径，请使用 `--ca` 参数。 例如：\r \r ```azurecli\r sfctl cluster select --endpoint https://testsecurecluster.com:19080 --pem ./client.pem --ca ./trusted_ca\r ```\r \r 连接后，应能够[运行其他 sfctl 命令](service-fabric-cli.md)与群集进行交互。\r \r <a name=\"connectsecurecluster\"></a>\r ## <a name=\"connect-to-a-cluster-using-powershell\"></a>使用 PowerShell 连接到群集\r 在通过 PowerShell 对群集执行操作之前，请首先建立与群集的连接。 群集连接用于给定 PowerShell 会话中的所有后续命令。\r \r ### <a name=\"connect-to-an-unsecure-cluster\"></a>连接到不安全的群集\r \r 若要连接到不安全群集，请向 **Connect-ServiceFabricCluster** 命令提供群集终结点地址：\r \r ```powershell\r Connect-ServiceFabricCluster -ConnectionEndpoint <Cluster FQDN>:19000 \r ```\r \r ### <a name=\"connect-to-a-secure-cluster-using-azure-active-directory\"></a>使用 Azure Active Directory 连接到安全群集\r \r 若要连接到使用 Azure Active Directory 授权群集管理员访问权限的安全集群，请提供群集证书指纹，并使用 *AzureActiveDirectory* 标志。  \r \r ```powershell\r Connect-ServiceFabricCluster -ConnectionEndpoint <Cluster FQDN>:19000 `\r -ServerCertThumbprint <Server Certificate Thumbprint> `\r -AzureActiveDirectory\r ```\r \r ### <a name=\"connect-to-a-secure-cluster-using-a-client-certificate\"></a>使用客户端证书连接到安全群集\r 运行以下 PowerShell 命令以连接到使用客户端证书授权管理员访问权限的安全群集。 提供群集证书指纹以及已授予群集管理权限的客户端证书的指纹。 证书详细信息必须与群集节点上的证书匹配。\r \r ```powershell\r Connect-ServiceFabricCluster -ConnectionEndpoint <Cluster FQDN>:19000 `\r           -KeepAliveIntervalInSec 10 `\r           -X509Credential -ServerCertThumbprint <Certificate Thumbprint> `\r           -FindType FindByThumbprint -FindValue <Certificate Thumbprint> `\r           -StoreLocation CurrentUser -StoreName My\r ```\r \r *ServerCertThumbprint* 是群集节点上安装的服务器证书的指纹。 *FindValue* 是管理客户端证书的指纹。\r 填充参数时，命令如以下示例所示： \r \r ```powershell\r Connect-ServiceFabricCluster -ConnectionEndpoint clustername.chinanorth.cloudapp.chinacloudapi.cn:19000 `\r           -KeepAliveIntervalInSec 10 `\r           -X509Credential -ServerCertThumbprint A8136758F4AB8962AF2BF3F27921BE1DF67F4326 `\r           -FindType FindByThumbprint -FindValue 71DE04467C9ED0544D021098BCD44C71E183414E `\r           -StoreLocation CurrentUser -StoreName My\r ```\r \r ### <a name=\"connect-to-a-secure-cluster-using-windows-active-directory\"></a>使用 Windows Active Directory 连接到安全群集\r 如果独立群集是使用 AD 安全部署的，请通过追加开关“WindowsCredential”连接到群集。\r \r ```powershell\r Connect-ServiceFabricCluster -ConnectionEndpoint <Cluster FQDN>:19000 `\r           -WindowsCredential\r ```\r \r <a name=\"connectsecureclusterfabricclient\"></a>\r ## <a name=\"connect-to-a-cluster-using-the-fabricclient-apis\"></a> 使用 FabricClient API 连接到群集\r Service Fabric SDK 为群集管理提供 [FabricClient](https://docs.microsoft.com/dotnet/api/system.fabric.fabricclient) 类。 若要使用 FabricClient API，请获取 Microsoft.ServiceFabric NuGet 包。\r \r ### <a name=\"connect-to-an-unsecure-cluster\"></a>连接到不安全的群集\r \r 若要连接到远程不安全群集，请创建一个 FabricClient 实例并提供群集地址：\r \r ```csharp\r FabricClient fabricClient = new FabricClient(\"clustername.chinanorth.cloudapp.chinacloudapi.cn:19000\");\r ```\r \r 对于在群集内运行的代码（例如，在可靠服务中），请创建 FabricClient  ，无需指定群集地址。 FabricClient 连接到代码当前正在运行的节点上的本地管理网关，从而避免额外的网络跃点。\r \r ```csharp\r FabricClient fabricClient = new FabricClient();\r ```\r \r ### <a name=\"connect-to-a-secure-cluster-using-a-client-certificate\"></a>使用客户端证书连接到安全群集\r \r 群集中的节点必须具有有效的证书，在 SAN 中，这些证书的公用名或 DNS 名出现在 [FabricClient](https://docs.microsoft.com/dotnet/api/system.fabric.fabricclient) 上设置的 [RemoteCommonNames 属性](https://docs.microsoft.com/dotnet/api/system.fabric.x509credentials#System_Fabric_X509Credentials_RemoteCommonNames)中。 按照此流程操作可在客户端与群集节点之间进行相互身份验证。\r \r ```csharp\r using System.Fabric;\r using System.Security.Cryptography.X509Certificates;\r \r string clientCertThumb = \"71DE04467C9ED0544D021098BCD44C71E183414E\";\r string serverCertThumb = \"A8136758F4AB8962AF2BF3F27921BE1DF67F4326\";\r string CommonName = \"www.clustername.chinanorth.chinacloudapp.cn\";\r string connection = \"clustername.chinanorth.cloudapp.chinacloudapi.cn:19000\";\r \r var xc = GetCredentials(clientCertThumb, serverCertThumb, CommonName);\r var fc = new FabricClient(xc, connection);\r \r try\r {\r     var ret = fc.ClusterManager.GetClusterManifestAsync().Result;\r     Console.WriteLine(ret.ToString());\r }\r catch (Exception e)\r {\r     Console.WriteLine(\"Connect failed: {0}\", e.Message);\r }\r \r static X509Credentials GetCredentials(string clientCertThumb, string serverCertThumb, string name)\r {\r     X509Credentials xc = new X509Credentials();\r     xc.StoreLocation = StoreLocation.CurrentUser;\r     xc.StoreName = \"My\";\r     xc.FindType = X509FindType.FindByThumbprint;\r     xc.FindValue = clientCertThumb;\r     xc.RemoteCommonNames.Add(name);\r     xc.RemoteCertThumbprints.Add(serverCertThumb);\r     xc.ProtectionLevel = ProtectionLevel.EncryptAndSign;\r     return xc;\r }\r ```\r \r ### <a name=\"connect-to-a-secure-cluster-interactively-using-azure-active-directory\"></a>使用 Azure Active Directory 以交互方式连接到安全群集\r \r 以下示例使用 Azure Active Directory 作为客户端标识，使用服务器证书作为服务器标识。\r \r 连接到群集时，对话框窗口自动弹出，以便进行交互式登录。\r \r ```csharp\r string serverCertThumb = \"A8136758F4AB8962AF2BF3F27921BE1DF67F4326\";\r string connection = \"clustername.chinanorth.cloudapp.chinacloudapi.cn:19000\";\r \r var claimsCredentials = new ClaimsCredentials();\r claimsCredentials.ServerThumbprints.Add(serverCertThumb);\r \r var fc = new FabricClient(claimsCredentials, connection);\r \r try\r {\r     var ret = fc.ClusterManager.GetClusterManifestAsync().Result;\r     Console.WriteLine(ret.ToString());\r }\r catch (Exception e)\r {\r     Console.WriteLine(\"Connect failed: {0}\", e.Message);\r }\r ```\r \r ### <a name=\"connect-to-a-secure-cluster-non-interactively-using-azure-active-directory\"></a>使用 Azure Active Directory 以非交互方式连接到安全群集\r \r 以下示例依赖于 Microsoft.IdentityModel.Clients.ActiveDirectory，版本：2.19.208020213。\r \r 有关 AAD 令牌获取的详细信息，请参阅 [Microsoft.IdentityModel.Clients.ActiveDirectory](https://msdn.microsoft.com/library/microsoft.identitymodel.clients.activedirectory.aspx)。\r \r ```csharp\r string tenantId = \"C15CFCEA-02C1-40DC-8466-FBD0EE0B05D2\";\r string clientApplicationId = \"118473C2-7619-46E3-A8E4-6DA8D5F56E12\";\r string webApplicationId = \"53E6948C-0897-4DA6-B26A-EE2A38A690B4\";\r \r string token = GetAccessToken(\r     tenantId,\r     webApplicationId,\r     clientApplicationId,\r     \"urn:ietf:wg:oauth:2.0:oob\");\r \r string serverCertThumb = \"A8136758F4AB8962AF2BF3F27921BE1DF67F4326\";\r string connection = \"clustername.chinanorth.cloudapp.chinacloudapi.cn:19000\";\r \r var claimsCredentials = new ClaimsCredentials();\r claimsCredentials.ServerThumbprints.Add(serverCertThumb);\r claimsCredentials.LocalClaims = token;\r \r var fc = new FabricClient(claimsCredentials, connection);\r \r try\r {\r     var ret = fc.ClusterManager.GetClusterManifestAsync().Result;\r     Console.WriteLine(ret.ToString());\r }\r catch (Exception e)\r {\r     Console.WriteLine(\"Connect failed: {0}\", e.Message);\r }\r \r ...\r \r static string GetAccessToken(\r     string tenantId,\r     string resource,\r     string clientId,\r     string redirectUri)\r {\r     string authorityFormat = @\"https://login.chinacloudapi.cn/{0}\";\r     string authority = string.Format(CultureInfo.InvariantCulture, authorityFormat, tenantId);\r     var authContext = new AuthenticationContext(authority);\r \r     var authResult = authContext.AcquireToken(\r         resource,\r         clientId,\r         new UserCredential(\"TestAdmin@clustenametenant.partner.onmschina.cn\", \"TestPassword\"));\r     return authResult.AccessToken;\r }\r \r ```\r \r ### <a name=\"connect-to-a-secure-cluster-without-prior-metadata-knowledge-using-azure-active-directory\"></a>无需事先了解元数据，即可使用 Azure Active Directory 连接到安全群集\r \r 以下示例使用非交互式令牌获取，但可以使用相同的方法营造自定义交互式令牌获取体验。 从群集配置中读取令牌获取所需的 Azure Active Directory 元数据。\r \r ```csharp\r string serverCertThumb = \"A8136758F4AB8962AF2BF3F27921BE1DF67F4326\";\r string connection = \"clustername.chinanorth.cloudapp.chinacloudapi.cn:19000\";\r \r var claimsCredentials = new ClaimsCredentials();\r claimsCredentials.ServerThumbprints.Add(serverCertThumb);\r \r var fc = new FabricClient(claimsCredentials, connection);\r \r fc.ClaimsRetrieval += (o, e) =>\r {\r     return GetAccessToken(e.AzureActiveDirectoryMetadata);\r };\r \r try\r {\r     var ret = fc.ClusterManager.GetClusterManifestAsync().Result;\r     Console.WriteLine(ret.ToString());\r }\r catch (Exception e)\r {\r     Console.WriteLine(\"Connect failed: {0}\", e.Message);\r }\r \r ...\r \r static string GetAccessToken(AzureActiveDirectoryMetadata aad)\r {\r     var authContext = new AuthenticationContext(aad.Authority);\r \r     var authResult = authContext.AcquireToken(\r         aad.ClusterApplication,\r         aad.ClientApplication,\r         new UserCredential(\"TestAdmin@clustenametenant.partner.onmschina.cn\", \"TestPassword\"));\r     return authResult.AccessToken;\r }\r \r ```\r \r <a name=\"connectsecureclustersfx\"></a>\r ## <a name=\"connect-to-a-secure-cluster-using-service-fabric-explorer\"></a>使用 Service Fabric Explorer 连接到安全群集\r 若要访问给定群集的 [Service Fabric Explorer](service-fabric-visualizing-your-cluster.md)，请将浏览器指向：\r \r `http://<your-cluster-endpoint>:19080/Explorer`\r \r Azure 门户的群集基本信息窗格中也提供了完整 URL。\r \r 若要使用浏览器连接到 Windows 或 OS X 上的安全群集，可以导入客户端证书，浏览器将提示你提供要用于连接群集的证书。  在 Linux 计算机上，需要使用高级浏览器设置（每个浏览器具有不同的机制）导入证书并将其指向磁盘上的证书位置。\r \r ### <a name=\"connect-to-a-secure-cluster-using-azure-active-directory\"></a>使用 Azure Active Directory 连接到安全群集\r \r 要连接到用 AAD 保护的群集，请将浏览器指向：\r \r `https://<your-cluster-endpoint>:19080/Explorer`\r \r 系统会自动提示使用 AAD 登录。\r \r ### <a name=\"connect-to-a-secure-cluster-using-a-client-certificate\"></a>使用客户端证书连接到安全群集\r \r 要连接到使用证书保护的群集，请将浏览器指向：\r \r `https://<your-cluster-endpoint>:19080/Explorer`\r \r 系统自动提示选择客户端证书。\r \r <a name=\"connectsecureclustersetupclientcert\"></a>\r ## <a name=\"set-up-a-client-certificate-on-the-remote-computer\"></a>在远程计算机上设置客户端证书\r 至少应有两个证书用于保护群集，一个用于保护群集和服务器证书，另一个用于保护客户端访问。  建议还使用其他辅助证书和客户端访问证书。  若要使用证书安全性来保护客户端与群集节点之间的通信，首先需要获取和安装客户端证书。 证书可以安装到本地计算机或当前用户的个人（我的）存储。  还需要服务器证书的指纹，以便客户端可以对群集进行身份验证。\r \r 运行以下 PowerShell cmdlet，在访问群集的计算机上设置客户端证书。\r \r ```powershell\r Import-PfxCertificate -Exportable -CertStoreLocation Cert:\\CurrentUser\\My `\r         -FilePath C:\\docDemo\\certs\\DocDemoClusterCert.pfx `\r         -Password (ConvertTo-SecureString -String test -AsPlainText -Force)\r ```\r \r 如果它是自签名证书，则需要将其导入计算机的“受信任人”存储中才能使用此证书连接到安全群集。\r \r ```powershell\r Import-PfxCertificate -Exportable -CertStoreLocation Cert:\\CurrentUser\\TrustedPeople `\r -FilePath C:\\docDemo\\certs\\DocDemoClusterCert.pfx `\r -Password (ConvertTo-SecureString -String test -AsPlainText -Force)\r ```\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r * [Service Fabric 群集升级过程和用户预期](service-fabric-cluster-upgrade.md)\r * [在 Visual Studio 中管理 Service Fabric 应用程序](service-fabric-manage-application-in-visual-studio.md)\r * [Service Fabric 运行状况模型简介](service-fabric-health-introduction.md)\r * [应用程序安全性和 RunAs](service-fabric-application-runas-security.md)\r * [Service Fabric CLI 入门](service-fabric-cli.md)\r <!--Update_Description: update reference link, wording update-->"}