{"Title":"使用 Azure IoT Edge 模拟设备 (Windows)","Description":"如何在 Windows 上使用 Azure IoT Edge 创建模拟设备，从而通过 Azure IoT Edge 网关将遥测数据发送到 IoT 中心。","Content":"# <a name=\"use-azure-iot-edge-to-send-device-to-cloud-messages-with-a-simulated-device-windows\"></a>使用 Azure IoT Edge，通过模拟设备发送设备到云消息 (Windows)\r \r [!INCLUDE [iot-hub-iot-edge-simulated-selector](../../includes/iot-hub-iot-edge-simulated-selector.md)]\r \r [!INCLUDE [iot-hub-iot-edge-install-build-windows](../../includes/iot-hub-iot-edge-install-build-windows.md)]\r \r ## <a name=\"run-the-sample\"></a>运行示例\r \r build.cmd 脚本在 iot-edge 存储库本地副本的 build 文件夹中生成输出。 该输出包括此示例中使用的四个 IoT Edge 模块。\r \r 生成脚本会创建以下文件：\r \r * 将 **logger.dll** 放入 **build\\\\modules\\\\logger\\\\Debug** 文件夹。\r * 将 **iothub.dll** 放入 **build\\\\modules\\\\iothub\\\\Debug** 文件夹。\r * 将 **identity\\_map.dll** 放入 **build\\\\modules\\\\identitymap\\\\Debug** 文件夹。\r * 将 **simulated\\_device.dll** 放入 **build\\\\modules\\\\simulated\\_device\\\\Debug** 文件夹。\r \r 将这些路径用于 **module path** 值，如 simulated\\_device\\_cloud\\_upload\\_win JSON 设置文件中所示。\r \r simulated\\_device\\_cloud\\_upload 示例过程使用 JSON 配置文件的路径作为命令行参数。 以下示例 JSON 文件位于 SDK 存储库的以下路径：**samples\\\\simulated\\_device\\_cloud\\_upload\\_sample\\\\src\\\\simulated\\_device\\_cloud\\_upload\\_win.json**。 除非修改了生成脚本，将 IoT Edge 模块或示例可执行文件放置在非默认位置，否则，此配置文件可按原样工作。\r \r > [!NOTE]\r > 模块路径相对于 simulated\\_device\\_cloud\\_upload\\_sample.exe 所在的目录。 示例 JSON 配置文件默认写入到当前工作目录中的“deviceCloudUploadGatewaylog.log”。\r \r 在文本编辑器中，打开 **iot-edge** 存储库本地副本中的文件 **samples\\\\simulated\\_device\\_cloud\\_upload\\\\src\\\\simulated\\_device\\_cloud\\_upload\\_win.json**。 此文件配置示例网关中的 IoT Edge 模块：\r \r * **IoTHub** 模块连接到 IoT 中心。 将该模块配置为将数据发送到 IoT 中心。 具体而言，将 **IoTHubName** 值设置为 IoT 中心的名称，将 **IoTHubSuffix** 值设置为 **azure-devices.cn**。 将“传输”值设置为“HTTP”、“AMQP”或“MQTT”其中的一个。 目前只有“HTTP”会针对所有设备消息共享一个 TCP 连接。 如果将值设置为“AMQP”或“MQTT”，则网关将为每个设备维护与 IoT 中心的单独 TCP 连接。\r * **mapping** 模块将模拟设备的 MAC 地址映射到 IoT 中心设备 ID。 将 **deviceId** 值设置为添加到 IoT 中心的两个设备的 ID。 将 **deviceKey** 值设置为两个设备的密钥。\r * **BLE1** 和 **BLE2** 模块是模拟设备。 注意模块 MAC 地址如何与“映射”模块中的地址匹配。\r * **Logger** 模块将网关活动记录到一个文件中。\r * 以下示例中所示的 **module path** 值相对于 simulated\\_device\\_cloud\\_upload\\_sample.exe 所在的目录。\r * JSON 文件底部的 **links** 数组将 **BLE1** 和 **BLE2** 模块连接到 **mapping** 模块，并将 **mapping** 模块连接到 **IoTHub** 模块。 它还确保 **Logger** 模块记录所有消息。\r \r ```json\r {\r     \"modules\" :\r     [\r       {\r         \"name\": \"IotHub\",\r         \"loader\": {\r           \"name\": \"native\",\r           \"entrypoint\": {\r             \"module.path\": \"..\\\\..\\\\..\\\\modules\\\\iothub\\\\Debug\\\\iothub.dll\"\r           }\r           },\r           \"args\": {\r             \"IoTHubName\": \"<<insert here IoTHubName>>\",\r             \"IoTHubSuffix\": \"<<insert here IoTHubSuffix>>\",\r             \"Transport\": \"HTTP\"\r           }\r         },\r       {\r         \"name\": \"mapping\",\r         \"loader\": {\r           \"name\": \"native\",\r           \"entrypoint\": {\r             \"module.path\": \"..\\\\..\\\\..\\\\modules\\\\identitymap\\\\Debug\\\\identity_map.dll\"\r           }\r           },\r           \"args\": [\r             {\r               \"macAddress\": \"01:01:01:01:01:01\",\r               \"deviceId\": \"<<insert here deviceId>>\",\r               \"deviceKey\": \"<<insert here deviceKey>>\"\r             },\r             {\r               \"macAddress\": \"02:02:02:02:02:02\",\r               \"deviceId\": \"<<insert here deviceId>>\",\r               \"deviceKey\": \"<<insert here deviceKey>>\"\r             }\r           ]\r         },\r       {\r         \"name\": \"BLE1\",\r         \"loader\": {\r           \"name\": \"native\",\r           \"entrypoint\": {\r             \"module.path\": \"..\\\\..\\\\..\\\\modules\\\\simulated_device\\\\Debug\\\\simulated_device.dll\"\r           }\r           },\r           \"args\": {\r             \"macAddress\": \"01:01:01:01:01:01\",\r             \"messagePeriod\" : 2000\r           }\r         },\r       {\r         \"name\": \"BLE2\",\r         \"loader\": {\r           \"name\": \"native\",\r           \"entrypoint\": {\r             \"module.path\": \"..\\\\..\\\\..\\\\modules\\\\simulated_device\\\\Debug\\\\simulated_device.dll\"\r           }\r           },\r           \"args\": {\r             \"macAddress\": \"02:02:02:02:02:02\",\r             \"messagePeriod\" : 2000\r           }\r         },\r       {\r         \"name\": \"Logger\",\r         \"loader\": {\r           \"name\": \"native\",\r           \"entrypoint\": {\r             \"module.path\": \"..\\\\..\\\\..\\\\modules\\\\logger\\\\Debug\\\\logger.dll\"\r           }\r         },\r         \"args\": {\r           \"filename\": \"deviceCloudUploadGatewaylog.log\"\r         }\r       }\r     ],\r     \"links\" : [\r         { \"source\" : \"*\", \"sink\" : \"Logger\" },\r         { \"source\" : \"BLE1\", \"sink\" : \"mapping\" },\r         { \"source\" : \"BLE2\", \"sink\" : \"mapping\" },\r         { \"source\" : \"mapping\", \"sink\" : \"IotHub\" }\r     ]\r }\r ```\r \r 保存对配置文件所做的更改。\r \r 运行示例：\r \r 1. 在命令提示符下，导航到 **iot-edge** 存储库本地副本中的 **build** 文件夹。\r 2. 运行以下命令：\r    \r     ```cmd\r     samples\\simulated_device_cloud_upload\\Debug\\simulated_device_cloud_upload_sample.exe ..\\samples\\simulated_device_cloud_upload\\src\\simulated_device_cloud_upload_win.json\r     ```\r 3. 可使用[设备资源管理器][lnk-device-explorer]或 [iothub-explorer][lnk-iothub-explorer] 工具监视 IoT 中心从网关接收的消息。 例如，若使用 iothub-explorer，可通过以下命令监视设备到云的消息：\r \r     ```cmd\r     iothub-explorer monitor-events --login \"HostName={Your iot hub name}.azure-devices.cn;SharedAccessKeyName=iothubowner;SharedAccessKey={Your IoT Hub key}\"\r     ```\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r 若要深入了解 IoT Edge 并尝试一些代码示例，请访问以下开发人员教程和资源：\r \r * [使用 IoT Edge 从物理设备发送设备到云的消息][lnk-physical-device]\r * [Azure IoT Edge][lnk-iot-edge]\r \r 若要进一步探索 IoT 中心的功能，请参阅：\r \r * [IoT 中心开发人员指南][lnk-devguide]\r * [从根本上保护 IoT 解决方案][lnk-securing]\r \r <!-- Links -->\r [lnk-iot-edge]: https://github.com/Azure/iot-edge/\r [lnk-physical-device]: ./iot-hub-iot-edge-physical-device.md\r [lnk-devguide]: ./iot-hub-devguide.md\r [lnk-securing]: ./iot-hub-security-ground-up.md\r [lnk-device-explorer]: https://github.com/Azure/azure-iot-sdk-csharp/tree/master/tools/DeviceExplorer\r [lnk-iothub-explorer]: https://github.com/Azure/iothub-explorer/blob/master/readme.md\r \r <!--Update_Description:update wording and code-->"}