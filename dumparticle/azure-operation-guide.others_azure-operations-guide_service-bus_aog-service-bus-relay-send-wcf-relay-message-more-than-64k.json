{"Title":"使用 netTCPRelay 绑定的 WCF 中继发送大于 64k 消息时报通信异常","Description":"使用 netTCPRelay 绑定的 WCF 中继发送大于 64k 消息时报通信异常","Content":"\r # 使用 netTCPRelay 绑定的 WCF 中继发送大于 64k 消息时报通信异常\r \r ## 问题描述\r \r 使用 netTCPRelay 绑定的 WCF 中继发送消息时，如果消息小于 64k，程序正常运行；如果消息大于 64k, 就会报通信异常。\r \r ## 问题分析\r \r 使用 netTCPRelay Windows Communication Foundation (WCF) 绑定打开的中继不将消息视为单条消息，而视为流经系统的数据流。使用此绑定时，只有发送方和侦听器可以识别发送和接收的单条分帧消息。对于使用 netTCPRelay 绑定的中继，所有数据都将被视为用于计算可计费消息的数据流。更多详细信息，请参考[这篇文章](https://docs.azure.cn/zh-cn/service-bus-relay/relay-faq)。\r \r 但是在默认情况下，使用 netTCPRelayBinding 时，消息的最大缓冲和接收尺寸为 64k(65536), 所以如果发送的消息大于 64k，就会报通信异常。\r \r ## 解决方案\r \r NetTcpRelayBinding 类定义了 [MaxBufferSize](https://docs.microsoft.com/dotnet/api/microsoft.servicebus.nettcprelaybindingbase.maxbuffersize?view=azure-dotnet#Microsoft_ServiceBus_NetTcpRelayBindingBase_MaxBufferSize) 和 [MaxReceivedMessageSize](https://docs.microsoft.com/dotnet/api/microsoft.servicebus.nettcprelaybindingbase.maxreceivedmessagesize?view=azure-dotnet) 属性，通过设置他们的值可以修改上限值。\r \r ### 示例如下：\r \r 默认情况下， NetTcpRelayBinding 和 MaxBufferSize 的值为： 65536（64k）。\r \r ![servicebusrelay1.PNG](./media/aog-service-bus-relay-send-wcf-relay-message-more-than-64k/servicebusrelay1.PNG)\r \r 使用下面的代码设置属性值：\r \r #### 服务主机：\r \r ```\r ServiceHost sh = new ServiceHost(typeof(ProblemSolver));\r // 设置 MaxBufferSize 和 MaxReceivedMessageSize 的值。\r var netTcpbinding = new NetTcpBinding() { MaxBufferSize = 1024 * 1024, MaxReceivedMessageSize = 1024 * 1024 };\r var netTcpRelayBinding = new NetTcpRelayBinding() { MaxBufferSize = 1024 * 1024, MaxReceivedMessageSize = 1024 * 1024 };\r \r sh.AddServiceEndpoint(\r     typeof(IProblemSolver), netTcpbinding,\r     \"net.tcp://localhost:9358/solver\");\r \r // 将字符串 namespace 替换为命名空间名称\r Uri uri = new Uri(\"sb://<namespace>.servicebus.chinacloudapi.cn/solver\");\r \r // 将 yourKey 替换为 WCF 中继的 SAS 密钥\r string key1 = \"yourKey\";\r \r sh.AddServiceEndpoint(\r     typeof(IProblemSolver), netTcpRelayBinding,\r     uri)\r     .Behaviors.Add(new TransportClientEndpointBehavior\r     {\r         TokenProvider = TokenProvider.CreateSharedAccessSignatureTokenProvider(\"RootManageSharedAccessKey\", key1)\r     });\r \r sh.Open();\r \r Console.WriteLine(\"Press ENTER to close\");\r Console.ReadLine();\r \r sh.Close();\r ```\r \r #### 客户端：\r \r ```\r // 设置 MaxBufferSize 和 MaxReceivedMessageSize 的值。\r var netTcpRelaybinding = new NetTcpRelayBinding() { MaxBufferSize=1024*1024, MaxReceivedMessageSize=1024*1024 };\r \r // 将字符串 namespace 替换为命名空间名称\r Uri uri = new Uri(\"sb://<namespace>.servicebus.chinacloudapi.cn/solver\");\r \r ////将 yourKey 替换为 WCF 中继的 SAS 密钥\r string key1 = \"yourKey\";\r \r var cf = new ChannelFactory<IProblemSolverChannel>(\r         netTcpRelaybinding,\r         new EndpointAddress(uri));\r \r cf.Endpoint.Behaviors.Add(new TransportClientEndpointBehavior\r { TokenProvider = TokenProvider.CreateSharedAccessSignatureTokenProvider(\"RootManageSharedAccessKey\", key1) });\r \r using (var ch = cf.CreateChannel())\r {\r     Console.WriteLine(ch.GetByteArrayLength(new byte[100*1024]));\r }\r ```\r \r ### 截图如下：\r \r ![servicebusrelay2.PNG](./media/aog-service-bus-relay-send-wcf-relay-message-more-than-64k/servicebusrelay2.PNG)\r \r ### 结果如下：\r \r ![result](./media/aog-service-bus-relay-send-wcf-relay-message-more-than-64k/servicebusresult.PNG)\r \r ## 参考文档\r \r - [WCF 中继](https://docs.azure.cn/service-bus-relay/relay-wcf-dotnet-get-started)\r - [中继常见问题](https://docs.azure.cn/service-bus-relay/relay-faq)\r - [NetTcpRelayBinding 类](https://docs.microsoft.com/dotnet/api/microsoft.servicebus.nettcprelaybindingbase?view=azure-dotnet)"}