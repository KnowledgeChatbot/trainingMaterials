{"Title":"用于 Azure 流分析的 Management .NET SDK v1.x","Description":"流分析管理 .NET SDK 入门。 了解如何设置和运行分析作业。 创建项目、输入、输出和转换。","Content":"# <a name=\"management-net-sdk-v1x-set-up-and-run-analytics-jobs-using-the-azure-stream-analytics-api-for-net\"></a>Management .NET SDK v1.x：使用用于 .NET 的 Azure 流分析 API 设置和运行分析作业\r 了解如何通过管理 .NET SDK 设置和运行使用 .NET 版流分析 API 的分析作业。 设置项目、创建输入和输出源、转换，以及开始和停止作业。 就分析作业来说，可以从 Blob 存储或事件中心流式传输数据。\r \r 请参阅 [.NET 版流分析 API 的管理参考文档](https://msdn.microsoft.com/library/azure/dn889315.aspx)。\r \r Azure 流分析是一种完全托管的服务，可以在云中通过流式数据处理复杂的事件，具有延迟性低、可用性高和大小灵活等特点。 客户可以使用流分析来设置流式处理作业，分析数据流和进行近实时分析。  \r \r > [!NOTE]\r > 本文中的示例代码仍使用旧版 (1.x) 的 Azure 流分析 Management .NET SDK。 有关使用最新 SDK 版本的示例代码，请参阅[使用用于流分析的 Management .NET SDK](/stream-analytics/stream-analytics-dotnet-management-sdk)。\r \r ## <a name=\"prerequisites\"></a>先决条件\r 在开始阅读本文前，必须具有：\r \r * 安装 Visual Studio 2017 或 2015。\r * 下载并安装 [Azure .NET SDK](https://www.azure.cn/downloads/)。\r * 在订阅中创建 Azure 资源组。 下面是 Azure PowerShell 脚本示例。 有关 Azure PowerShell 的信息，请参阅 [安装和配置 Azure PowerShell](https://docs.microsoft.com/powershell/azure/overview)；  \r \r         # Log in to your Azure account\r         Add-AzureAccount -Environment AzureChinaCloud\r \r         # Select the Azure subscription you want to use to create the resource group\r         Select-AzureSubscription -SubscriptionName <subscription name>\r \r             # If Stream Analytics has not been registered to the subscription, remove the remark symbol (#) to run the Register-AzureRMProvider cmdlet to register the provider namespace\r             #Register-AzureRMProvider -Force -ProviderNamespace 'Microsoft.StreamAnalytics'\r \r         # Create an Azure resource group\r         New-AzureResourceGroup -Name <YOUR RESOURCE GROUP NAME> -Location <LOCATION>\r \r * 设置要使用的输入源和输出目标。 有关进一步的说明，请参阅[添加输入](stream-analytics-add-inputs.md)以设置示例输入，参阅[添加输出](stream-analytics-add-outputs.md)以设置示例输出。\r \r ## <a name=\"set-up-a-project\"></a>设置项目\r 若要使用 .NET 版流分析 API 创建分析作业，请首先设置项目。\r \r 1. 创建 Visual Studio C# .NET 控制台应用程序。\r 2. 在程序包管理器控制台中运行以下命令来安装 NuGet 包。 第一个是 Azure 流分析管理 .NET SDK。 第二个是用于进行身份验证的 Azure Active Directory 客户端。\r \r         Install-Package Microsoft.Azure.Management.StreamAnalytics -Version 1.8.3\r         Install-Package Microsoft.IdentityModel.Clients.ActiveDirectory -Version 2.28.4\r 3. 将下面的 **appSettings** 部分添加到 App.config 文件：\r \r         <appSettings>\r           <!--CSM Prod related values-->\r           <add key=\"ActiveDirectoryEndpoint\" value=\"https://login.chinacloudapi.cn/\" />\r           <add key=\"ResourceManagerEndpoint\" value=\"https://management.chinacloudapi.cn/\" />\r           <add key=\"WindowsManagementUri\" value=\"https://management.core.chinacloudapi.cn/\" />\r           <add key=\"AsaClientId\" value=\"1950a258-227b-4e31-a9cf-717495945fc2\" />\r           <add key=\"RedirectUri\" value=\"urn:ietf:wg:oauth:2.0:oob\" />\r           <add key=\"SubscriptionId\" value=\"YOUR AZURE SUBSCRIPTION\" />\r           <add key=\"ActiveDirectoryTenantId\" value=\"YOU TENANT ID\" />\r         </appSettings>\r \r     将 **SubscriptionId** 和 **ActiveDirectoryTenantId** 的值替换为 Azure 订阅 ID 和租户 ID。 可以通过运行以下 Azure PowerShell cmdlet 来获取这些值：\r \r         Get-AzureAccount\r \r 4. 在 .csproj 文件中添加以下引用：\r \r         <Reference Include=\"System.Configuration\" />\r \r 5. 将以下 **using** 语句添加到项目中的源文件 (Program.cs)：\r \r         using System;\r         using System.Configuration;\r         using System.Threading.Tasks;\r \r         using Microsoft.Azure;\r         using Microsoft.Azure.Management.StreamAnalytics;\r         using Microsoft.Azure.Management.StreamAnalytics.Models;\r         using Microsoft.IdentityModel.Clients.ActiveDirectory;\r 6. 添加一个身份验证帮助器方法：\r \r     ```   \r     public static string GetAuthorizationHeader()\r         {\r \r             AuthenticationResult result = null;\r             var thread = new Thread(() =>\r             {\r                 try\r                 {\r                     var context = new AuthenticationContext(\r                         ConfigurationManager.AppSettings[\"ActiveDirectoryEndpoint\"] +\r                         ConfigurationManager.AppSettings[\"ActiveDirectoryTenantId\"]);\r \r                     result = context.AcquireToken(\r                         resource: ConfigurationManager.AppSettings[\"WindowsManagementUri\"],\r                         clientId: ConfigurationManager.AppSettings[\"AsaClientId\"],\r                         redirectUri: new Uri(ConfigurationManager.AppSettings[\"RedirectUri\"]),\r                         promptBehavior: PromptBehavior.Always);\r                 }\r                 catch (Exception threadEx)\r                 {\r                     Console.WriteLine(threadEx.Message);\r                 }\r             });\r \r             thread.SetApartmentState(ApartmentState.STA);\r             thread.Name = \"AcquireTokenThread\";\r             thread.Start();\r             thread.Join();\r \r             if (result != null)\r             {\r                 return result.AccessToken;\r             }\r \r             throw new InvalidOperationException(\"Failed to acquire token\");\r         }\r     ```  \r \r ## <a name=\"create-a-stream-analytics-management-client\"></a>创建流分析管理客户端\r 一个 **StreamAnalyticsManagementClient** 对象，用于管理作业和作业组件，例如输入、输出和转换。\r \r 将以下代码添加到 **Main** 方法的开头：\r \r     string resourceGroupName = \"<YOUR AZURE RESOURCE GROUP NAME>\";\r     string streamAnalyticsJobName = \"<YOUR STREAM ANALYTICS JOB NAME>\";\r     string streamAnalyticsInputName = \"<YOUR JOB INPUT NAME>\";\r     string streamAnalyticsOutputName = \"<YOUR JOB OUTPUT NAME>\";\r     string streamAnalyticsTransformationName = \"<YOUR JOB TRANSFORMATION NAME>\";\r \r     // Get authentication token\r     TokenCloudCredentials aadTokenCredentials = new TokenCloudCredentials(\r         ConfigurationManager.AppSettings[\"SubscriptionId\"],\r         GetAuthorizationHeader().Result);\r \r     // Create Stream Analytics management client\r     StreamAnalyticsManagementClient client = new StreamAnalyticsManagementClient(aadTokenCredentials);\r \r resourceGroupName 变量的值应该与你在先决条件步骤中创建或选取的资源组的名称相同。\r \r 若要自动执行凭据演示方面的作业创建，请参阅[使用 Azure Resource Manager 对服务主体进行身份验证](../azure-resource-manager/resource-group-authenticate-service-principal.md)。\r \r 本文的剩余部分假定此代码位于 **Main** 方法的开头。\r \r ## <a name=\"create-a-stream-analytics-job\"></a>创建流分析作业\r 以下代码在你所定义的资源组下创建流分析作业。 可以在以后向作业添加输入、输出和转换。\r \r     // Create a Stream Analytics job\r     JobCreateOrUpdateParameters jobCreateParameters = new JobCreateOrUpdateParameters()\r     {\r         Job = new Job()\r         {\r             Name = streamAnalyticsJobName,\r             Location = \"<LOCATION>\",\r             Properties = new JobProperties()\r             {\r                 EventsOutOfOrderPolicy = EventsOutOfOrderPolicy.Adjust,\r                 Sku = new Sku()\r                 {\r                     Name = \"Standard\"\r                 }\r             }\r         }\r     };\r \r     JobCreateOrUpdateResponse jobCreateResponse = client.StreamingJobs.CreateOrUpdate(resourceGroupName, jobCreateParameters);\r \r ## <a name=\"create-a-stream-analytics-input-source\"></a>创建流分析输入源\r 下面的代码使用 blob 输入源类型和 CSV 序列化创建流分析输入源。 若要创建事件中心输入源，请使用 **EventHubStreamInputDataSource** 而非 **BlobStreamInputDataSource**。 同样，可以自定义输入源的序列化类型。\r \r     // Create a Stream Analytics input source\r     InputCreateOrUpdateParameters jobInputCreateParameters = new InputCreateOrUpdateParameters()\r     {\r         Input = new Input()\r         {\r             Name = streamAnalyticsInputName,\r             Properties = new StreamInputProperties()\r             {\r                 Serialization = new CsvSerialization\r                 {\r                     Properties = new CsvSerializationProperties\r                     {\r                         Encoding = \"UTF8\",\r                         FieldDelimiter = \",\"\r                     }\r                 },\r                 DataSource = new BlobStreamInputDataSource\r                 {\r                     Properties = new BlobStreamInputDataSourceProperties\r                     {\r                         StorageAccounts = new StorageAccount[]\r                         {\r                             new StorageAccount()\r                             {\r                                 AccountName = \"<YOUR STORAGE ACCOUNT NAME>\",\r                                 AccountKey = \"<YOUR STORAGE ACCOUNT KEY>\"\r                             }\r                         },\r                         Container = \"samples\",\r                         PathPattern = \"\"\r                     }\r                 }\r             }\r         }\r     };\r \r     InputCreateOrUpdateResponse inputCreateResponse =\r         client.Inputs.CreateOrUpdate(resourceGroupName, streamAnalyticsJobName, jobInputCreateParameters);\r \r 输入源（不管是来自 Blob 存储还是来自事件中心）将绑定到特定作业。 要将同一输入源用于不同的作业，必须再次调用该方法并指定不同的作业名称。\r \r ## <a name=\"test-a-stream-analytics-input-source\"></a>测试流分析输入源\r **TestConnection** 方法可测试流分析作业是否能够连接到输入源，并测试特定输入源类型的其他方面。 例如，在 blob 输入源（已在此前的步骤中创建过）中，该方法可检查存储帐户名称和密钥对能否用于连接到存储帐户，并检查指定的容器是否存在。\r \r     // Test input source connection\r     DataSourceTestConnectionResponse inputTestResponse =\r         client.Inputs.TestConnection(resourceGroupName, streamAnalyticsJobName, streamAnalyticsInputName);\r \r ## <a name=\"create-a-stream-analytics-output-target\"></a>创建流分析输出目标\r 创建输出目标非常类似于创建流分析输入源。 像输入源一样，输出目标将绑定到特定作业。 要将同一输出目标用于不同的作业，必须再次调用该方法并指定不同的作业名称。\r \r 以下代码可创建一个输出目标（Azure SQL 数据库）。 可以自定义输出目标的数据类型和/或序列化类型。\r \r     // Create a Stream Analytics output target\r     OutputCreateOrUpdateParameters jobOutputCreateParameters = new OutputCreateOrUpdateParameters()\r     {\r         Output = new Output()\r         {\r             Name = streamAnalyticsOutputName,\r             Properties = new OutputProperties()\r             {\r                 DataSource = new SqlAzureOutputDataSource()\r                 {\r                     Properties = new SqlAzureOutputDataSourceProperties()\r                     {\r                         Server = \"<YOUR DATABASE SERVER NAME>\",\r                         Database = \"<YOUR DATABASE NAME>\",\r                         User = \"<YOUR DATABASE LOGIN>\",\r                         Password = \"<YOUR DATABASE LOGIN PASSWORD>\",\r                         Table = \"<YOUR DATABASE TABLE NAME>\"\r                     }\r                 }\r             }\r         }\r     };\r \r     OutputCreateOrUpdateResponse outputCreateResponse =\r         client.Outputs.CreateOrUpdate(resourceGroupName, streamAnalyticsJobName, jobOutputCreateParameters);\r \r ## <a name=\"test-a-stream-analytics-output-target\"></a>测试流分析输出目标\r 流分析输出目标还有一个用于测试连接的 **TestConnection** 方法。\r \r     // Test output target connection\r     DataSourceTestConnectionResponse outputTestResponse =\r         client.Outputs.TestConnection(resourceGroupName, streamAnalyticsJobName, streamAnalyticsOutputName);\r \r ## <a name=\"create-a-stream-analytics-transformation\"></a>创建流分析转换\r 下面的代码使用查询“select * from Input”创建流分析转换，并通过指定的方式为流分析作业分配一个流式处理单位。 有关如何调整流式处理单位的详细信息，请参阅[缩放 Azure 流分析作业](stream-analytics-scale-jobs.md)。\r \r     // Create a Stream Analytics transformation\r     TransformationCreateOrUpdateParameters transformationCreateParameters = new TransformationCreateOrUpdateParameters()\r     {\r         Transformation = new Transformation()\r         {\r             Name = streamAnalyticsTransformationName,\r             Properties = new TransformationProperties()\r             {\r                 StreamingUnits = 1,\r                 Query = \"select * from Input\"\r             }\r         }\r     };\r \r     var transformationCreateResp =\r         client.Transformations.CreateOrUpdate(resourceGroupName, streamAnalyticsJobName, transformationCreateParameters);\r \r 与输入和输出一样，转换也会绑定到在创建时所属的特定流分析作业。\r \r ## <a name=\"start-a-stream-analytics-job\"></a>启动流分析作业\r 创建流分析作业及其输入、输出和转换后，可以通过调用 **Start** 方法来启动该作业。\r \r 下面的示例性代码启动一个流分析作业，其自定义输出开始时间设置为 2012 年 12 月 12 日 12:12:12（UTC 时间）：\r \r     // Start a Stream Analytics job\r     JobStartParameters jobStartParameters = new JobStartParameters\r     {\r         OutputStartMode = OutputStartMode.CustomTime,\r         OutputStartTime = new DateTime(2012, 12, 12, 0, 0, 0, DateTimeKind.Utc)\r     };\r \r     LongRunningOperationResponse jobStartResponse = client.StreamingJobs.Start(resourceGroupName, streamAnalyticsJobName, jobStartParameters);\r \r ## <a name=\"stop-a-stream-analytics-job\"></a>停止流分析作业\r 可以通过调用 **Stop** 方法来停止正在运行的流分析作业。\r \r     // Stop a Stream Analytics job\r     LongRunningOperationResponse jobStopResponse = client.StreamingJobs.Stop(resourceGroupName, streamAnalyticsJobName);\r \r ## <a name=\"delete-a-stream-analytics-job\"></a>删除流分析作业\r \r             **Delete** 方法会删除作业以及基础性的子资源，包括作业的输入、输出和转换。\r \r     // Delete a Stream Analytics job\r     LongRunningOperationResponse jobDeleteResponse = client.StreamingJobs.Delete(resourceGroupName, streamAnalyticsJobName);\r \r ## <a name=\"get-support\"></a>获取支持\r 如需更多帮助，请尝试访问我们的 [Azure 流分析论坛](https://social.msdn.microsoft.com/Forums/en-US/home?forum=AzureStreamAnalytics)。\r \r ## <a name=\"next-steps\"></a>后续步骤\r 现已学习了使用 .NET SDK 创建和运行分析作业的基础知识。 若要了解更多信息，请参阅下列文章：\r \r * [Azure 流分析简介](stream-analytics-introduction.md)\r * [Azure 流分析入门](stream-analytics-real-time-fraud-detection.md)\r * [缩放 Azure 流分析作业](stream-analytics-scale-jobs.md)\r * [Azure 流分析管理 .NET SDK](https://msdn.microsoft.com/library/azure/dn889315.aspx)。\r * [Azure 流分析查询语言参考](https://msdn.microsoft.com/library/azure/dn834998.aspx)\r * [Azure 流分析管理 REST API 参考](https://msdn.microsoft.com/library/azure/dn835031.aspx)\r \r <!--Image references-->\r [5]: ./media/markdown-template-for-new-articles/octocats.png\r [6]: ./media/markdown-template-for-new-articles/pretty49.png\r [7]: ./media/markdown-template-for-new-articles/channel-9.png\r \r <!--Link references-->\r [azure.blob.storage]: /storage/\r [azure.blob.storage.use]: /storage-dotnet-how-to-use-blobs/\r \r [azure.event.hubs]: https://www.azure.cn/home/features/event-hubs/\r [azure.event.hubs.developer.guide]: http://msdn.microsoft.com/library/azure/dn789972.aspx\r \r [stream.analytics.query.language.reference]: http://go.microsoft.com/fwlink/?LinkID=513299\r [stream.analytics.forum]: http://go.microsoft.com/fwlink/?LinkId=512151\r \r [stream.analytics.introduction]: stream-analytics-introduction.md\r [stream.analytics.get.started]: stream-analytics-real-time-fraud-detection.md\r [stream.analytics.developer.guide]: stream-analytics-developer-guide.md\r [stream.analytics.scale.jobs]: stream-analytics-scale-jobs.md\r [stream.analytics.query.language.reference]: http://go.microsoft.com/fwlink/?LinkID=513299\r [stream.analytics.rest.api.reference]: http://go.microsoft.com/fwlink/?LinkId=517301\r \r <!-- Update_Description: wording update -->"}