{"Title":"如何在 Azure 中均衡 Linux 虚拟机负载以创建高可用性应用程序","Description":"了解如何使用 Azure 负载均衡器在 3 个 Linux VM 之间创建高可用性和安全性的应用程序","Content":"# <a name=\"how-to-load-balance-linux-virtual-machines-in-azure-to-create-a-highly-available-application\"></a>如何在 Azure 中均衡 Linux 虚拟机负载以创建高可用性应用程序\r 负载均衡通过将传入请求分布到多个虚拟机来提供更高级别的可用性。 本教程介绍了 Azure 负载均衡器的不同组件，这些组件用于分发流量和提供高可用性。 你将学习如何执行以下操作：\r \r > [!div class=\"checklist\"]\r > * 创建 Azure 负载均衡器\r > * 创建负载均衡器运行状况探测\r > * 创建负载均衡器流量规则\r > * 使用 cloud-init 创建基本的 Node.js 应用\r > * 创建虚拟机并将其附加到负载均衡器\r > * 查看负载均衡器的实际运行情况\r > * 从负载均衡器中添加和删除 VM\r \r [!INCLUDE [azure-cli-2-azurechinacloud-environment-parameter](../../../includes/azure-cli-2-azurechinacloud-environment-parameter.md)]\r \r 如果选择在本地安装并使用 CLI，本教程要求运行 Azure CLI 2.0.4 或更高版本。 运行 `az --version` 即可查找版本。 如果需要进行安装或升级，请参阅[安装 Azure CLI 2.0](https://docs.azure.cn/zh-cn/cli/install-azure-cli?view=azure-cli-latest)。 \r \r ## <a name=\"azure-load-balancer-overview\"></a>Azure 负载均衡器概述\r Azure 负载均衡器是位于第 4 层（TCP、UDP）的负载均衡器，通过在正常运行的 VM 之间分发传入流量提供高可用性。 负载均衡器运行状况探测器监视每个 VM 上的给定端口，仅将流量分发给正常运行的 VM。\r \r 定义包含一个或多个公共 IP 地址的前端 IP 配置。 利用此前端 IP 配置，可通过 Internet 访问负载均衡器和应用程序。 \r \r 虚拟机使用其虚拟网络接口卡 (NIC) 连接到负载均衡器。 若要向 VM 分发流量，后端地址池需包含连接到负载均衡器的虚拟 NIC 的 IP 地址。\r \r 若要控制流量，需为映射到 VM 的特定端口和协议定义负载均衡器规则。\r \r 如果遵循了前面的教程来[创建虚拟机规模集](tutorial-create-vmss.md)，则已创建负载均衡器。 所有这些组件都已配置为规模集的一部分。\r \r ## <a name=\"create-azure-load-balancer\"></a>创建 Azure 负载均衡器\r 本部分详细介绍如何创建和配置负载均衡器的每个组件。 创建负载均衡器之前，需使用 [az group create](https://docs.azure.cn/zh-cn/cli/group?view=azure-cli-latest#create) 创建资源组。 以下示例在 chinaeast 位置创建名为 myResourceGroupLoadBalancer 的资源组：\r \r ```azurecli \r az group create --name myResourceGroupLoadBalancer --location chinaeast\r ```\r \r ### <a name=\"create-a-public-ip-address\"></a>创建公共 IP 地址\r 若要通过 Internet 访问应用，需要负载均衡器的一个公共 IP 地址。 使用 [az network public-ip create](https://docs.azure.cn/zh-cn/cli/network/public-ip?view=azure-cli-latest#create) 创建公共 IP 地址。 以下示例在 myResourceGroupLoadBalancer 资源组中创建名为 myPublicIP 的公共 IP 地址：\r \r ```azurecli \r az network public-ip create \\\r     --resource-group myResourceGroupLoadBalancer \\\r     --name myPublicIP\r ```\r \r ### <a name=\"create-a-load-balancer\"></a>创建负载均衡器\r 使用 [az network lb create](https://docs.azure.cn/zh-cn/cli/network/lb?view=azure-cli-latest#create) 创建负载均衡器。 以下示例创建名为“myLoadBalancer”的负载均衡器，并将“myPublicIP”地址分配到前端 IP 配置：\r \r ```azurecli \r az network lb create \\\r     --resource-group myResourceGroupLoadBalancer \\\r     --name myLoadBalancer \\\r     --frontend-ip-name myFrontEndPool \\\r     --backend-pool-name myBackEndPool \\\r     --public-ip-address myPublicIP\r ```\r \r ### <a name=\"create-a-health-probe\"></a>创建运行状况探测器\r 若要允许负载均衡器监视应用的状态，可以使用运行状况探测器。 运行状况探测器基于其对运行状况检查的响应，从负载均衡器中动态添加或删除 VM。 默认情况下，在 15 秒时间间隔内发生两次连续的故障后，会从负载均衡器分布中删除 VM。 可以为应用创建基于协议或特定运行状况检查页面的运行状况探测器。 \r \r 以下示例创建一个 TCP 探测器。 还可创建自定义 HTTP 探测，以便执行更精细的运行状况检查。 使用自定义 HTTP 探测时，必须创建运行状况检查页，例如 healthcheck.js。 探测必须为负载均衡器返回 HTTP 200 OK 响应，以保持主机处于旋转状态。\r \r 若要创建 TCP 运行状况探测，请使用 [az network lb probe create](https://docs.azure.cn/zh-cn/cli/network/lb/probe?view=azure-cli-latest#create)。 以下示例创建名为“myHealthProbe”的运行状况探测：\r \r ```azurecli \r az network lb probe create \\\r     --resource-group myResourceGroupLoadBalancer \\\r     --lb-name myLoadBalancer \\\r     --name myHealthProbe \\\r     --protocol tcp \\\r     --port 80\r ```\r \r ### <a name=\"create-a-load-balancer-rule\"></a>创建负载均衡器规则\r 负载均衡器规则用于定义将流量分配给 VM 的方式。 定义传入流量的前端 IP 配置和后端 IP 池以接收流量，同时定义所需源和目标端口。 若要确保仅正常运行的 VM 接收流量，还需定义要使用的运行状况探测。\r \r 使用 [az network lb rule create](https://docs.azure.cn/zh-cn/cli/network/lb/rule?view=azure-cli-latest#create) 创建负载均衡器规则。 以下示例创建名为“myLoadBalancerRule”的规则、使用“myHealthProbe”运行状况探测并平衡端口 80 上的流量：\r \r ```azurecli \r az network lb rule create \\\r     --resource-group myResourceGroupLoadBalancer \\\r     --lb-name myLoadBalancer \\\r     --name myLoadBalancerRule \\\r     --protocol tcp \\\r     --frontend-port 80 \\\r     --backend-port 80 \\\r     --frontend-ip-name myFrontEndPool \\\r     --backend-pool-name myBackEndPool \\\r     --probe-name myHealthProbe\r ```\r \r ## <a name=\"configure-virtual-network\"></a>配置虚拟网络\r 需要先创建提供支持的虚拟网络资源，然后才能部署某些 VM 并测试均衡器。 有关虚拟网络的详细信息，请参阅[管理 Azure 虚拟网络](tutorial-virtual-network.md)教程。\r \r ### <a name=\"create-network-resources\"></a>创建网络资源\r 使用 [az network vnet create](https://docs.azure.cn/zh-cn/cli/network/vnet?view=azure-cli-latest#create) 创建虚拟网络。 以下示例创建名为“myVnet”的虚拟网络和一个名为“mySubnet”的子网：\r \r ```azurecli \r az network vnet create \\\r     --resource-group myResourceGroupLoadBalancer \\\r     --name myVnet \\\r     --subnet-name mySubnet\r ```\r \r 若要添加网络安全组，请使用 [az network nsg create](https://docs.azure.cn/zh-cn/cli/network/nsg?view=azure-cli-latest#create)。 以下示例创建名为“myNetworkSecurityGroup”的网络安全组：\r \r ```azurecli \r az network nsg create \\\r     --resource-group myResourceGroupLoadBalancer \\\r     --name myNetworkSecurityGroup\r ```\r \r 使用 [az network nsg rule create](https://docs.azure.cn/zh-cn/cli/network/nsg/rule?view=azure-cli-latest#create) 创建网络安全组规则。 以下示例创建名为“myNetworkSecurityGroupRule”的网络安全组规则：\r \r ```azurecli \r az network nsg rule create \\\r     --resource-group myResourceGroupLoadBalancer \\\r     --nsg-name myNetworkSecurityGroup \\\r     --name myNetworkSecurityGroupRule \\\r     --priority 1001 \\\r     --protocol tcp \\\r     --destination-port-range 80\r ```\r \r 使用 [az network nic create](https://docs.azure.cn/zh-cn/cli/network/nic?view=azure-cli-latest#create) 创建虚拟 NIC。 以下示例创建三个虚拟 NIC。 （在以下步骤中针对为应用创建的每个 VM 各使用一个虚拟 NIC）。 可随时创建其他虚拟 NIC 和 VM，并将其添加到负载均衡器：\r \r ```bash\r for i in `seq 1 3`; do\r     az network nic create \\\r         --resource-group myResourceGroupLoadBalancer \\\r         --name myNic$i \\\r         --vnet-name myVnet \\\r         --subnet mySubnet \\\r         --network-security-group myNetworkSecurityGroup \\\r         --lb-name myLoadBalancer \\\r         --lb-address-pools myBackEndPool\r done\r ```\r \r 创建所有三个虚拟 NIC 之后，请继续执行下一步骤\r \r ## <a name=\"create-virtual-machines\"></a>创建虚拟机\r \r ### <a name=\"create-cloud-init-config\"></a>创建 cloud-init 配置\r 在有关[如何在首次启动时自定义 Linux 虚拟机](tutorial-automate-vm-deployment.md)的上一个教程中，你已了解如何使用 cloud-init 自动执行 VM 自定义。 在下一步骤中，可使用同一个 cloud-init 配置文件安装 NGINX 并运行简单的“Hello World”Node.js 应用。 若要查看负载均衡器的工作方式，完成本教程时，可以在 Web 浏览器中访问这个简单的应用。\r \r  创建名为“cloud-init.txt”的文件并粘贴以下配置。 请确保已正确复制整个 cloud-init 文件，尤其是第一行：\r \r ```yaml\r #cloud-config\r package_upgrade: true\r packages:\r   - nginx\r   - nodejs\r   - npm\r write_files:\r   - owner: www-data:www-data\r   - path: /etc/nginx/sites-available/default\r     content: |\r       server {\r         listen 80;\r         location / {\r           proxy_pass http://localhost:3000;\r           proxy_http_version 1.1;\r           proxy_set_header Upgrade $http_upgrade;\r           proxy_set_header Connection keep-alive;\r           proxy_set_header Host $host;\r           proxy_cache_bypass $http_upgrade;\r         }\r       }\r   - owner: azureuser:azureuser\r   - path: /home/azureuser/myapp/index.js\r     content: |\r       var express = require('express')\r       var app = express()\r       var os = require('os');\r       app.get('/', function (req, res) {\r         res.send('Hello World from host ' + os.hostname() + '!')\r       })\r       app.listen(3000, function () {\r         console.log('Hello world app listening on port 3000!')\r       })\r runcmd:\r   - service nginx restart\r   - cd \"/home/azureuser/myapp\"\r   - npm init\r   - npm install express -y\r   - nodejs index.js\r ```\r \r ### <a name=\"create-virtual-machines\"></a>创建虚拟机\r 若要提高应用的高可用性，请将 VM 放置在可用性集中。 有关可用性集的详细信息，请参阅前面的[如何创建高可用性虚拟机](tutorial-availability-sets.md)教程。\r \r 使用 [az vm availability-set create](https://docs.azure.cn/zh-cn/cli/vm/availability-set?view=azure-cli-latest#create) 创建可用性集。 以下示例创建名为“myAvailabilitySet”的可用性集：\r \r ```azurecli \r az vm availability-set create \\\r     --resource-group myResourceGroupLoadBalancer \\\r     --name myAvailabilitySet\r ```\r \r 现在，可使用 [az vm create](https://docs.azure.cn/zh-cn/cli/vm?view=azure-cli-latest#create) 创建 VM。 以下示例创建三个 VM，并生成 SSH 密钥（如果它们尚不存在）：\r \r ```bash\r for i in `seq 1 3`; do\r     az vm create \\\r         --resource-group myResourceGroupLoadBalancer \\\r         --name myVM$i \\\r         --availability-set myAvailabilitySet \\\r         --nics myNic$i \\\r         --image UbuntuLTS \\\r         --admin-username azureuser \\\r         --generate-ssh-keys \\\r         --custom-data cloud-init.txt \\\r         --no-wait\r done\r ```\r \r 在 Azure CLI 返回提示之后，仍然存在继续运行的后台任务。 `--no-wait` 参数不会等待所有任务完成。 可能还需等待几分钟才能访问应用。 在每个 VM 上运行应用时，负载均衡器运行状况探测器会自动检测。 应用运行后，负载均衡器规则将开始分布流量。\r \r ## <a name=\"test-load-balancer\"></a>测试负载均衡器\r 使用 [az network public-ip show](https://docs.azure.cn/zh-cn/cli/network/public-ip?view=azure-cli-latest#show) 获取负载均衡器的公共 IP 地址。 以下示例获取前面创建的“myPublicIP”的 IP 地址：\r \r ```azurecli \r az network public-ip show \\\r     --resource-group myResourceGroupLoadBalancer \\\r     --name myPublicIP \\\r     --query [ipAddress] \\\r     --output tsv\r ```\r \r 然后，可将公共 IP 地址输入 Web 浏览器中。 请记住 - 在负载均衡器开始向 VM 分发流量之前，VM 需要几分钟才能准备就绪。 随即显示应用，包括负载均衡器将流量分发到的 VM 的主机名，如下例所示：\r \r ![运行 Node.js 应用](./media/tutorial-load-balancer/running-nodejs-app.png)\r \r 若要查看负载均衡器如何在运行应用的所有 3 个 VM 之间分配流量，可强制刷新 Web 浏览器。\r \r ## <a name=\"add-and-remove-vms\"></a>添加和删除 VM\r 建议对运行应用的 VM 执行维护，例如安装 OS 更新。 若要应对应用增加的流量，建议添加更多 VM。 本部分演示了如何在负载均衡器中删除或添加 VM。\r \r ### <a name=\"remove-a-vm-from-the-load-balancer\"></a>从负载均衡器中删除 VM\r 可使用 [az network nic ip-config address-pool remove](https://docs.azure.cn/zh-cn/cli/network/nic/ip-config/address-pool?view=azure-cli-latest#remove) 从后端地址池中删除 VM。 以下示例从“myLoadBalancer”中删除“myVM2”的虚拟 NIC：\r \r ```azurecli \r az network nic ip-config address-pool remove \\\r     --resource-group myResourceGroupLoadBalancer \\\r     --nic-name myNic2 \\\r     --ip-config-name ipConfig1 \\\r     --lb-name myLoadBalancer \\\r     --address-pool myBackEndPool \r ```\r \r 若要查看负载均衡器如何在运行应用的其余两个 VM 之间分发流量，可强制刷新 Web 浏览器。 现在可以对 VM 执行维护，例如安装 OS 更新或执行 VM 重新启动。\r \r 若要查看包含与负载均衡器连接的虚拟 NIC 的 VM 列表，请使用 [az network lb address-pool show](https://docs.azure.cn/zh-cn/cli/network/lb/address-pool?view=azure-cli-latest#show)。 如下所示根据虚拟 NIC 的 ID 进行查询和筛选：\r \r ```azurecli\r az network lb address-pool show \\\r     --resource-group myResourceGroupLoadBalancer \\\r     --lb-name myLoadBalancer \\\r     --name myBackEndPool \\\r     --query backendIpConfigurations \\\r     --output tsv | cut -f4\r ```\r \r 输出类似于以下示例，其中显示 VM 2 的虚拟 NIC 不再是后端地址池的一部分：\r \r ```bash\r /subscriptions/<guid>/resourceGroups/myResourceGroupLoadBalancer/providers/Microsoft.Network/networkInterfaces/myNic1/ipConfigurations/ipconfig1\r /subscriptions/<guid>/resourceGroups/myResourceGroupLoadBalancer/providers/Microsoft.Network/networkInterfaces/myNic3/ipConfigurations/ipconfig1\r ```\r \r ### <a name=\"add-a-vm-to-the-load-balancer\"></a>将 VM 添加到负载均衡器\r 可以在执行 VM 维护后或需要扩展容量的情况下，使用 [az network nic ip-config address-pool add](https://docs.azure.cn/zh-cn/cli/network/nic/ip-config/address-pool?view=azure-cli-latest#add) 将 VM 添加到后端地址池。 以下示例将“myVM2”的虚拟 NIC 添加到“myLoadBalancer”：\r \r ```azurecli \r az network nic ip-config address-pool add \\\r     --resource-group myResourceGroupLoadBalancer \\\r     --nic-name myNic2 \\\r     --ip-config-name ipConfig1 \\\r     --lb-name myLoadBalancer \\\r     --address-pool myBackEndPool\r ```\r \r 若要验证虚拟 NIC 是否已连接到后端地址池，请再次使用上一步骤中所示的 [az network lb address-pool show](https://docs.azure.cn/zh-cn/cli/network/lb/address-pool?view=azure-cli-latest#show)。\r \r ## <a name=\"next-steps\"></a>后续步骤\r 在本教程中，你已创建了一个负载均衡器并已将 VM 附加到它。 你已了解如何：\r \r > [!div class=\"checklist\"]\r > * 创建 Azure 负载均衡器\r > * 创建负载均衡器运行状况探测\r > * 创建负载均衡器流量规则\r > * 使用 cloud-init 创建基本的 Node.js 应用\r > * 创建虚拟机并将其附加到负载均衡器\r > * 查看负载均衡器的实际运行情况\r > * 从负载均衡器中添加和删除 VM\r \r 请转到下一教程，详细了解 Azure 虚拟网络组件。\r \r > [!div class=\"nextstepaction\"]\r > [管理 VM 和虚拟网络](tutorial-virtual-network.md)\r \r <!--Update_Description: update meta properties, wording update-->"}