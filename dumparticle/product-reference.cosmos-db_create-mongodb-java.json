{"Title":"Azure Cosmos DB：使用 Java 和 MongoDB API 生成控制台应用","Description":"演示一个可以用来连接到 Azure Cosmos DB MongoDB API 并进行查询的 Java 代码示例","Content":"# <a name=\"azure-cosmos-db-build-a-mongodb-api-console-app-with-java-and-the-azure-portal\"></a>Azure Cosmos DB：使用 Java 和 Azure 门户生成 MongoDB API 控制台应用\r \r Azure Cosmos DB 由 世纪互联 提供，是多个区域分布的多模型数据库服务。 可快速创建和查询文档、键/值数据库，所有这些都受益于 Azure Cosmos DB 核心的多个区域分布和水平缩放功能。 \r <!-- Not Available on Graph -->\r <!-- Notice: 全球分布 to 多个区域分布 -->\r \r 本快速入门教程演示如何使用 Azure 门户创建 Azure Cosmos DB 帐户、文档数据库和集合。 然后生成并部署基于 [MongoDB Java 驱动程序](https://docs.mongodb.com/ecosystem/drivers/java/)构建的控制台应用。 \r \r ## <a name=\"prerequisites\"></a>先决条件\r \r 在运行此示例之前，必须具备以下先决条件：\r * JDK 1.7+（如果没有 JDK，请运行 `apt-get install default-jdk`）\r * Maven（如果没有 Maven，请运行 `apt-get install maven`）\r \r [!INCLUDE [quickstarts-free-trial-note](../../includes/quickstarts-free-trial-note.md)]\r [!INCLUDE [cosmos-db-emulator-mongodb](../../includes/cosmos-db-emulator-mongodb.md)]\r \r ## <a name=\"create-a-database-account\"></a>创建数据库帐户\r \r [!INCLUDE [mongodb-create-dbaccount](../../includes/cosmos-db-create-dbaccount-mongodb.md)]\r \r ## <a name=\"add-a-collection\"></a>添加集合\r \r 将新数据库命名为 **db**，将新集合命名为 **coll**。\r \r [!INCLUDE [cosmos-db-create-collection](../../includes/cosmos-db-create-collection.md)] \r \r ## <a name=\"clone-the-sample-application\"></a>克隆示例应用程序\r \r 现在让我们从 github 克隆 MongoDB API 应用、设置连接字符串，并运行。 你会看到以编程方式处理数据是多么容易。 \r \r 1. 打开 git 终端窗口（例如 git bash）并使用 `cd` 切换到工作目录。  \r \r 2. 运行下列命令，克隆示例存储库。 \r \r     ```bash\r     git clone https://github.com/Azure-Samples/azure-cosmos-db-mongodb-java-getting-started.git\r     ```\r \r 3. 然后在 Visual Studio 中打开解决方案文件。 \r \r ## <a name=\"review-the-code\"></a>查看代码\r \r 快速查看应用中发生的情况。 打开 `Program.cs` 文件，会发现以下代码行创建 Azure Cosmos DB 资源。 \r \r * 此时会对 DocumentClient 进行初始化。\r \r     ```java\r     MongoClientURI uri = new MongoClientURI(\"FILLME\");`\r \r     MongoClient mongoClient = new MongoClient(uri);            \r     ```\r \r * 会创建新数据库和集合。\r \r     ```java\r     MongoDatabase database = mongoClient.getDatabase(\"db\");\r \r     MongoCollection<Document> collection = database.getCollection(\"coll\");\r     ```\r \r * 使用 `MongoCollection.insertOne` 插入一些文档\r \r     ```java\r     Document document = new Document(\"fruit\", \"apple\")\r     collection.insertOne(document);\r     ```\r \r * 使用 `MongoCollection.find` 执行一些查询\r \r     ```java\r     Document queryResult = collection.find(Filters.eq(\"fruit\", \"apple\")).first();\r     System.out.println(queryResult.toJson());       \r     ```\r \r ## <a name=\"update-your-connection-string\"></a>更新连接字符串\r \r 现在返回到 Azure 门户，获取连接字符串信息，并将其复制到应用。\r \r 1. 从帐户中选择“快速启动”，选择 Java，并将连接字符串复制到剪贴板\r \r 2. 打开 `Program.java` 文件，将 MongoClientURI 构造函数的参数替换为该连接字符串。 现已使用与 Azure Cosmos DB 进行通信所需的所有信息更新应用。 \r \r ## <a name=\"run-the-console-app\"></a>运行控制台应用\r \r 1. 在终端中运行 `mvn package`，安装所需的 npm 模块\r \r 2. 在终端中运行 `mvn exec:java -D exec.mainClass=GetStarted.Program`，启动 Java 应用程序。\r \r 现在可以使用 [Robomongo](mongodb-robomongo.md) / [Studio 3T](mongodb-mongochef.md) 来查询、修改和处理此新数据。\r \r ## <a name=\"review-slas-in-the-azure-portal\"></a>在 Azure 门户中查看 SLA\r \r [!INCLUDE [cosmosdb-tutorial-review-slas](../../includes/cosmos-db-tutorial-review-slas.md)]\r \r ## <a name=\"clean-up-resources\"></a>清理资源\r \r 如果不打算继续使用此应用，请删除本快速入门教程在 Azure 门户中创建的所有资源，步骤如下：\r \r 1. 在 Azure 门户的左侧菜单中，单击“资源组”，然后单击已创建资源的名称。 \r 2. 在资源组页上单击“删除”，在文本框中键入要删除的资源的名称，并单击“删除”。\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r 在本快速入门教程中，已了解如何创建 Azure Cosmos DB 帐户、使用数据资源管理器创建集合和运行控制台应用。 现在可以将其他数据导入 Cosmos DB 帐户。 \r \r > [!div class=\"nextstepaction\"]\r > [将 MongoDB 数据导入 Azure Cosmos DB](mongodb-migrate.md)\r \r <!--Update_Description: update meta properties, reference link -->"}