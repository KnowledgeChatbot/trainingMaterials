{"Title":"Azure 应用程序网关中的 WebSocket 支持","Description":"此页概述了应用程序网关的 WebSocket 支持。","Content":"\r \r # 应用程序网关中的 WebSocket 支持概述 <a name=\"overview-of-websocket-support-in-application-gateway\"></a>\r \r 应用程序网关跨所有网关大小为 WebSocket 提供本机支持。 用户无法通过配置设置来选择性地启用或禁用 WebSocket 支持。 \r \r 以 [RFC6455](https://tools.ietf.org/html/rfc6455) 进行标准化的 WebSocket 协议通过长时间运行的 TCP 连接，让服务器和客户端之间实现全双工通信。 此功能让 Web 服务器和客户端之间能够进行交互性更强的通信。这种通信可以是双向的，而且不像基于 HTTP 的实现那样需要轮询。 不同于 HTTP，WebSocket 的开销很低，并且可以对多个请求/响应重复使用同一 TCP 连接，进而提高资源利用率。 WebSocket 协议设计为通过传统 HTTP 端口 80 和 443 运行。\r \r 可以在端口 80 或 443 上继续使用标准 HTTP 侦听器来接收 WebSocket 流量。 随后会使用应用程序网关规则中指定的相应后端池，将 WebSocket 流量定向到已启用 WebSocket 的后端服务器。 后端服务器必须响应应用程序网关探测，如[运行状况探测概述](application-gateway-probe-overview.md)部分中所述。 应用程序网关运行状况探测仅适用于 HTTP/HTTPS。 每个后端服务器必须响应 HTTP 探测，这样，应用程序网关才能将 WebSocket 流量路由到服务器。\r \r \r \r ## 侦听器配置元素 <a name=\"listener-configuration-element\"></a>\r \r 现有的 HTTP 侦听器可用于支持 WebSocket 流量。 以下是示例模板文件中 httpListeners 元素的代码片段。 需要同时拥有 HTTP 和 HTTPS 侦听器才能支持 WebSocket 并保护 WebSocket 流量。 同样，可以使用[门户](application-gateway-create-gateway-portal.md)或 [PowerShell](application-gateway-create-gateway-arm.md) 在端口 80/443 上创建具有侦听器的应用程序网关，以支持 WebSocket 通信。\r \r ```json\r \"httpListeners\": [\r         {\r             \"name\": \"appGatewayHttpsListener\",\r             \"properties\": {\r                 \"FrontendIPConfiguration\": {\r                     \"Id\": \"/subscriptions/{subscriptionId/resourceGroups/{resourceGroupName/providers/Microsoft.Network/applicationGateways/{applicationGatewayName/frontendIPConfigurations/DefaultFrontendPublicIP\"\r                 },\r                 \"FrontendPort\": {\r                     \"Id\": \"/subscriptions/{subscriptionId/resourceGroups/{resourceGroupName/providers/Microsoft.Network/applicationGateways/{applicationGatewayName/frontendPorts/appGatewayFrontendPort443'\"\r                 },\r                 \"Protocol\": \"Https\",\r                 \"SslCertificate\": {\r                     \"Id\": \"/subscriptions/{subscriptionId/resourceGroups/{resourceGroupName/providers/Microsoft.Network/applicationGateways/{applicationGatewayName/sslCertificates/appGatewaySslCert1'\"\r                 },\r             }\r         },\r         {\r             \"name\": \"appGatewayHttpListener\",\r             \"properties\": {\r                 \"FrontendIPConfiguration\": {\r                     \"Id\": \"/subscriptions/{subscriptionId/resourceGroups/{resourceGroupName/providers/Microsoft.Network/applicationGateways/{applicationGatewayName/frontendIPConfigurations/appGatewayFrontendIP'\"\r                 },\r                 \"FrontendPort\": {\r                     \"Id\": \"/subscriptions/{subscriptionId/resourceGroups/{resourceGroupName/providers/Microsoft.Network/applicationGateways/{applicationGatewayName/frontendPorts/appGatewayFrontendPort80'\"\r                 },\r                 \"Protocol\": \"Http\",\r             }\r         }\r     ],\r ```\r \r \r \r ## BackendAddressPool、BackendHttpSetting 和路由规则配置 <a name=\"backendaddresspool-backendhttpsetting-and-routing-rule-configuration\"></a>\r \r 如果后端池具有已启用 WebSocket 的服务器，那么应使用 BackendAddressPool 对其进行定义。 backendHttpSetting 是使用后端端口 80 和 443 定义的。 基于 cookie 的相关性和 requestTimeouts 的属性与 WebSocket 流量不相关。 不需要对路由规则进行更改，可使用“基本”路由规则将适当的侦听器绑定到相应的后端地址池。 \r \r ```json\r \"requestRoutingRules\": [{\r     \"name\": \"<ruleName1>\",\r     \"properties\": {\r         \"RuleType\": \"Basic\",\r         \"httpListener\": {\r             \"id\": \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/httpListeners/appGatewayHttpsListener')]\"\r         },\r         \"backendAddressPool\": {\r             \"id\": \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/backendAddressPools/ContosoServerPool')]\"\r         },\r         \"backendHttpSettings\": {\r             \"id\": \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]\"\r         }\r     }\r \r }, {\r     \"name\": \"<ruleName2>\",\r     \"properties\": {\r         \"RuleType\": \"Basic\",\r         \"httpListener\": {\r             \"id\": \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/httpListeners/appGatewayHttpListener')]\"\r         },\r         \"backendAddressPool\": {\r             \"id\": \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/backendAddressPools/ContosoServerPool')]\"\r         },\r         \"backendHttpSettings\": {\r             \"id\": \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]\"\r         }\r \r     }\r }]\r ```\r \r \r \r ## 已启用 WebSocket 的后端 <a name=\"websocket-enabled-backend\"></a>\r \r 后端必须具有在已配置端口（通常为 80/443）上运行的 HTTP/HTTPS Web 服务器，WebSocket 才能运行。 之所以提出此要求，是因为 WebSocket 协议要求初始握手是 HTTP，且标头字段为升级到 WebSocket 协议。 下面是一个标头示例：\r \r ```\r     GET /chat HTTP/1.1\r     Host: server.example.com\r     Upgrade: websocket\r     Connection: Upgrade\r     Sec-WebSocket-Key: dGhlIHNhbXBsZSBub25jZQ==\r     Origin: http://example.com\r     Sec-WebSocket-Protocol: chat, superchat\r     Sec-WebSocket-Version: 13\r ```\r \r 另一个原因是该应用程序网关后端运行状况探测仅支持 HTTP 和 HTTPS 协议。 如果后端服务器未响应 HTTP 或 HTTPS 探测，会将它从后端池中排除。\r \r \r \r ## 后续步骤 <a name=\"next-steps\"></a>\r \r 了解 WebSocket 支持后，请转到[创建应用程序网关](application-gateway-create-gateway.md)，开始使用已启用 WebSocket 的 Web 应用程序。"}