{"Title":"从 Azure 访问控制服务 (ACS) 迁移","Description":"将应用和服务从 Azure 访问控制服务迁移的选项 | Azure","Content":"# <a name=\"migrating-from-azure-access-control-service-acs\"></a>从 Azure 访问控制服务 (ACS) 迁移\r \r Azure Active Directory 访问控制（也称为“访问控制服务 (ACS)”）将于 2018 年 11 月停用。  目前使用 ACS 的应用和服务必须在此日期之前完全迁移到其他身份验证机制。 本文档为打算弃用 ACS 的当前客户提供建议。 如果当前未使用 ACS，则无需采取任何措施。\r \r \r ## <a name=\"brief-acs-overview\"></a>ACS 简要概述\r \r ACS 是一项云身份验证服务，使用它可以轻松对用户进行身份验证，授权他们访问 Web 应用和服务，同时，无需编写代码即可实现许多身份验证和授权功能。 该服务主要面向 .NET 客户端、ASP.NET Web 应用和 WCF Web 服务的开发者与架构师。\r \r ACS 用例主要分为三大类：\r \r - 对特定的 Microsoft 云服务（包括 Azure 服务总线、Dynamics CRM 等）进行身份验证。 客户端应用程序可以从 ACS 获取用于对这些服务进行身份验证的令牌，以执行各种操作。\r - 将身份验证添加到定制形式的以及预打包形式的（例如 Sharepoint）Web 应用添加。 使用 ACS“被动”身份验证，Web 应用可以支持使用 Google 帐户、Facebook、Yahoo、Microsoft 帐户 (Live ID)、Azure Active Directory 和 ADFS 登录。\r - 使用 ACS 颁发的令牌保护定制的 Web 服务。 使用“主动”身份验证，Web 服务可以确保只允许通过已在 ACS 中进行身份验证的已知客户端进行访问。\r \r 以下部分介绍每种用例及其建议的迁移策略。 在绝大多数情况下，必须大量更改代码，才能将现有应用和服务迁移到最新的技术。 建议立即开始计划和执行迁移，以避免由此可能带来的任何服务中断或停机。\r \r > [!WARNING]\r > 在大多数情况下，必须大量更改代码，才能将现有应用和服务迁移到最新的技术。 建议立即开始计划和执行迁移，以避免由此可能带来的任何服务中断或停机。\r \r 在体系结构方面，ACS 完全由以下组件构成：\r \r - 安全令牌服务 (STS)，用于接收身份验证请求，以及在响应中颁发令牌。\r - 经典 Azure 门户，用于创建、删除和启用/禁用 ACS 命名空间。\r - 独立的 ACS 管理门户，用于自定义和配置 ACS 命名空间的行为。\r - 管理服务，可用于将门户功能自动化。\r - 令牌转换规则引擎，可用于定义复杂逻辑来处理 ACS 颁发的令牌的输出格式。\r \r 必须创建一个或多个 ACS **命名空间**才能使用这些组件。 命名空间是与应用程序和服务通信的专用 ACS 实例；它与其他所有使用自身命名空间的 ACS 客户相互隔离。 ACS 命名空间具有专用 URL，如下所示：\r \r ```HTTP\r https://mynamespace.accesscontrol.chinacloudapi.cn\r ```\r \r 与 STS 之间的所有通信和管理操作都在此 URL 中完成，路径因用途而异。 若要确定应用程序或服务是否使用 ACS，请监视发往 `https://{namespace}.accesscontrol.chinacloudapi.cn` 的任何流量。  发往此 URL 的任何流量由 ACS 处理，需要停止使用。  发往 `https://accounts.accesscontrol.chinacloudapi.cn` 的任何流量例外 - 发往此 URL 的流量已由其他服务处理，不受 ACS 弃用的影响。  此外，应确保登录到 Azure 经典门户，并在自己拥有的订阅中检查是否有任何 ACS 命名空间。  ACS 命名空间列于“Active Directory”服务的“访问控制命名空间”选项卡下。\r \r 若要详细了解 ACS，请参阅 [MSDN 上的此存档文档](https://msdn.microsoft.com/library/hh147631.aspx)。\r \r ## <a name=\"retirement-schedule\"></a>停用计划\r \r 自 2017 年 11 月起，所有 ACS 组件将完全受支持并可正常运行。 唯一的限制是，[无法通过经典 Azure 门户新建 ACS 命名空间](https://azure.microsoft.com/blog/acs-access-control-service-namespace-creation-restriction/)。\r \r 这些组件的弃用时间表遵循以下计划：\r \r - **2017 年 11 月**：[停用](https://blogs.technet.microsoft.com/enterprisemobility/2017/09/18/marching-into-the-future-of-the-azure-ad-admin-experience-retiring-the-azure-classic-portal/)经典 Azure 门户中的 Azure AD 管理体验。 到时，可通过以下新的专用 URL 管理 ACS 命名空间：`http://manage.windowsazure.cn?restoreClassic=true`。 这不仅可以查看、启用/禁用现有命名空间，而且还可根据需要将其完全删除。\r - **2018 年 4 月**：不再能够通过此专用 URL 管理 ACS 命名空间。 到时，无法禁用/启用、删除或枚举 ACS 命名空间。 不过，ACS 管理门户的功能齐全，其位置为 `https://{namespace}.accesscontrol.chinacloudapi.cn`。 ACS 的其他所有组件也会继续正常运行。\r - **2018 年 11 月**：所有 ACS 组件永久关闭。 这包括 ACS 管理门户、管理服务、STS 和令牌转换规则引擎。 到时，无法向 ACS（位于 `{namespace}.accesscontrol.chinacloudapi.cn`）发送任何请求。 应在此期限之前将所有现有应用和服务迁移到其他技术。\r \r \r ## <a name=\"migration-strategies\"></a>迁移策略\r \r 以下部分简要概述了从 ACS 迁移到其他 Microsoft 技术的建议。\r \r ### <a name=\"clients-of-microsoft-cloud-services\"></a>Microsoft 云服务的客户端\r \r 接受 ACS 颁发的令牌的所有 Microsoft 云服务现在至少支持一种替代形式的身份验证方法。 由于正确的身份验证机制因服务而异，因此，建议参考每个服务的具体文档，以获取官方指导。 为方便起见，下面列出了每套文档：\r \r | 服务 | 指南 |\r | ------- | -------- |\r | Azure 服务总线 | 迁移到共享访问签名 |\r | Azure 缓存 | [迁移到 Azure Redis 缓存](/redis-cache/cache-faq#which-azure-cache-offering-is-right-for-me) |\r | Azure 媒体服务 | 迁移到 Azure AD 身份验证 |\r | Azure 备份 | [升级 Azure 备份代理](/backup/backup-azure-file-folder-backup-faq) |\r \r <!-- Dynamics CRM: Migrate to new SDK, Dynamics team handling privately -->\r <!-- Azure RemoteApp deprecated in favor of Citrix: http://www.zdnet.com/article/microsoft-to-drop-azure-remoteapp-in-favor-of-citrix-remoting-technologies/ -->\r <!-- Exchange push notifications are moving, customers don't need to move -->\r <!-- Retail federation services are moving, customers don't need to move -->\r <!-- Azure StorSimple: TODO -->\r <!-- Azure SiteRecovery: TODO -->\r \r \r ### <a name=\"web-applications-using-passive-authentication\"></a>使用被动身份验证的 Web 应用程序\r \r 对于使用 ACS 进行用户身份验证的 Web 应用程序，ACS 向 Web 应用程序的开发人员和架构师提供以下功能：\r \r - 与 Windows Identity Foundation (WIF) 深度集成。\r - 与 Google、Facebook、Yahoo、Microsoft 帐户 (Live ID)、Azure Active Directory 和 ADFS 联合。\r - 支持以下身份验证协议：OAuth 2.0 草案 13、Ws-Trust 和 Ws-Federation。\r - 支持以下令牌格式：JSON Web 令牌 (JWT)、SAML 1.1、SAML 2.0 和简单 Web 令牌 (SWT)。\r - WIF 中集成了主领域发现体验，可让用户选取用于登录的帐户类型。 此体验由 Web 应用程序托管，且完全可自定义。\r - 令牌转换，可对 Web 应用程序从 ACS 收到的声明进行丰富自定义，具体包括：\r     - 传递标识提供者提供的声明\r     - 添加其他自定义声明\r     - 用于在特定情况下颁发声明的简单 if-then 逻辑\r \r 遗憾的是，没有任何服务可以等效提供所有这些功能。  应先评估所需的 ACS 功能，再选择是要使用 **Azure Active Directory** (Azure AD) 还是其他云身份验证服务。\r \r #### <a name=\"migrating-to-azure-active-directory\"></a>迁移到 Azure Active Directory\r \r 可以考虑的一种途径是将应用和服务直接与 Azure Active Directory 集成。 Azure AD 是基于云的标识提供者，适用于 Microsoft 工作和学校帐户，同时也是 Office 365、Azure 等的标识提供者。 它提供与 ACS 类似的联合身份验证功能，但并不支持所有 ACS 功能。 一个主要例子是与社交标识提供者（例如 Facebook、Google 和 Yahoo）联合。 如果用户使用这些类型的凭据登录，则 Azure AD 并不合适。 虽然 ACS 和 Azure AD 都支持 OAuth 等协议，但后者支持的身份验证协议不一定与 ACS 完全相同。由于每种实现之间存在细微的差别，因此必须在迁移过程中修改代码。\r \r 但是，Azure AD 确实为 ACS 客户带来了多项潜在优势。 它原生支持云中托管的 Microsoft 工作和学校帐户，而 ACS 客户通常使用这些帐户。  Azure AD 租户还可以通过 ADFS 联合到一个或多个本地 Active Directory 实例，使应用能够同时对基于云的用户和本地托管的用户进行身份验证。  它还支持 Ws-Federation 协议，因此，可以相对简单地使用 Windows Identity Foundation (WIF) 来与 Web 应用程序集成。\r \r 下表比较了与 Web 应用程序相关的 ACS 功能与 Azure AD 中提供的功能。 总体来看，**如果只允许用户使用 Microsoft 工作和学校帐户登录，则 Azure Active Directory 可能是正确的迁移选项**。\r \r | 功能 | ACS 支持 | Azure AD 支持 |\r | ---------- | ----------- | ---------------- |\r | **帐户类型** | | |\r | Microsoft 工作和学校帐户 | 支持 | 支持 |\r | Windows Server Active Directory 和 ADFS 中的帐户 | 通过与 Azure AD 租户的联合来支持 <br /> 通过直接与 ADFS 联合来支持 | 只能通过与 Azure AD 租户的联合来支持 | \r | 其他企业标识管理系统中的帐户 | 可以通过与 Azure AD 租户的联合来支持 <br />通过直接联合来支持 | 可以通过与 Azure AD 租户的联合来支持 |\r | 供个人使用的 Microsoft 帐户 (Windows Live ID) | 支持 | 可通过 Azure AD v2.0 OAuth 协议（不能通过其他任何协议）来支持。 | \r | Facebook、Google、Yahoo 帐户 | 支持 | 都不支持。 |\r | **协议和 SDK 兼容性** | | |\r | Windows Identity Foundation (WIF) | 支持 | 支持，但提供的说明有限。 |\r | Ws-Federation | 支持 | 支持 |\r | OAuth 2.0 | 草案 13 支持 | 最新规范 RFC 6749 支持。 |\r | Ws-Trust | 支持 | 不支持 |\r | **令牌格式** | | |\r | JSON Web 令牌 (JWT) | Beta 版支持 | 支持 |\r | SAML 1.1 令牌 | 支持 | 支持 |\r | SAML 2.0 令牌 | 支持 | 支持 |\r | 简单 Web 令牌 (SWT) | 支持 | 不支持 |\r | **自定义** | | |\r | 可自定义的主领域发现/帐户选取 UI | 可整合到应用中的可下载代码 | 不支持 |\r | 上传自定义令牌签名证书 | 支持 | 支持 |\r | 自定义令牌中的声明 | 传递来自标识提供者的输入声明<br />以声明形式从标识提供者获取访问令牌<br />根据输入声明值颁发输出声明<br />颁发包含常量值的输出声明 | 无法传递来自联合标识提供者的声明<br />无法以声明形式从标识提供者获取访问令牌<br />无法根据输入声明值颁发输出声明<br />可以颁发包含常量值的输出声明<br />可以根据同步到 Azure AD 的用户属性颁发输出声明 |\r | **自动化** | | |\r | 自动执行配置/管理任务 | 通过 ACS 管理服务来支持 | 通过 Microsoft Graph 和 Azure AD 图形 API 来支持。 |\r \r 如果确定 Azure AD 是迁移应用程序和服务的适当途径，可遵循[此代码示例](https://github.com/Azure-Samples/active-directory-dotnet-webapp-wsfederation)，其中有关如何设置 Ws-Federation 的说明略有不同。 此代码示例不使用 WIF，而是使用 ASP.NET 4.5 OWIN 中间件。 但是，有关应用注册的说明也适用于使用 WIF 的应用，且不需要 Azure AD Premium 许可证。  如果选择此方法，则需要了解 [Azure AD 中的签名密钥滚动更新](/active-directory/develop/active-directory-signing-key-rollover)。 此方法使用 Azure AD 全局签名密钥来颁发令牌。 默认情况下，WIF 不会自动刷新签名密钥。 如果 Azure AD 轮用其全局签名密钥，则 WIF 实现需要做好接受更改的准备。\r \r 如果能够通过 OpenID Connect 或 OAuth 协议来与 Azure AD 集成，则我们建议这样做。  我们提供了丰富的文档和指南来介绍如何将 Azure AD 集成到 Web 应用程序，具体请参阅 [Azure AD 开发人员指南](http://aka.ms/aaddev)。\r \r <!-- TODO: If customers ask about authZ, let's put a blurb on role claims here -->\r \r #### <a name=\"other-migration-options\"></a>其他迁移选项\r \r 如果 Azure AD 无法满足 Web 应用程序的需求，请与我们联系，我们会帮助你确定最佳迁移途径。\r \r <!--\r \r #### Migrating to Ping Identity or Auth0\r \r In some cases, you may find that neither Azure AD nor Azure AD B2C is sufficient to replace ACS in your web applications without making major code changes.  Some common examples might include:\r \r - web applications using WIF and/or WS-Federation for sign-in with social identity providers such as Google or Facebook.\r - web applications performing direct federation to an enterprise IDP over the Ws-Federation protocol.\r - web applications that require the access token issued by a social identity provider (such as Google or Facebook) as a claim in the tokens issued by ACS.\r - web applications with complex token transformation rules that Azure AD or Azure AD B2C cannot reproduce.\r \r In these cases, you may want to consider migrating your web application to another cloud authentication service. We recommend exploring the following options, as each provides capabilities similar to ACS:\r \r - [Auth0](https://auth0.com/) has created [high-level migration guidance for customers of ACS](https://auth0.com/blog/windows-azure-acs-alternative-replacement/), and provides a feature-by-feature comparison of ACS vs. Auth0.\r - Enterprise customers should consider [Ping Identity](https://www.pingidentity.com) as well. Reach out to us and we can connect you with a representative from Ping who is prepared to help identify potential solutions.\r \r Our aim in working with Ping Identity & Auth0 is to ensure that all ACS customers have a path forward for their apps & services that minimizes the amount of work required to move off of ACS.\r \r -->\r \r <!--\r \r ## Sharepoint 2010, 2013, 2016\r \r TODO: AAD only, use AAD SAML 1.1 tokens, when we bring it back online.\r Other IDPs: use Auth0? https://auth0.com/docs/integrations/sharepoint.\r \r -->\r \r ### <a name=\"web-services-using-active-authentication\"></a>使用主动身份验证的 Web 服务\r \r 对于受 ACS 颁发的令牌保护的 Web 服务，ACS 提供以下功能：\r \r - 在可用于请求令牌的 ACS 命名空间中注册一个或多个**服务标识**。\r - 支持使用以下类型凭据通过 OAuth WRAP 和 OAuth 2.0 草案 13 协议请求令牌：\r     - 为服务标识创建的简单密码\r     - 使用对称密钥或 X509 证书的签名 SWT\r     - 受信任标识提供者（通常为 ADFS 实例）颁发的 SAML 令牌\r - 支持以下令牌格式：JSON Web 令牌 (JWT)、SAML 1.1、SAML 2.0 和简单 Web 令牌 (SWT)。\r - 简单令牌转换规则\r \r ACS 中的服务标识通常用于实现服务器到服务器 (S2S) 形式的身份验证。  \r \r #### <a name=\"migrating-to-azure-active-directory\"></a>迁移到 Azure Active Directory\r \r 对于这种类型的身份验证流，我们建议迁移到 **Azure Active Directory** (Azure AD)。 Azure AD 是基于云的标识提供者，适用于 Microsoft 工作和学校帐户，同时也是 Office 365、Azure 等的标识提供者。 但是，它也可用于服务器到服务器身份验证（使用 Azure AD 实现的 OAuth 客户端凭据授予）。  下表比较了服务器到服务器身份验证中的 ACS 功能与 Azure AD 中提供的功能。\r \r | 功能 | ACS 支持 | Azure AD 支持 |\r | ---------- | ----------- | ---------------- |\r | 如何注册 Web 服务 | 在 ACS 管理门户中创建信赖方。 | 在 Azure 门户中创建 Azure AD Web 应用程序。 |\r | 如何注册客户端 | 在 ACS 管理门户中创建服务标识。 | 在 Azure 门户中创建另一个 Azure AD Web 应用。 |\r | 使用的协议 | OAuth WRAP 协议<br />OAuth 2.0 草案 13 客户端凭据授予 | OAuth 2.0 客户端凭据授予 |\r | 客户端身份验证方法 | 简单密码<br />签名的 SWT<br />联合 IDP 提供的 SAML 令牌 | 简单密码<br />签名的 JWT |\r | 令牌格式 | JWT<br />SAML 1.1<br />SAML 2.0<br />SWT<br /> | 仅限 JWT |\r | 令牌转换 | 添加自定义声明<br />简单 if-then 声明颁发逻辑 | 添加自定义声明 | \r | 自动执行配置/管理任务 | 通过 ACS 管理服务来支持 | 通过 Microsoft Graph 和 Azure AD 图形 API 来支持。 |\r \r 若要了解如何实现服务器到服务器身份验证方案，请参阅以下资源：\r \r - [Azure AD 开发人员指南中的“服务到服务身份验证”部分](https://aka.ms/aaddev)。\r - [使用简单密码客户端凭据的守护程序代码示例](https://github.com/Azure-Samples/active-directory-dotnet-daemon)\r - [使用证书客户端凭据的守护程序代码示例](https://github.com/Azure-Samples/active-directory-dotnet-daemon-certificate-credential)\r \r #### <a name=\"other-migration-options\"></a>其他迁移选项\r \r 如果 Azure AD 无法满足 Web 服务的需求，请给我们留言，我们会帮助你确定最适合用例的计划。\r \r <!--\r \r #### Migrating to Ping Identity or Auth0\r \r In some cases, you may find that neither Azure AD's client credentials OAuth grant implementation is not sufficient to replace ACS in your architecture without major code changes.  Some common examples might include:\r \r - server-to-server authentication using token formats other than JWTs.\r - server-to-server authentication using an input token provided by an external identity provider.\r - server-to-server authentication with token transformation rules that Azure AD cannot reproduce.\r \r In these cases, you may want to consider migrating your web application to another cloud authentication service. We recommend exploring the following options, as each provides capabilities similar to ACS:\r \r - [Auth0](https://auth0.com/) has created [high-level migration guidance for customers of ACS](https://auth0.com/blog/windows-azure-acs-alternative-replacement/), and provides a feature-by-feature comparison of ACS vs. Auth0.\r - Enterprise customers should consider [Ping Identity](https://www.pingidentity.com) as well. Reach out to us and we can connect you with a representative from Ping who is prepared to help identify potential solutions.\r \r Our aim in working with Ping Identity & Auth0 is to ensure that all ACS customers have a path forward for their apps & services that minimizes the amount of work required to move off of ACS.\r \r -->\r \r ## <a name=\"questions-concerns--feedback\"></a>问题、疑虑和反馈\r \r 我们知道，在阅读本文后，许多 ACS 客户都确定不了一个明确的迁移途径，在确定正确计划方面可能需要一些协助或指导。 若要讨论迁移方案和问题，请在本页上留言。\r \r "}