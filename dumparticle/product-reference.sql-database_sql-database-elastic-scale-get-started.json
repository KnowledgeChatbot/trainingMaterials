{"Title":"弹性数据库工具入门","Description":"大致介绍 Azure SQL 数据库的弹性数据库工具功能，包括易于使用的示例应用。","Content":"# <a name=\"get-started-with-elastic-database-tools\"></a>弹性数据库工具入门\r 本文档通过帮助你运行示例应用来介绍[弹性数据库客户端库](sql-database-elastic-database-client-library.md)的开发人员体验。 此示例应用将创建一个简单的分片应用程序，并探讨弹性数据库工具的主要功能。 它重点介绍[分片映射管理](sql-database-elastic-scale-shard-map-management.md)、[数据依赖型路由](sql-database-elastic-scale-data-dependent-routing.md)和[多分片查询](sql-database-elastic-scale-multishard-querying.md)的用例。 该客户端库可用于 Java 和 .Net。 \r \r ## <a name=\"elastic-database-tools-for-java\"></a>适用于 Java 的弹性数据库工具\r ### <a name=\"prerequisites\"></a>先决条件\r * Java 开发人员工具包 (JDK) 1.8 或更高版本\r * [Maven](http://maven.apache.org/download.cgi)\r * Azure 或本地 SQL Server 中的逻辑服务器\r \r ### <a name=\"download-and-run-the-sample-app\"></a>下载并运行示例应用\r 按照以下步骤生成 JAR 文件并开始使用示例项目： \r 1. 克隆包含客户端库以及示例应用的 [GitHub 存储库](https://github.com/Microsoft/elastic-db-tools-for-java)。 \r 2. 编辑 _./sample/src/main/resources/resource.properties_ 文件以设置以下内容。\r     * TEST_CONN_USER\r     * TEST_CONN_PASSWORD\r     * TEST_CONN_SERVER_NAME\r 3. 从 _./sample_ 目录运行以下命令以生成示例项目。<br>\r \r     ```\r     mvn install\r     ```\r     \r 4. 从 _./sample_ 目录运行以下命令以启动示例项目。 \r     \r     ```\r     mvn -q exec:java \"-Dexec.mainClass=com.microsoft.azure.elasticdb.samples.elasticscalestarterkit.Program\"\r     ```\r     \r 5. 尝试使用不同的选项，深入了解客户端库功能。 随意浏览代码以了解示例应用的实现方法。\r \r     ![Progress-java][5]\r     \r 祝贺！ 已成功使用弹性数据库工具在 SQL 数据库上生成并运行了第一个分片应用程序。 使用 Visual Studio 或 SQL Server Management Studio 连接到 SQL 数据库，并快速查看一下样本创建的分片。 会看到该示例创建的新示例分片数据库和分片映射管理器数据库。 若要将客户端库添加到自己的 Maven 项目，请在 POM 文件中添加以下依赖项。<br>\r \r ```xml\r <dependency> \r     <groupId>com.microsoft.azure</groupId> \r     <artifactId>elastic-db-tools</artifactId> \r     <version>1.0.0</version> \r </dependency> \r ```\r \r ## <a name=\"elastic-database-tools-for-net\"></a>适用于 .Net 的弹性数据库工具 \r ### <a name=\"prerequisites\"></a>先决条件\r * 使用 C# 的 Visual Studio 2012 或更高版本。 可以从 [Visual Studio 下载页面](http://www.visualstudio.com/downloads/download-visual-studio-vs.aspx)下载免费版本。\r * NuGet 2.7 或更高版本。 若要获取最新版本，请参阅[安装 NuGet](http://docs.nuget.org/docs/start-here/installing-nuget)。\r \r ### <a name=\"download-and-run-the-sample-app\"></a>下载并运行示例应用\r 若要安装该库，请转到 [Microsoft.Azure.SqlDatabase.ElasticScale.Client](https://www.nuget.org/packages/Microsoft.Azure.SqlDatabase.ElasticScale.Client/)。 该库和以下部分中描述的示例应用一起安装。\r \r 若要下载并运行该示例，请遵循以下步骤： \r \r 1. 从 MSDN 下载 [Elastic DB Tools for Azure SQL - Getting Started sample](https://code.msdn.microsoft.com/windowsapps/Elastic-Scale-with-Azure-a80d8dc6)（Azure SQL 弹性数据库工具 - 入门示例）。 将示例解压缩到所选位置。\r \r 2. 若要创建项目，请从 C# 目录打开 ElasticScaleStarterKit.sln 解决方案。\r \r 3. 在示例项目的解决方案中打开 app.config 文件。 然后遵循该文件中的说明添加 Azure SQL 数据库服务器名称和你的登录信息（用户名和密码）。\r \r 4. 构建并运行应用程序。 出现提示时，请允许 Visual Studio 还原该解决方案的 NuGet 包。 这将会从 NuGet 下载最新版本的弹性数据库客户端库。\r \r 5. 尝试使用不同的选项，深入了解客户端库功能。 请注意应用程序在控制台输出中执行的步骤，并随意浏览后台代码。\r \r     ![Progress][4]\r \r 恭喜 - 已成功使用弹性数据库工具在 SQL 数据库上生成并运行了第一个分片应用程序。 使用 Visual Studio 或 SQL Server Management Studio 连接到 SQL 数据库，并快速查看一下样本创建的分片。 会看到该示例创建的新示例分片数据库和分片映射管理器数据库。\r \r > [!IMPORTANT]\r > 建议始终使用最新版本的 Management Studio，以便与 Azure 和 SQL 数据库的更新保持同步。 [更新 SQL Server Management Studio](https://msdn.microsoft.com/library/mt238290.aspx)。\r > \r > \r \r ## <a name=\"key-pieces-of-the-code-sample\"></a>重要的代码示例片段\r * **管理分片和分片映射**：该代码演示如何在 **ShardManagementUtils.cs** 文件中处理分片、范围和映射。 有关详细信息，请参阅[使用分片映射管理器扩大数据库](sql-database-elastic-scale-shard-map-management.md)。  \r \r * **数据依赖型路由**：**DataDependentRoutingSample.cs** 中演示了如何向正确的分片路由事务。 有关详细信息，请参阅[数据依赖型路由](sql-database-elastic-scale-data-dependent-routing.md)。 \r \r * **查询多个分片**：文件 **MultiShardQuerySample.cs** 中演示了如何跨分片查询。 有关详细信息，请参阅[多分片查询](sql-database-elastic-scale-multishard-querying.md)。\r \r * **添加空分片**：**CreateShardSample.cs** 文件中的代码以迭代方式添加新的空分片。 有关详细信息，请参阅[使用分片映射管理器扩大数据库](sql-database-elastic-scale-shard-map-management.md)。\r \r ## <a name=\"other-elastic-scale-operations\"></a>其他弹性缩放操作\r * **拆分现有分片**：拆分分片的功能由**拆分/合并工具**提供。 有关详细信息，请参阅[在横向扩展的云数据库之间移动数据](sql-database-elastic-scale-overview-split-and-merge.md)。\r \r * **合并现有分片**：分片合并也是使用**拆分/合并工具**执行的。 有关详细信息，请参阅[在横向扩展的云数据库之间移动数据](sql-database-elastic-scale-overview-split-and-merge.md)。   \r \r ## <a name=\"cost\"></a>成本\r 弹性数据库工具免费。 使用弹性数据库工具时，除 Azure 使用成本外，不会支付任何额外费用。 \r \r 例如，示例应用程序会创建新的数据库。 这种费用取决于所选的 SQL 数据库版本以及应用程序的 Azure 使用情况。\r \r 有关定价信息，请参阅 [SQL 数据库定价详细信息](https://www.azure.cn/pricing/details/sql-database/)。\r \r ## <a name=\"next-steps\"></a>后续步骤\r 有关弹性数据库工具的详细信息，请参阅以下页面：\r \r * 代码示例： \r   * 弹性数据库工具（[.NET](http://code.msdn.microsoft.com/Elastic-Scale-with-Azure-a80d8dc6?SRC=VSIDE)、[Java](https://search.maven.org/#search%7Cga%7C1%7Ca%3A%22azure-elasticdb-tools%22)）\r   * [Elastic DB Tools for Azure SQL - Entity Framework Integration](http://code.msdn.microsoft.com/Elastic-Scale-with-Azure-bae904ba?SRC=VSIDE)（Azure SQL 的弹性数据库工具 - 实体框架集成）\r   * [脚本中心上的分片弹性](https://gallery.technet.microsoft.com/scriptcenter/Elastic-Scale-Shard-c9530cbe)\r * 博客：[弹性缩放通告](https://azure.microsoft.com/blog/2014/10/02/introducing-elastic-scale-preview-for-azure-sql-database/)\r * Microsoft 虚拟大学：[使用分片和弹性数据库客户端库实现向外扩展视频](https://mva.microsoft.com/training-courses/elastic-database-capabilities-with-azure-sql-db-16554?l=lWyQhF1fC_6306218965) \r * 第 9 频道： [弹性缩放概述视频](http://channel9.msdn.com/Shows/Data-Exposed/Azure-SQL-Database-Elastic-Scale)\r * 论坛： [Azure SQL 数据库论坛](https://social.msdn.microsoft.com/Forums/zh-cn/home?forum=ssdsgetstarted)\r * 要测量性能：[分片映射管理器的性能计数器](sql-database-elastic-database-client-library.md)\r \r <!--Anchors-->\r [The Elastic Scale Sample Application]: #The-Elastic-Scale-Sample-Application\r [Download and Run the Sample App]: #Download-and-Run-the-Sample-App\r [Cost]: #Cost\r [Next steps]: #next-steps\r \r <!--Image references-->\r [1]: ./media/sql-database-elastic-scale-get-started/newProject.png\r [2]: ./media/sql-database-elastic-scale-get-started/click-online.png\r [3]: ./media/sql-database-elastic-scale-get-started/click-CSharp.png\r [4]: ./media/sql-database-elastic-scale-get-started/output2.png\r [5]: ./media/sql-database-elastic-scale-get-started/java-client-library.PNG\r \r "}