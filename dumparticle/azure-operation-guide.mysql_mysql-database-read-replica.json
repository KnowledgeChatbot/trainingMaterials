{"Title":"MySQL Database on Azure主从复制和只读实例","Description":"本文介绍了MySQL PasS主从复制和只读实例的实现方法。","Content":"\r #MySQL Database on Azure主从复制和只读实例\r \r > [!div class=\"op_single_selector\"]\r > * [中文](https://docs.azure.cn/zh-cn/mysql/mysql-database-read-replica)\r > * [英文](https://docs.azure.cn/en-us/mysql/mysql-database-read-replica)\r \r MySQL Database on Azure支持用户使用复制功能为MySQL实例创建从属实例。所有在主实例上的改动都会复制到从属实例。通过该功能，用户可以轻松实现弹性扩展，突破单个数据库实例的访问限制，从而降低运行负荷及增加高可用性。\r \r 对于商业智能报告(BI)或数据仓库方案，通常用户希望对独立的只读实例（而非生产数据库的只读实例）运行业务报告查询。复制功能还可以用于在生产环境和开发环境之间迁移数据库。此外，用户还可以利用复制功能提高生产环境的可用性和容灾性。在故障发生时，您可以提升只读实例取代失效的主实例，切换工作负载，从而保障业务的可用性和连续性。\r \r 当用户创建一个从属实例时，Azure首先会对主实例做一个备份，然后基于该备份创建一个新的只读实例作为从属实例。随后，Azure会不断地将主实例上的所有改动复制到从属实例上。\r \r >注意事项：\r >\r >1. 从属实例和主实例的MySQL版本必须一致。MySQL Database on Azure不支持不同MySQL版本间的复制。\r >\r >2. 目前，对于同一个主实例，MySQL Database on Azure最多只支持5个从属实例，无论这些实例是本地还是异地从属实例。\r >\r >3. 为了保证主实例和从属实例间的数据一致，从属实例是只读实例。它上面的所有MySQL连接都是只读连接。在从属实例上，用户不能创建、更改、删除数据库和数据库账户。用户可以在主实例进行操作，系统自动同步到只读实例。\r \r ##创建只读（从属）实例\r \r 1. 选择一个现有实例，点击**创建从属实例**。\r 2. 填写从属**服务器名称**，选择服务器**位置**（异地复制请选择另一个数据中心），并**配置性能**。最后点击**确定**。\r \r ![](./media/mysql-database-read-replica/create_read_replica-ibiza.png)\r \r >注意事项：\r >\r >由于在创建从属实例的过程中，MySQL Database on Azure会对主实例做备份，请确保此时主实例上没有需要长时间运行的查询或改动，从而避免备份失败。\r \r ##监控从属实例复制状态\r \r 从属实例创建成功后，用户可以通过多种方法监控主实例和从属实例间的复制。管理门户上主实例的概述页显示了它的所有从属实例及它们的状态。\r \r ![](./media/mysql-database-read-replica/monit_replica-ibiza.png)\r \r \r ##在应用程序中实现读写分离\r \r 下面是应用端读写分离的Java样例程序：\r \r ```java\r package test1;\r \r import java.sql.Connection;\r import java.sql.ResultSet;\r import java.sql.Statement;\r import java.util.Properties;\r \r import com.mysql.jdbc.Driver;\r import com.mysql.jdbc.ReplicationDriver;;\r \r public class ConnectionDemo {\r \r   public static void main(String[] args) throws Exception {\r \r     ReplicationDriver driver = new ReplicationDriver();\r     String url = \"jdbc:mysql:replication://address=(protocol=tcp)(type=master)(host=masterhost)(port=3306)(user=masteruser),address=(protocol=tcp)(type=slave)(host=slavehost)(port=3306)(user=slaveuser)/yourdb\";\r     Properties props = new Properties();    \r     props.put(\"password\", \"yourpassword\");\r     try (Connection conn = driver.connect(url, props))\r     {\r         // Perform read/write work on the master\r         conn.setReadOnly(false);\r         conn.setAutoCommit(false);\r         conn.createStatement().executeUpdate(\"update t1 set id = id+1;\");\r         conn.commit();    \r \r         // Set up connection to slave;\r         conn.setReadOnly(true);\r \r         // Now, do a query from a slave\r         try (Statement statement = conn.createStatement())\r         {\r             ResultSet res = statement.executeQuery(\"show tables\");\r             System.out.println(\"There are below tables:\");\r             while (res.next()) {\r                 String tblName = res.getString(1);\r                 System.out.println(tblName);\r             }\r         } \r     }\r   }\r }\r ```\r \r 下面是应用端读写分离的PHP样例程序：\r \r - 读写分离可以通过PHP MySQL原生驱动配合主从实例插件(PECL/mysqlnd_ms)来实现。这个插件在已配置好的从属实例上执行只读语句，其他所有的查询都执行在MySQL主实例上。具体内容可参考[这里](http://php.net/manual/zh/mysqlnd-ms.rwsplit.php)。\r \r - 用户定义的读写分离器可以请求内置的逻辑语句发送到特定位置，调用 mysqlnd\\_ms\\_is\\_select()。\r \r - 安装 PECL/mysqlnd_ms请参考[这里](http://php.net/manual/zh/mysqlnd-ms.quickstart.configuration.php)。\r \r - 创建 PECL/mysqlnd_ms插件配置文件如下所示：\r \r     ```\r     File mysqlnd_ms_plugin.ini:\r     {\r         \"myapp\": {\r                \"master\": {\r                 \"master_0\": {\r                     \"host\": \"<your master host>\",\r                     \"port\": \"<your master port>\",\r                     \"user\": \"<your master username>\",\r                     \"password\": \"<your master password>\"\r                     }\r             },\r             \"slave\": {\r                 \"slave_0\": {\r                     \"host\": \"<your slave host>\",\r                     \"port\": \"<your slave port>\",\r                     \"user\": \"<your slave username>\",\r                     \"password\": \"<your slave password>\"\r                 }\r             }\r     }\r     ```\r \r - PHP样例程序：\r \r     ```php\r     <?php\r     function is_select($query)\r     {\r       switch (mysqlnd_ms_query_is_select($query))\r       {\r         case MYSQLND_MS_QUERY_USE_MASTER:\r           printf(\"'%s' should be run on the master.<br>\\n\", $query);\r           break;\r         case MYSQLND_MS_QUERY_USE_SLAVE:\r           printf(\"'%s' should be run on a slave.<br>\\n\", $query);\r           break;\r         case MYSQLND_MS_QUERY_USE_LAST_USED:\r           printf(\"'%s' should be run on the server that has run the previous query.<br>\\n\", $query);\r           break;\r         default:\r           printf(\"No suggestion where to run the '%s', fallback to master recommended.<br>\\n\", $query);\r           break;\r       }\r     }\r \r     if (!($mysqli = new mysqli(\"myapp\", \"<your username>\", \"<your password>\", \"<your db>\")) || mysqli_connect_errno())\r     {\r       die(sprintf(\"Failed to connect: [%d] %s\\n\", mysqli_connect_errno(), mysqli_connect_error()));\r     }\r     $query = \"INSERT INTO user(name, num) VALUES ('test', 1)\";\r     is_select($query);\r \r     if (!($res = $mysqli->query($query)))\r     {\r       printf(\"Failed to insert: [%d] %s<br>\\n\", $mysqli->errno, $mysqli->error);\r     }\r \r     $query = \"SELECT * FROM user\";\r     is_select($query);\r     if (!($res = $mysqli->query($query)))\r     {\r       printf(\"Failed to query: [%d] %s<br>\\n\", $mysqli->errno, $mysqli->error);\r     }\r     else\r     {\r       for ($i=0; $row = $res->fetch_assoc(); $i++)\r       {\r         $value[$i] = $row;\r       }\r       print_r($value);\r       printf(\"<br>\\n\");\r       $res->close();\r     }\r \r     $query = \"/*\" . MYSQLND_MS_LAST_USED_SWITCH . \"*/SELECT * FROM user limit 1\";\r     is_select($query);\r     if (!($res = $mysqli->query($query)))\r     {\r       printf(\"Failed to query: [%d] %s<br>\\n\", $mysqli->errno, $mysqli->error);\r     }\r     else\r     {\r       $value = $res->fetch_assoc();\r       print_r($value);\r       printf(\"<br>\\n\");\r       $res->close();\r     }\r     $mysqli->close();\r     ?>\r     ```\r \r ##提升从属实例\r \r 用户可以把一个从属实例提升为联机读写实例。提升后，主实例上的改动不再复制到该实例上。用户可以对该实例进行读写操作。\r \r 1. 选择需要被提升的从属实例，点击**停止复制**。\r 2. 输入**资源名称**，然后点击**确定**。\r \r ![](./media/mysql-database-read-replica/promote_replica-ibiza.png)"}