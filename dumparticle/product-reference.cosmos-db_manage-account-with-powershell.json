{"Title":"Azure Cosmos DB 自动化 - 使用 Powershell 管理","Description":"使用 Azure Powershell 管理 Azure Cosmos DB 帐户。","Content":"# 使用 PowerShell 创建 Azure Cosmos DB 帐户\r <a name=\"create-an-azure-cosmos-db-account-using-powershell\" ></a>\r \r 以下指南介绍了使用 Azure Powershell 自动管理 Azure Cosmos DB 数据库帐户的命令。 它还包括用于管理 [多区域数据库帐户][scaling-globally]的帐户密钥和故障转移优先级的命令。 更新数据库帐户可以修改一致性策略以及添加/删除区域。 对于 Azure Cosmos DB 帐户的跨平台管理，可使用 [Azure CLI](cli-samples.md)、[资源提供程序 REST API][rp-rest-api] 或 [Azure 门户](create-documentdb-dotnet.md#create-account)。\r \r ## 入门\r <a name=\"getting-started\" ></a>\r \r 请按照[如何安装和配置 Azure PowerShell][powershell-install-configure] 中的说明在 PowerShell 中安装 Azure Resource Manager 帐户并登录到该帐户。\r \r ### 说明\r <a name=\"notes\" ></a>\r \r * 如果想要执行以下命令而无需用户确认，请向命令追加 `-Force` 标志。\r * 以下所有命令都是同步执行的。\r \r ## <a name=\"create-documentdb-account-powershell\"></a> 创建 Azure Cosmos DB 帐户\r \r 使用此命令可创建 Azure Cosmos DB 数据库帐户。 可以将新数据库帐户配置为具有特定[一致性策略](consistency-levels.md)的单区域或[多区域][scaling-globally]。\r \r     $locations = @(@{\"locationName\"=\"<write-region-location>\"; \"failoverPriority\"=0}, @{\"locationName\"=\"<read-region-location>\"; \"failoverPriority\"=1})\r     $iprangefilter = \"<ip-range-filter>\"\r     $consistencyPolicy = @{\"defaultConsistencyLevel\"=\"<default-consistency-level>\"; \"maxIntervalInSeconds\"=\"<max-interval>\"; \"maxStalenessPrefix\"=\"<max-staleness-prefix>\"}\r     $CosmosDBProperties = @{\"databaseAccountOfferType\"=\"Standard\"; \"locations\"=$locations; \"consistencyPolicy\"=$consistencyPolicy; \"ipRangeFilter\"=$iprangefilter}\r     New-AzureRmResource -ResourceType \"Microsoft.DocumentDb/databaseAccounts\" -ApiVersion \"2015-04-08\" -ResourceGroupName <resource-group-name>  -Location \"<resource-group-location>\" -Name <database-account-name> -Properties $CosmosDBProperties\r \r * `<write-region-location>` 数据库帐户的写入区域位置名称。 此位置的故障转移优先级值需要为 0。 每个数据库帐户必须有且只有一个写入区域。\r * `<read-region-location>` 数据库帐户的读取区域位置名称。 此位置的故障转移优先级值需要大于 0。 每个数据库帐户可以有多个读取区域。\r * `<ip-range-filter>` 指定 IP 地址集合或者 CIDR 格式的 IP 地址范围，以便将这些地址作为指定数据库帐户所允许的客户端 IP 列表。 IP 地址/范围必须以逗号分隔，且不得包含空格。 有关详细信息，请参阅 [Azure Cosmos DB 防火墙支持](firewall-support.md)\r * `<default-consistency-level>` Azure Cosmos DB 帐户的默认一致性级别。 有关详细信息，请参阅 [Azure Cosmos DB 中的一致性级别](consistency-levels.md)。\r * `<max-interval>` 与有限过期一致性一起使用时，此值表示允许的过期时间（以秒为单位）。 此值的接受范围为 1-100。\r * `<max-staleness-prefix>` 与有限过期一致性一起使用时，此值表示允许的过期请求数。 此值的接受范围为 1 - 2,147,483,647。\r * `<resource-group-name>` 新的 Azure Cosmos DB 数据库帐户所属的 [Azure 资源组][azure-resource-groups] 的名称。\r * `<resource-group-location>` 新的 Azure Cosmos DB 数据库帐户所属的 Azure 资源组的位置。\r * `<database-account-name>` 要创建的 Azure Cosmos DB 数据库帐户的名称。 它只能使用小写字母、数字及“-”字符，且长度必须为 3 到 50 个字符。\r \r 示例： \r \r     $locations = @(@{\"locationName\"=\"China North\"; \"failoverPriority\"=0}, @{\"locationName\"=\"China East\"; \"failoverPriority\"=1})\r     $iprangefilter = \"\"\r     $consistencyPolicy = @{\"defaultConsistencyLevel\"=\"BoundedStaleness\"; \"maxIntervalInSeconds\"=5; \"maxStalenessPrefix\"=100}\r     $CosmosDBProperties = @{\"databaseAccountOfferType\"=\"Standard\"; \"locations\"=$locations; \"consistencyPolicy\"=$consistencyPolicy; \"ipRangeFilter\"=$iprangefilter}\r     New-AzureRmResource -ResourceType \"Microsoft.DocumentDb/databaseAccounts\" -ApiVersion \"2015-04-08\" -ResourceGroupName \"rg-test\" -Location \"China North\" -Name \"docdb-test\" -Properties $CosmosDBProperties\r \r ### 说明\r <a name=\"notes\" ></a>\r * 前面的示例使用两个区域创建数据库帐户。 还可能创建单区域（指定为写入区域并且故障转移优先级值为 0）或多区域数据库帐户。 有关详细信息，请参阅[多区域数据库帐户][scaling-globally]。\r * 这些位置必须是已正式推出 Azure Cosmos DB 的区域。 [“Azure 区域”页](https://azure.microsoft.com/regions/#services)提供了当前的区域列表。\r \r ## <a name=\"update-documentdb-account-powershell\"></a> 更新 DocumentDB 数据库帐户\r \r 此命令可更新 Azure Cosmos DB 数据库帐户属性。 这包括一致性策略和数据库帐户所在的位置。\r \r > [!NOTE]\r > 此命令可添加和删除区域，但不可修改故障转移优先级。 若要修改故障转移优先级，请参阅 [下文](#modify-failover-priority-powershell)。\r \r     $locations = @(@{\"locationName\"=\"<write-region-location>\"; \"failoverPriority\"=0}, @{\"locationName\"=\"<read-region-location>\"; \"failoverPriority\"=1})\r     $iprangefilter = \"<ip-range-filter>\"\r     $consistencyPolicy = @{\"defaultConsistencyLevel\"=\"<default-consistency-level>\"; \"maxIntervalInSeconds\"=\"<max-interval>\"; \"maxStalenessPrefix\"=\"<max-staleness-prefix>\"}\r     $CosmosDBProperties = @{\"databaseAccountOfferType\"=\"Standard\"; \"locations\"=$locations; \"consistencyPolicy\"=$consistencyPolicy; \"ipRangeFilter\"=$iprangefilter}\r     Set-AzureRmResource -ResourceType \"Microsoft.DocumentDb/databaseAccounts\" -ApiVersion \"2015-04-08\" -ResourceGroupName <resource-group-name> -Name <database-account-name> -Properties $CosmosDBProperties\r \r * `<write-region-location>` 数据库帐户的写入区域位置名称。 此位置的故障转移优先级值需要为 0。 每个数据库帐户必须有且只有一个写入区域。\r * `<read-region-location>` 数据库帐户的读取区域位置名称。 此位置的故障转移优先级值需要大于 0。 每个数据库帐户可以有多个读取区域。\r * `<default-consistency-level>` Azure Cosmos DB 帐户的默认一致性级别。 有关详细信息，请参阅 [Azure Cosmos DB 中的一致性级别](consistency-levels.md)。\r * `<ip-range-filter>` 指定 IP 地址集合或者 CIDR 格式的 IP 地址范围，以便将这些地址作为指定数据库帐户所允许的客户端 IP 列表。 IP 地址/范围必须以逗号分隔，且不得包含空格。 有关详细信息，请参阅 [Azure Cosmos DB 防火墙支持](firewall-support.md)\r * `<max-interval>` 与有限过期一致性一起使用时，此值表示允许的过期时间（以秒为单位）。 此值的接受范围为 1-100。\r * `<max-staleness-prefix>` 与有限过期一致性一起使用时，此值表示允许的过期请求数。 此值的接受范围为 1 - 2,147,483,647。\r * `<resource-group-name>` 新的 Azure Cosmos DB 数据库帐户所属的 [Azure 资源组][azure-resource-groups] 的名称。\r * `<resource-group-location>` 新的 Azure Cosmos DB 数据库帐户所属的 Azure 资源组的位置。\r * `<database-account-name>` 要更新的 Azure Cosmos DB 数据库帐户的名称。\r \r 示例： \r \r     $locations = @(@{\"locationName\"=\"China North\"; \"failoverPriority\"=0}, @{\"locationName\"=\"China East\"; \"failoverPriority\"=1})\r     $iprangefilter = \"\"\r     $consistencyPolicy = @{\"defaultConsistencyLevel\"=\"BoundedStaleness\"; \"maxIntervalInSeconds\"=5; \"maxStalenessPrefix\"=100}\r     $CosmosDBProperties = @{\"databaseAccountOfferType\"=\"Standard\"; \"locations\"=$locations; \"consistencyPolicy\"=$consistencyPolicy; \"ipRangeFilter\"=$iprangefilter}\r     Set-AzureRmResource -ResourceType \"Microsoft.DocumentDb/databaseAccounts\" -ApiVersion \"2015-04-08\" -ResourceGroupName \"rg-test\" -Name \"docdb-test\" -Properties $CosmosDBProperties\r \r ## <a name=\"delete-documentdb-account-powershell\"></a> 删除 DocumentDB 数据库帐户\r \r 此命令可删除现有 Azure Cosmos DB 数据库帐户。\r \r     Remove-AzureRmResource -ResourceType \"Microsoft.DocumentDb/databaseAccounts\" -ApiVersion \"2015-04-08\" -ResourceGroupName \"<resource-group-name>\" -Name \"<database-account-name>\"\r \r * `<resource-group-name>` 新的 Azure Cosmos DB 数据库帐户所属的 [Azure 资源组][azure-resource-groups] 的名称。\r * `<database-account-name>` 要删除的 Azure Cosmos DB 数据库帐户的名称。\r \r 示例：\r \r     Remove-AzureRmResource -ResourceType \"Microsoft.DocumentDb/databaseAccounts\" -ApiVersion \"2015-04-08\" -ResourceGroupName \"rg-test\" -Name \"docdb-test\"\r \r ## <a name=\"get-documentdb-properties-powershell\"></a> 获取 DocumentDB 数据库帐户的属性\r \r 此命令可获取现有 Azure Cosmos DB 数据库帐户的属性。\r \r     Get-AzureRmResource -ResourceType \"Microsoft.DocumentDb/databaseAccounts\" -ApiVersion \"2015-04-08\" -ResourceGroupName \"<resource-group-name>\" -Name \"<database-account-name>\"\r \r * `<resource-group-name>` 新的 Azure Cosmos DB 数据库帐户所属的 [Azure 资源组][azure-resource-groups] 的名称。\r * `<database-account-name>` Azure Cosmos DB 数据库帐户的名称。\r \r 示例：\r \r     Get-AzureRmResource -ResourceType \"Microsoft.DocumentDb/databaseAccounts\" -ApiVersion \"2015-04-08\" -ResourceGroupName \"rg-test\" -Name \"docdb-test\"\r \r ## <a name=\"update-tags-powershell\"></a> 更新 Azure Cosmos DB 数据库帐户的标记\r \r 下面的示例介绍了如何设置 Azure Cosmos DB 数据库帐户的 [Azure 资源标记][azure-resource-tags]。\r \r > [!NOTE]\r > 通过此将 `-Tags` 标志追加到相应的参数，可将此命令与创建或更新命令组合。\r \r 示例：\r \r     $tags = @{\"dept\" = \"Finance\"; environment = \"Production\"}\r     Set-AzureRmResource -ResourceType \"Microsoft.DocumentDB/databaseAccounts\"  -ResourceGroupName \"rg-test\" -Name \"docdb-test\" -Tags $tags\r \r ## <a name=\"list-account-keys-powershell\"></a> 列出帐户密钥\r \r 创建 Azure Cosmos DB 帐户时，该服务会生成两个主访问密钥，用于访问 Azure Cosmos DB 帐户时的身份验证。 Azure Cosmos DB 提供有两个访问密钥，因此可在不中断 Azure Cosmos DB 帐户连接的情况下重新生成密钥。 还提供用于对只读操作进行身份验证的只读密钥。 有两个读写密钥（主密钥和辅助密钥）和两个只读密钥（主密钥和辅助密钥）。\r \r     $keys = Invoke-AzureRmResourceAction -Action listKeys -ResourceType \"Microsoft.DocumentDb/databaseAccounts\" -ApiVersion \"2015-04-08\" -ResourceGroupName \"<resource-group-name>\" -Name \"<database-account-name>\"\r \r * `<resource-group-name>` 新的 Azure Cosmos DB 数据库帐户所属的 [Azure 资源组][azure-resource-groups] 的名称。\r * `<database-account-name>` Azure Cosmos DB 数据库帐户的名称。\r \r 示例：\r \r     $keys = Invoke-AzureRmResourceAction -Action listKeys -ResourceType \"Microsoft.DocumentDb/databaseAccounts\" -ApiVersion \"2015-04-08\" -ResourceGroupName \"rg-test\" -Name \"docdb-test\"\r \r ## <a name=\"list-connection-strings-powershell\"></a> 列出连接字符串\r \r 对于 MongoDB 帐户，可以使用以下命令检索将 MongoDB 应用连接到数据库帐户的连接字符串。\r \r     $keys = Invoke-AzureRmResourceAction -Action listConnectionStrings -ResourceType \"Microsoft.DocumentDb/databaseAccounts\" -ApiVersion \"2015-04-08\" -ResourceGroupName \"<resource-group-name>\" -Name \"<database-account-name>\"\r \r * `<resource-group-name>` 新的 Azure Cosmos DB 数据库帐户所属的 [Azure 资源组][azure-resource-groups] 的名称。\r * `<database-account-name>` Azure Cosmos DB 数据库帐户的名称。\r \r 示例：\r \r     $keys = Invoke-AzureRmResourceAction -Action listConnectionStrings -ResourceType \"Microsoft.DocumentDb/databaseAccounts\" -ApiVersion \"2015-04-08\" -ResourceGroupName \"rg-test\" -Name \"docdb-test\"\r \r ## <a name=\"regenerate-account-key-powershell\"></a> 重新生成帐户密钥\r \r 应定期更改 Azure Cosmos DB 帐户的访问密钥，加强连接的安全性。 为你分配两个访问密钥是为了让你使用一个访问密钥保持与 Azure Cosmos DB 帐户的连接，同时可以重新生成另一个访问密钥。\r \r     Invoke-AzureRmResourceAction -Action regenerateKey -ResourceType \"Microsoft.DocumentDb/databaseAccounts\" -ApiVersion \"2015-04-08\" -ResourceGroupName \"<resource-group-name>\" -Name \"<database-account-name>\" -Parameters @{\"keyKind\"=\"<key-kind>\"}\r \r * `<resource-group-name>` 新的 Azure Cosmos DB 数据库帐户所属的 [Azure 资源组][azure-resource-groups] 的名称。\r * `<database-account-name>` Azure Cosmos DB 数据库帐户的名称。\r * `<key-kind>` 要重新生成的四种类型的密钥之一：[\"Primary\"|\"Secondary\"|\"PrimaryReadonly\"|\"SecondaryReadonly\"]。\r \r 示例：\r \r     Invoke-AzureRmResourceAction -Action regenerateKey -ResourceType \"Microsoft.DocumentDb/databaseAccounts\" -ApiVersion \"2015-04-08\" -ResourceGroupName \"rg-test\" -Name \"docdb-test\" -Parameters @{\"keyKind\"=\"Primary\"}\r \r ## <a name=\"modify-failover-priority-powershell\"></a> 修改 Azure Cosmos DB 数据库帐户的故障转移优先级\r \r 对于多区域数据库帐户，可以更改 Azure Cosmos DB 数据库帐户所在的各个区域的故障转移优先级。 有关 Azure Cosmos DB 数据库帐户中的故障转移的详细信息，请参阅 [使用 Azure Cosmos DB 全局分发数据][distribute-data-globally]。\r \r     $failoverPolicies = @(@{\"locationName\"=\"<write-region-location>\"; \"failoverPriority\"=0},@{\"locationName\"=\"<read-region-location>\"; \"failoverPriority\"=1})\r     Invoke-AzureRmResourceAction -Action failoverPriorityChange -ResourceType \"Microsoft.DocumentDb/databaseAccounts\" -ApiVersion \"2015-04-08\" -ResourceGroupName \"<resource-group-name>\" -Name \"<database-account-name>\" -Parameters @{\"failoverPolicies\"=$failoverPolicies}\r \r * `<write-region-location>` 数据库帐户的写入区域位置名称。 此位置的故障转移优先级值需要为 0。 每个数据库帐户必须有且只有一个写入区域。\r * `<read-region-location>` 数据库帐户的读取区域位置名称。 此位置的故障转移优先级值需要大于 0。 每个数据库帐户可以有多个读取区域。\r * `<resource-group-name>` 新的 Azure Cosmos DB 数据库帐户所属的 [Azure 资源组][azure-resource-groups] 的名称。\r * `<database-account-name>` Azure Cosmos DB 数据库帐户的名称。\r \r 示例：\r \r     $failoverPolicies = @(@{\"locationName\"=\"China East\"; \"failoverPriority\"=0},@{\"locationName\"=\"China North\"; \"failoverPriority\"=1})\r     Invoke-AzureRmResourceAction -Action failoverPriorityChange -ResourceType \"Microsoft.DocumentDb/databaseAccounts\" -ApiVersion \"2015-04-08\" -ResourceGroupName \"rg-test\" -Name \"docdb-test\" -Parameters @{\"failoverPolicies\"=$failoverPolicies}\r \r ## 后续步骤\r <a name=\"next-steps\" ></a>\r \r * 若要使用 .NET 进行连接，请参阅[使用 .NET 进行连接和查询](create-documentdb-dotnet.md)。\r * 若要使用 .NET Core 进行连接，请参阅[使用 .NET Core 进行连接和查询](create-documentdb-dotnet-core.md)。\r * 若要使用 Node.js 进行连接，请参阅[使用 Node.js 和 MongoDB 应用进行连接和查询](create-mongodb-nodejs.md)。\r \r <!--Reference style links - using these makes the source content way more readable than using inline links-->\r [powershell-install-configure]: /powershell-install-configure\r [scaling-globally]: distribute-data-globally.md#EnableGlobalDistribution\r [distribute-data-globally]: distribute-data-globally.md\r [azure-resource-groups]: /azure-resource-manager/resource-group-overview#resource-groups\r [azure-resource-tags]: /azure-resource-manager/resource-group-using-tags\r [rp-rest-api]: https://docs.microsoft.com/zh-cn/rest/api/documentdbresourceprovider/"}