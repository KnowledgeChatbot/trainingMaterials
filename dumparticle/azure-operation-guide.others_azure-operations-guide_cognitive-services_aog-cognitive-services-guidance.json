{"Title":"中国版认知服务使用指导","Description":"中国版认知服务使用指导","Content":"\r # 中国版认知服务使用指导\r \r 认知服务为开发者提供了一组 API 和 SDK，从而将微软公司不断演进的人工智能技术扩展到广大开发者手中。通过认知服务，您的应用可以轻松地获得智能。首批登陆[中国的 API](https://www.azure.cn/documentation/services/cognitive-services/) 包括人脸识别、情绪识别和计算机视觉。本文主要介绍认知服务的创建，控制台快速测试，多种语言的测试调用。本文以 Face API 的 detect 方法为例进行演示。\r \r ## 认知服务的创建\r \r 1. 登陆到 [China Azure 管理门户](https://portal.azure.cn)。\r \r 2. 新建 Face API (创建新服务 -> 数据 + 分析 -> 认知服务 APIS)：\r \r     ![create-1.png](./media/aog-cognitive-services-guidance/create-1.png)\r     ![create-2.png](./media/aog-cognitive-services-guidance/create-2.png)\r     ![create-3.png](./media/aog-cognitive-services-guidance/create-3.png)\r \r 3. 获取服务的 key：\r \r     ![faceapi-key.png](./media/aog-cognitive-services-guidance/faceapi-key.png)\r \r ## 控制台快速测试\r \r 1. [认知服务 - API 参考](https://dev.cognitive.azure.cn/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236)\r \r     ![api-console.png](./media/aog-cognitive-services-guidance/api-console.png)\r \r 2. [Detect 控制台测试](https://dev.cognitive.azure.cn/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236/console)\r \r     ![api-console-parameters.png](./media/aog-cognitive-services-guidance/api-console-parameters.png)\r \r     ![api-console-test.png](./media/aog-cognitive-services-guidance/api-console-test.png)\r \r ## Rest API 程序调用示例\r \r - C# Code Samples：\r \r     ```C#\r     using System;\r     using System.IO;\r     using System.Net.Http;\r     using System.Text;\r     using System.Web;\r \r     namespace FaceAPI\r     {\r         class Program\r         {\r             static void Main(string[] args)\r             {\r                 //UsePictureURL();\r                 UseLocalPicture();\r                 Console.WriteLine(\"Hit ENTER to exit...\");\r                 Console.ReadLine();\r             }\r \r             /// <summary>\r             /// use picture URL\r             /// </summary>\r             static async void UsePictureURL()\r             {\r                 var client = new HttpClient();\r                 var queryString = HttpUtility.ParseQueryString(string.Empty);\r \r                 // Request headers\r                 client.DefaultRequestHeaders.Add(\"Ocp-Apim-Subscription-Key\", \"4fe95********************fda06c6\");//Face API key\r \r                 // Request parameters\r                 queryString[\"returnFaceId\"] = \"true\";\r                 queryString[\"returnFaceLandmarks\"] = \"false\";\r                 queryString[\"returnFaceAttributes\"] = \"age\";\r                 var uri = \"https://api.cognitive.azure.cn/face/v1.0/detect?\" + queryString;\r \r                 HttpResponseMessage response;\r \r                 // Request body\r                 byte[] byteData = Encoding.UTF8.GetBytes(\"{\\\"url\\\":\\\"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1494416315487&di=5e05a310f8c7b3fec011901ff3d13f93&imgtype=0&src=http%3A%2F%2Fimgsrc.baidu.com%2Fbaike%2Fpic%2Fitem%2F4034970a304e251ff1e3819aa486c9177f3e53bf.jpg\\\"}\");//Picture URL\r \r                 using (var content = new ByteArrayContent(byteData))\r                 {\r                     response = await client.PostAsync(uri, content);\r                 }\r \r                 //response result\r                 string result = await response.Content.ReadAsStringAsync();\r                 Console.WriteLine(\"response:\" + result);\r             }\r \r             /// <summary>\r             /// use local picture\r             /// </summary>\r             static async void UseLocalPicture()\r             {\r                 var client = new HttpClient();\r \r                 var queryString = HttpUtility.ParseQueryString(string.Empty);\r \r                 // Request headers\r                 client.DefaultRequestHeaders.Add(\"Ocp-Apim-Subscription-Key\", \"4fe95********************fda06c6\");//Face API key\r \r                 // Request parameters\r                 queryString[\"returnFaceId\"] = \"true\";\r                 queryString[\"returnFaceLandmarks\"] = \"false\";\r                 queryString[\"returnFaceAttributes\"] = \"age\";\r                 var uri = \"https://api.cognitive.azure.cn/face/v1.0/detect?\" + queryString;\r \r                 HttpResponseMessage response;\r \r                 //read local picture to byte[]\r                 string path = @\"C:\\Users\\yuvmtest\\Desktop\\test.jpg\";//local picture path\r                 FileStream fs = File.OpenRead(path); //OpenRead\r                 int filelength = 0;\r                 filelength = (int)fs.Length;\r                 byte[] image = new byte[filelength];\r                 fs.Read(image, 0, filelength);\r                 fs.Close();\r \r                 using (var content = new ByteArrayContent(image))\r                 {\r                     content.Headers.Add(\"Content-Type\", \"application/octet-stream\");//set content-type\r                     response = await client.PostAsync(uri, content);\r                 }\r \r                 //response result\r                 string result = await response.Content.ReadAsStringAsync();\r                 Console.WriteLine(\"response:\" + result);\r             }\r         }\r     }\r     ```\r \r - Java Code Samples：\r \r     ```Java\r     package buct.edu.cn;\r \r     import java.io.FileInputStream;\r     import java.net.URI;\r \r     import org.apache.http.HttpEntity;\r     import org.apache.http.HttpResponse;\r     import org.apache.http.client.HttpClient;\r     import org.apache.http.client.methods.HttpPost;\r     import org.apache.http.client.utils.URIBuilder;\r     import org.apache.http.entity.ByteArrayEntity;\r     import org.apache.http.entity.StringEntity;\r     import org.apache.http.impl.client.HttpClients;\r     import org.apache.http.util.EntityUtils;\r \r     public class FaceAPI {\r \r         public static void main(String[] args) {\r \r             System.out.println(\"Begin FaceAPI Test.\");\r \r             //UsePictureURL();\r             UseLocalPicture();\r         }\r         /**\r         * Use Picture URL\r         */\r         public static void UsePictureURL()\r         {\r             HttpClient httpclient = HttpClients.createDefault();\r \r             try\r             {\r                 URIBuilder builder = new URIBuilder(\"https://api.cognitive.azure.cn/face/v1.0/detect\");\r \r                 builder.setParameter(\"returnFaceId\", \"true\");\r                 builder.setParameter(\"returnFaceLandmarks\", \"false\");\r                 builder.setParameter(\"returnFaceAttributes\", \"age\");\r \r                 URI uri = builder.build();\r                 HttpPost request = new HttpPost(uri);\r                 request.setHeader(\"Content-Type\", \"application/json\");\r                 request.setHeader(\"Ocp-Apim-Subscription-Key\", \"4fe95********************fda06c6\");\r \r                 // Request body\r                 StringEntity reqEntity = new StringEntity(\"{\\\"url\\\":\\\"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1494416315487&di=5e05a310f8c7b3fec011901ff3d13f93&imgtype=0&src=http%3A%2F%2Fimgsrc.baidu.com%2Fbaike%2Fpic%2Fitem%2F4034970a304e251ff1e3819aa486c9177f3e53bf.jpg\\\"}\"); //URL 图片地址\r                 request.setEntity(reqEntity);\r \r                 HttpResponse response = httpclient.execute(request);\r                 HttpEntity entity = response.getEntity();\r \r                 if (entity != null) \r                 {\r                     System.out.println(EntityUtils.toString(entity));\r                 }\r             }\r             catch (Exception e)\r             {\r                 System.out.println(e.getMessage());\r             }\r         }\r \r         /**\r         * use local picture\r         */\r         public static void UseLocalPicture()\r         {\r             HttpClient httpclient = HttpClients.createDefault();\r \r             try\r             {\r                 URIBuilder builder = new URIBuilder(\"https://api.cognitive.azure.cn/face/v1.0/detect\");\r \r                 builder.setParameter(\"returnFaceId\", \"true\");\r                 builder.setParameter(\"returnFaceLandmarks\", \"false\");\r                 builder.setParameter(\"returnFaceAttributes\", \"age\");\r \r                 URI uri = builder.build();\r                 HttpPost request = new HttpPost(uri);\r                 request.setHeader(\"Content-Type\", \"application/octet-stream\");\r                 request.setHeader(\"Ocp-Apim-Subscription-Key\", \"4fe95********************fda06c6\");\r \r                 // Request body\r                 String pic_path = \"C:\\\\Users\\\\yuvmtest\\\\Desktop\\\\test.jpg\";\r \r                 FileInputStream is = new FileInputStream(pic_path);\r                 int i = is.available();\r                 byte data[] = new byte[i];\r                 is.read(data);\r                 is.close();\r \r                 ByteArrayEntity bae = new ByteArrayEntity(data);\r                 request.setEntity(bae);\r \r                 HttpResponse response = httpclient.execute(request);\r                 HttpEntity entity = response.getEntity();\r \r                 if (entity != null)\r                 {\r                     System.out.println(EntityUtils.toString(entity));\r                 }\r             }\r             catch (Exception e)\r             {\r                 System.out.println(e.getMessage());\r             }\r         }\r     }\r     ```\r \r - PHP Code Samples:\r \r     ```PHP\r     // User picture URL\r \r     <?php\r \r     use GuzzleHttp\\Psr7\\Request;\r     use GuzzleHttp\\Client;\r \r     require_once 'vendor\\autoload.php';\r \r     $client = new Client();\r \r     $headers = ['Content-Type' => 'application/json','Ocp-Apim-Subscription-Key' => '4fe95********************fda06c6'];\r \r     $body = '{\"url\":\"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1494416315487&di=5e05a310f8c7b3fec011901ff3d13f93&imgtype=0&src=http%3A%2F%2Fimgsrc.baidu.com%2Fbaike%2Fpic%2Fitem%2F4034970a304e251ff1e3819aa486c9177f3e53bf.jpg\"}';\r \r     $request = new Request('POST','https://api.cognitive.azure.cn/face/v1.0/detect?returnFaceId=true&returnFaceLandmarks=false&returnFaceAttributes=age', $headers , $body);\r \r     $response = $client->send($request);\r \r     echo $response->getBody();\r \r     ?>\r     ```\r \r     ```PHP\r     // User Local Picture\r \r     <?php\r \r     use GuzzleHttp\\Psr7\\Request;\r     use GuzzleHttp\\Client;\r \r     require_once 'vendor\\autoload.php';\r \r     $client = new Client();\r \r     $headers = ['Content-Type' => 'application/octet-stream','Ocp-Apim-Subscription-Key' => 'bd8e4ce12f444c639ac9c214d70ac72c'];\r \r     //读取本地图片，测试图片放在项目目录下\r     $myfile = fopen(\"tt.jpg\", \"r\") or die(\"Unable to open file!\");\r \r     $request = new Request('POST','https://api.cognitive.azure.cn/face/v1.0/detect?returnFaceId=true&returnFaceLandmarks=false&returnFaceAttributes=age', $headers , $myfile);\r \r     $response = $client->send($request);\r \r     echo $response->getBody();\r \r     fclose($myfile);\r     ?>\r     ```\r \r \r - Python Code Samples(Python3.3):\r \r     ```Python\r     # User Picture URL\r \r     import http.client, urllib.request, urllib.parse, urllib.error, base64\r \r     headers = {\r         # Request headers\r         'Content-Type': 'application/json',\r         'Ocp-Apim-Subscription-Key': '4fe95********************fda06c6',\r     }\r \r     params = urllib.parse.urlencode({\r         # Request parameters\r         'returnFaceId': 'true',\r         'returnFaceLandmarks': 'false',\r         'returnFaceAttributes': 'age',\r     })\r \r     try:\r         conn = http.client.HTTPSConnection('api.cognitive.azure.cn')\r         conn.request(\"POST\", \"/face/v1.0/detect?%s\" % params, \"{'url':'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1494416315487&di=5e05a310f8c7b3fec011901ff3d13f93&imgtype=0&src=http%3A%2F%2Fimgsrc.baidu.com%2Fbaike%2Fpic%2Fitem%2F4034970a304e251ff1e3819aa486c9177f3e53bf.jpg'}\", headers)\r         response = conn.getresponse()\r         data = response.read()\r         print(data)\r         conn.close()\r     except Exception as e:\r         print(\"[Errno {0}] {1}\".format(e.errno, e.strerror))\r     ```\r \r     ```Python\r     # User Local Picture\r \r     import http.client, urllib.error\r \r     headers = {\r         # Request headers\r         'Content-Type': 'application/octet-stream',\r         'Ocp-Apim-Subscription-Key': 'bd8e4ce12f444c639ac9c214d70ac72c',\r     }\r \r     params = urllib.parse.urlencode({\r         # Request parameters\r         'returnFaceId': 'true',\r         'returnFaceLandmarks': 'false',\r         'returnFaceAttributes': 'age',\r     })\r \r     try:\r         # 读取本地图片\r         filenamePath=\"tt.jpg\"  # 测试图片存放在项目目录下\r         picturesdata = open(filenamePath, 'rb')\r \r         conn = http.client.HTTPSConnection('api.cognitive.azure.cn')\r         conn.request(\"POST\", \"/face/v1.0/detect?%s\" % params, picturesdata, headers)\r         response = conn.getresponse()\r         data = response.read()\r         print(data)\r \r         picturesdata.closed\r         conn.close()\r     except Exception as e:\r         print(\"[Errno {0}] {1}\".format(e.errno, e.strerror))\r \r     ```\r \r - JavaScript Code Sample :\r \r     ```JavaScript\r     // User Local Picture\r \r     <html>\r     <head>\r         <title>Face detection using Project Oxford in javascript</title>\r         <script src=\"https://code.jquery.com/jquery-2.2.2.min.js\"></script>\r     </head>                         \r                             \r     <body>\r         <div>\r             <label for=\"filename\">Select image: </label>\r             <input type=\"file\" id=\"filename\" name=\"filename\" accept=\"image/*\">\r             <br />\r             <br />\r             <button id=\"btn\">Detect faces</button>\r         </div>\r         <div>\r             <p id=\"response\"></p>\r         </div>\r         <div>\r             <canvas id=\"myCanvas\" width=\"1000\" height=\"800\">\r                 Your browser does not support the HTML5 canvas tag.\r             </canvas>\r         </div>\r     <script>\r \r     $('#btn').click(function () {\r         alert(\"click\");\r         var file = document.getElementById('filename').files[0];\r         detectFaces(file);\r     });\r \r     $(\"#filename\").change(function () {\r         showImage();\r     });\r \r     function detectFaces(file) {\r         var apiKey = \"bd8e4ce12f444c639ac9c214d70ac72c\";\r         \r         // Call the API\r         $.ajax({\r             url: \"https://api.cognitive.azure.cn/face/v1.0/detect\",\r             beforeSend: function (xhrObj) {\r                 xhrObj.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\r                 xhrObj.setRequestHeader(\"Ocp-Apim-Subscription-Key\", apiKey);\r                 $(\"#response\").text(\"Calling api...\");\r             },\r             type: \"POST\",\r             data: file,\r             processData: false\r         })\r             .done(function (response) {\r                 // Process the API response.\r                 processResult(response);\r             })\r             .fail(function (error) {\r                 // Oops, an error :(\r                 $(\"#response\").text(error.getAllResponseHeaders());\r             });\r     }\r \r     function processResult(response) {\r         var arrayLength = response.length;\r \r         if (arrayLength > 0) {\r             var canvas = document.getElementById('myCanvas');\r             var context = canvas.getContext('2d');\r \r             context.beginPath();\r             \r             // Draw face rectangles into canvas.\r             for (var i = 0; i < arrayLength; i++) {\r                 var faceRectangle = response[i].faceRectangle;\r                 context.rect(faceRectangle.left, faceRectangle.top, faceRectangle.width, faceRectangle.height);\r             }\r \r             context.lineWidth = 3;\r             context.strokeStyle = 'red';\r             context.stroke();\r         }\r \r         // Show the raw response.\r         var data = JSON.stringify(response);\r         $(\"#response\").text(data);\r     }\r \r     function showImage() {\r         var canvas = document.getElementById(\"myCanvas\");\r         var context = canvas.getContext(\"2d\");\r         context.clearRect(0, 0, canvas.width, canvas.height);\r \r         var input = document.getElementById(\"filename\");\r         var img = new Image;\r \r         img.onload = function () {\r             context.drawImage(img, 0, 0);\r         }\r \r         img.src = URL.createObjectURL(input.files[0]);\r     }\r \r     </script>\r     </body>\r     </html>\r     ```\r \r     ```JavaScript\r     # User Picture URL\r     <!DOCTYPE html>\r     <html>\r     <head>\r         <title>Detect Faces Sample</title>\r         <script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js\"></script>\r     </head>\r     <body>\r \r     <script type=\"text/javascript\">\r         function processImage() {\r             // **********************************************\r             // *** Update or verify the following values. ***\r             // **********************************************\r             // Replace the subscriptionKey string value with your valid subscription key.\r             var subscriptionKey = \"bd8e4ce12f444c639ac9c214d70ac72c\";\r             // Replace or verify the region.\r             //\r             // You must use the same region in your REST API call as you used to obtain your subscription keys.\r             // For example, if you obtained your subscription keys from the westus region, replace\r             // \"westcentralus\" in the URI below with \"westus\".\r             //\r             // NOTE: Free trial subscription keys are generated in the westcentralus region, so if you are using\r             // a free trial subscription key, you should not need to change this region.\r             var uriBase = \"https://api.cognitive.azure.cn/face/v1.0/detect\";\r \r             // Request parameters.\r             var params = {\r                 \"returnFaceId\": \"true\",\r                 \"returnFaceLandmarks\": \"false\",\r                 \"returnFaceAttributes\": \"age,gender,headPose,smile,facialHair,glasses,emotion,hair,makeup,occlusion,accessories,blur,exposure,noise\",\r             };\r \r             // Display the image.\r             var sourceImageUrl = document.getElementById(\"inputImage\").value;\r             document.querySelector(\"#sourceImage\").src = sourceImageUrl;\r \r             // Perform the REST API call.\r             $.ajax({\r                 url: uriBase + \"?\" + $.param(params),\r \r                 // Request headers.\r                 beforeSend: function(xhrObj){\r                     xhrObj.setRequestHeader(\"Content-Type\",\"application/json\");\r                     xhrObj.setRequestHeader(\"Ocp-Apim-Subscription-Key\", subscriptionKey);\r                 },\r                 type: \"POST\",\r \r                 // Request body.\r                 data: '{\"url\": ' + '\"' + sourceImageUrl + '\"}',\r             })\r \r             .done(function(data) {\r                 // Show formatted JSON on webpage.\r                 $(\"#responseTextArea\").val(JSON.stringify(data, null, 2));\r             })\r \r             .fail(function(jqXHR, textStatus, errorThrown) {\r                 // Display error message.\r                 var errorString = (errorThrown === \"\") ? \"Error. \" : errorThrown + \" (\" + jqXHR.status + \"): \";\r                 errorString += (jqXHR.responseText === \"\") ? \"\" : (jQuery.parseJSON(jqXHR.responseText).message) ? \r                     jQuery.parseJSON(jqXHR.responseText).message : jQuery.parseJSON(jqXHR.responseText).error.message;\r                 alert(errorString);\r             });\r         };\r     </script>\r \r     <h1>Detect Faces:</h1>\r     Enter the URL to an image that includes a face or faces, then click the <strong>Analyze face</strong> button.\r     <br><br>\r     Image to analyze: <input type=\"text\" name=\"inputImage\" id=\"inputImage\" value=\"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1494416315487&di=5e05a310f8c7b3fec011901ff3d13f93&imgtype=0&src=http%3A%2F%2Fimgsrc.baidu.com%2Fbaike%2Fpic%2Fitem%2F4034970a304e251ff1e3819aa486c9177f3e53bf.jpg\" />\r     <button onclick=\"processImage()\">Analyze face</button>\r     <br><br>\r     <div id=\"wrapper\" style=\"width:1020px; display:table;\">\r         <div id=\"jsonOutput\" style=\"width:600px; display:table-cell;\">\r             Response:\r             <br><br>\r             <textarea id=\"responseTextArea\" class=\"UIInput\" style=\"width:580px; height:400px;\"></textarea>\r         </div>\r         <div id=\"imageDiv\" style=\"width:420px; display:table-cell;\">\r             Source image:\r             <br><br>\r             <img id=\"sourceImage\" width=\"400\" />\r         </div>\r     </div>\r     </body>\r     </html>\r     ```\r \r ### 测试结果：\r \r `[{\"faceId\":\"13a27b70-db59-4d36-b7fe-6a2e3ad306f5\",\"faceRectangle\":{\"top\":126,\"left\":95,\"width\":137,\"height\":137},\"faceAttributes\":{\"age\":26.2}}]`\r \r ## SDK程序调用示例\r \r - C# SDK Code Sample：\r \r     ### 环境搭建说明\r \r     - SDK：Microsoft.ProjectOxford.Face\r     - GitHub：[Cognitive-Face-Windows](https://github.com/Microsoft/Cognitive-Face-Windows)\r \r     ### 示例代码\r \r     ```C#\r     using Microsoft.ProjectOxford.Face;\r     using Microsoft.ProjectOxford.Face.Contract;\r     using System;\r     using System.Collections.Generic;\r     using System.IO;\r \r     namespace CognitiveServiceTaro\r     {\r         class Program\r         {\r             private readonly static IFaceServiceClient faceServiceClient =\r                 new FaceServiceClient(\"<face api key>\", \"https://api.cognitive.azure.cn/face/v1.0\");\r             static void Main(string[] args)\r             {\r                 // The list of Face attributes to return.\r                 IEnumerable<FaceAttributeType> faceAttributes =\r                     new FaceAttributeType[] { FaceAttributeType.Gender, FaceAttributeType.Age, FaceAttributeType.Smile, FaceAttributeType.Emotion, FaceAttributeType.Glasses, FaceAttributeType.Hair,FaceAttributeType.FacialHair,FaceAttributeType.HeadPose};\r \r                 //The url of picture.\r                 //String imageUrl = \"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1494416315487&di=5e05a310f8c7b3fec011901ff3d13f93&imgtype=0&src=http%3A%2F%2Fimgsrc.baidu.com%2Fbaike%2Fpic%2Fitem%2F4034970a304e251ff1e3819aa486c9177f3e53bf.jpg\";\r                 //Face[] faces = faceServiceClient.DetectAsync(imageUrl, returnFaceId: true, returnFaceLandmarks: true, returnFaceAttributes: faceAttributes).GetAwaiter().GetResult();\r \r                 //use local picture\r                 string imageFilePath = @\"D:\\test.jpg\";\r                 Stream imageFileStream = File.OpenRead(imageFilePath);\r \r                 // Call the Face API.\r                 Face[] faces = faceServiceClient.DetectAsync(imageFileStream, returnFaceId: true, returnFaceLandmarks: true, returnFaceAttributes: faceAttributes).GetAwaiter().GetResult();\r \r                 imageFileStream.Close();\r \r                 foreach (Face face in faces)\r                 {\r                     Console.WriteLine(\"FaceId: \" + face.FaceId);\r                     Console.WriteLine(\"Age: \" + face.FaceAttributes.Age);\r                     Console.WriteLine(\"face.FaceLandmarks.PupilLeft.X： \" + face.FaceLandmarks.PupilLeft.X);\r                 }\r \r                 Console.ReadKey(true);\r             }\r         }\r     }\r     ```\r \r - Java SDK Code Sample：\r \r     ### 环境搭建说明\r \r     - SDK 下载：\r \r         如果使用 Android 项目添加依赖包，可以直接在 [maven 中心仓库](https://mvnrepository.com/)搜索：`com.microsoft.projectoxford:face` 添加 `dependency` 即可；<br>\r         如果使用 java 项目，需要下载对应的 arr 包，解压得到其中的 classes.jar，添加到项目即可。\r \r     - 第三方依赖pom.xml：\r \r         ```XML\r         <dependencies>\r             <dependency>\r             <groupId>com.google.code.gson</groupId>\r             <artifactId>gson</artifactId>\r             <version>2.3.1</version>\r             <scope>compile</scope>\r             </dependency>\r             <dependency>\r                 <groupId>org.apache.httpcomponents</groupId>\r                 <artifactId>httpclient</artifactId>\r                 <version>4.5.2</version>\r             </dependency>\r         </dependencies>\r         ```\r \r     - GitHub：[Cognitive-Face-Android](https://github.com/Microsoft/Cognitive-Face-Android)\r \r     ### 示例代码\r \r     ```Java\r     package buct.edu.cn;\r \r     import java.io.FileInputStream;\r     import java.io.IOException;\r     import java.io.InputStream;\r     import com.microsoft.projectoxford.face.FaceServiceClient;\r     import com.microsoft.projectoxford.face.FaceServiceClient.FaceAttributeType;\r     import com.microsoft.projectoxford.face.FaceServiceRestClient;\r     import com.microsoft.projectoxford.face.contract.Face;\r     import com.microsoft.projectoxford.face.rest.ClientException;\r \r     public class FaceAPIDemo {\r \r         private static FaceServiceClient faceServiceClient =  \r                 new FaceServiceRestClient(\"https://api.cognitive.azure.cn/face/v1.0\",\"bd8e4ce12f444c639ac9c214d70ac72c\");  \r         \r         public static void main(String[] args) throws ClientException, IOException {\r             // TODO Auto-generated method stub\r             \r             FaceAttributeType[] parameters = { FaceAttributeType.Age,FaceAttributeType.Gender};\r             \r             //Use URL\r     //\t\tFace[] result = faceServiceClient.detect(\r     //                \"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1494416315487&di=5e05a310f8c7b3fec011901ff3d13f93&imgtype=0&src=http%3A%2F%2Fimgsrc.baidu.com%2Fbaike%2Fpic%2Fitem%2F4034970a304e251ff1e3819aa486c9177f3e53bf.jpg\", \r     //                true,         // returnFaceId\r     //                false,        // returnFaceLandmarks\r     //                parameters       // returnFaceAttributes: a string like \"age, gender\"\r     //        );\r \r             //User local picture\r             String imageFilePath = \"D:\\\\timg.jpg\";\r             InputStream imageFileStream = new FileInputStream(imageFilePath);\r             \r             Face[] result = faceServiceClient.detect(\r                     imageFileStream, \r                     true,         // returnFaceId\r                     false,        // returnFaceLandmarks\r                     parameters       // returnFaceAttributes: a string like \"age, gender\"\r             );\r             \r             imageFileStream.close();\r             \r             for(Face face:result)\r             {\r                 System.out.println(\"FaceID: \" + face.faceId);\r                 System.out.println(\"Age:\" + face.faceAttributes.age);\r             }\r         }\r     }\r     ```\r \r - Python SDK Code Sample：\r \r     ### 环境搭建说明\r \r     - SDK安装：pip install cognitive_face\r     - GitHub：[Cognitive-Face-Python](https://github.com/Microsoft/Cognitive-Face-Python)\r \r     ### 示例代码\r \r     ```Python\r     import cognitive_face as CF\r \r     KEY = '<face api key>'  # Replace with a valid subscription key (keeping the quotes in place).\r     URL = 'https://api.cognitive.azure.cn/face/v1.0/'\r     CF.Key.set(KEY)\r     CF.BaseUrl.set(URL)\r \r     # You can use this example JPG or replace the URL below with your own URL to a JPEG image.\r     filenamePath = \"D:/timg.jpg\"  # the path of pciture\r     img_local = open(filenamePath, 'rb')\r \r     img_url = 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1494416315487&di=5e05a310f8c7b3fec011901ff3d13f93&imgtype=0&src=http%3A%2F%2Fimgsrc.baidu.com%2Fbaike%2Fpic%2Fitem%2F4034970a304e251ff1e3819aa486c9177f3e53bf.jpg'\r     result = CF.face.detect(img_local,face_id=True,attributes='age,gender') #img_local or img_url\r     print(result)\r     ```\r \r ### 测试结果：\r \r `[{'faceId': 'd9c2f3c7-8053-4910-9f26-67ecff5a614f', 'faceRectangle': {'top': 126, 'left': 95, 'width': 137, 'height': 137}, 'faceAttributes': {'gender': 'female', 'age': 26.2}}]`\r \r \r ## 参考链接\r \r - [认知服务 Android 使用示例](https://docs.azure.cn/zh-cn/articles/azure-operations-guide/cognitive-services/aog-cognitive-services-android-sample)\r - [认知服务 Windows 使用示例](https://docs.azure.cn/zh-cn/articles/azure-operations-guide/cognitive-services/aog-cognitive-services-windows-sample)\r - [认知服务价格详情](https://www.azure.cn/pricing/details/cognitive-services/)\r - [Cognitive-Samples-IntelligentKiosk](https://github.com/Microsoft/Cognitive-Samples-IntelligentKiosk)\r - [Java 调用 Azure 认知服务 Demo--Computer API](http://www.cnblogs.com/taro/p/6516722.html)\r - [CognitiveServices SDK](https://github.com/Microsoft/ProjectOxford-ClientSDK)\r - [PHP 调用认知服务证书认证问题](https://docs.azure.cn/zh-cn/articles/cognitive-services/aog-cognitive-services-qa-php-certification)"}