{"Title":"导出 Azure Cosmos DB 模拟器证书","Description":"使用不使用 Windows 证书存储的语言和运行时进行开发时，需要导出和管理 SSL 证书。 此文提供了分步说明。","Content":"# <a name=\"export-the-azure-cosmos-db-emulator-certificates-for-use-with-java-python-and-nodejs\"></a>使用 Java、Python 和 Node.js 导出要使用的 Azure Cosmos DB 模拟器证书\r \r [**下载模拟器**](https://aka.ms/cosmosdb-emulator)\r \r Azure Cosmos DB 模拟器提供了一个模拟用于开发的 Azure Cosmos DB 服务的本地环境，包括其使用的 SSL 连接。 本文介绍了如何导出 SSL 证书以用于不与 Windows 证书存储集成的语言和运行时，例如使用自己的[证书存储](https://docs.oracle.com/cd/E19830-01/819-4712/ablqw/index.html)的 Java、使用[套接字包装](https://docs.python.org/2/library/ssl.html)的 Python 和使用 [tlsSocket](https://nodejs.org/api/tls.html#tls_tls_connect_options_callback) 的 Node.js。 可以在[使用 Azure Cosmos DB 模拟器进行开发和测试](./local-emulator.md)中了解有关模拟器的更多信息。\r \r 本教程涵盖以下任务：\r \r > [!div class=\"checklist\"]\r > * 轮换证书\r > * 导出 SSL 证书\r > * 了解如何在 Java、Python 和 Node.js 中使用证书\r \r ## <a name=\"certification-rotation\"></a>证书轮转\r \r 首次运行模拟器时，在 Azure Cosmos DB 本地模拟器中生成证书。 有两个证书。 一个用于连接到本地模拟器，另一个用于管理模拟器中的机密。 要导出的证书是友好名称为“DocumentDBEmulatorCertificate”的连接证书。\r \r 可以通过单击在 Windows 任务栏中运行的 Azure Cosmos DB 模拟器中的“重置数据”重新生成这两个证书，如下所示。 如果重新生成证书并已将它们安装到 Java 证书存储或已在其他位置使用它们，则需要更新这些证书，否则应用程序将无法再连接到本地模拟器。\r \r ![Azure Cosmos DB 本地模拟器重置数据](./media/local-emulator-export-ssl-certificates/database-local-emulator-reset-data.png)\r \r ## <a name=\"how-to-export-the-azure-cosmos-db-ssl-certificate\"></a>如何导出 Azure Cosmos DB SSL 证书\r \r 1. 通过运行 certlm.msc 启动 Windows 证书管理器并导航到“个人”->“证书”文件夹，打开友好名称为“DocumentDbEmulatorCertificate”的证书。\r \r     ![Azure Cosmos DB 本地模拟器导出步骤 1](./media/local-emulator-export-ssl-certificates/database-local-emulator-export-step-1.png)\r \r 2. 单击“详细信息”，并单击“确定”。\r \r     ![Azure Cosmos DB 本地模拟器导出步骤 2](./media/local-emulator-export-ssl-certificates/database-local-emulator-export-step-2.png)\r \r 3. 单击“复制到文件...” 。\r \r     ![Azure Cosmos DB 本地模拟器导出步骤 3](./media/local-emulator-export-ssl-certificates/database-local-emulator-export-step-3.png)\r \r 4. 单击“下一步”。\r \r     ![Azure Cosmos DB 本地模拟器导出步骤 4](./media/local-emulator-export-ssl-certificates/database-local-emulator-export-step-4.png)\r \r 5. 单击“否，不导出私钥”，并单击“下一步”。\r \r     ![Azure Cosmos DB 本地模拟器导出步骤 5](./media/local-emulator-export-ssl-certificates/database-local-emulator-export-step-5.png)\r \r 6. 单击“Base-64 编码 X.509 (.CER)”，并单击“下一步”。\r \r     ![Azure Cosmos DB 本地模拟器导出步骤 6](./media/local-emulator-export-ssl-certificates/database-local-emulator-export-step-6.png)\r \r 7. 为证书指定名称。 在本示例中为“documentdbemulatorcert”。单击“下一步”。\r \r     ![Azure Cosmos DB 本地模拟器导出步骤 7](./media/local-emulator-export-ssl-certificates/database-local-emulator-export-step-7.png)\r \r 8. 单击“**完成**”。\r \r     ![Azure Cosmos DB 本地模拟器导出步骤 8](./media/local-emulator-export-ssl-certificates/database-local-emulator-export-step-8.png)\r \r ## <a name=\"how-to-use-the-certificate-in-java\"></a>如何在 Java 中使用证书\r \r 运行使用 Java 客户端的 Java 应用程序或 MongoDB 应用程序时，将证书安装到 Java 默认证书存储比传递“-Djavax.net.ssl.trustStore=<keystore> -Djavax.net.ssl.trustStorePassword=\"<password>”标志更简单。 例如，包含的 [Java 演示应用程序](https://localhost:8081/_explorer/index.html) 依赖于默认证书存储。\r \r 请按照[将证书添加到 Java CA 证书存储](/java-add-certificate-ca-store)中的说明将 X.509 证书导入到默认 Java 证书存储。 请注意，运行 keytool 时会在 %JAVA_HOME% 目录中执行操作。\r \r 安装“CosmosDBEmulatorCertificate”SSL 证书后，应用程序应该能够连接并使用本地 Azure Cosmos DB 模拟器。 如果仍然遇到问题，可能需要按照 [调试 SSL/TLS 连接](http://docs.oracle.com/javase/7/docs/technotes/guides/security/jsse/ReadDebug.html) 一文进行操作。 很有可能是该证书未安装到 %JAVA_HOME%/jre/lib/security/cacerts 存储中。 例如，如果安装了多个 Java 版本，应用程序使用的 cacerts 存储可能未更新。\r \r ## <a name=\"how-to-use-the-certificate-in-python\"></a>如何在 Python 中使用证书\r \r 默认情况下，用于 DocumentDB API 的 [Python SDK（版本 2.0.0 或更高版本）](documentdb-sdk-python.md)在连接到本地模拟器时不会尝试使用 SSL 证书。 但是，如果要使用 SSL 验证，则可以按照 [Python 套接字包装器](https://docs.python.org/2/library/ssl.html) 文档中的示例进行操作。\r \r ## <a name=\"how-to-use-the-certificate-in-nodejs\"></a>如何在 Node.js 中使用证书\r \r 默认情况下，用于 DocumentDB API 的 [Node.js SDK（版本 1.10.1 或更高版本）](documentdb-sdk-node.md)在连接到本地模拟器时不会尝试使用 SSL 证书。 但是，如果要使用 SSL 验证，则可以按照 [Node.js 文档](https://nodejs.org/api/tls.html#tls_tls_connect_options_callback)中的示例进行操作。\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r 本教程已完成以下内容：\r \r > [!div class=\"checklist\"]\r > * 轮换证书\r > * 导出 SSL 证书\r > * 了解如何在 Java、Python 和 Node.js 中使用证书\r \r <!--Update_Description: wording update, update link -->"}