{"Title":"使用 Java 查询 Azure SQL 数据库","Description":"本主题介绍如何使用 Java 创建可连接到 Azure SQL 数据库的程序并使用 Transact-SQL 语句对其进行查询。","Content":"# <a name=\"use-java-to-query-an-azure-sql-database\"></a>使用 Java 查询 Azure SQL 数据库\r \r 本快速入门演示了如何使用 [Java](https://docs.microsoft.com/sql/connect/jdbc/microsoft-jdbc-driver-for-sql-server) 连接到 Azure SQL 数据库，然后使用 Transact-SQL 语句查询数据。\r \r ## <a name=\"prerequisites\"></a>先决条件\r \r 若要完成本快速入门教程，请确保具备以下先决条件：\r \r - Azure SQL 数据库。 此快速入门使用以下某个快速入门中创建的资源： \r \r     - [创建 DB - 门户](sql-database-get-started-portal.md)\r     - [创建 DB - CLI](sql-database-get-started-cli.md)\r     - [创建 DB - PowerShell](sql-database-get-started-powershell.md)\r \r - 针对用于本快速入门教程的计算机的公共 IP 地址制定[服务器级防火墙规则](sql-database-get-started-portal.md#create-a-server-level-firewall-rule)。\r \r - 已为操作系统安装 Java 和相关软件。\r \r     - **MacOS**：安装 Homebrew 和 Java，然后再安装 Maven。 请参阅[步骤 1.2 和 1.3](https://www.microsoft.com/sql-server/developer-get-started/java/mac/)。\r     - **Ubuntu**：安装 Java 开发工具包，并安装 Maven。 请参阅[步骤 1.2、1.3 和 1.4](https://www.microsoft.com/sql-server/developer-get-started/java/ubuntu/)。\r     - **Windows**：安装 Java 开发工具包和 Maven。 请参阅[步骤 1.2 和 1.3](https://www.microsoft.com/sql-server/developer-get-started/java/windows/)。    \r \r ## <a name=\"sql-server-connection-information\"></a>SQL Server 连接信息\r \r 获取连接到 Azure SQL 数据库所需的连接信息。 在后续过程中，将需要完全限定的服务器名称、数据库名称和登录信息。\r \r 1. 登录到 [Azure 门户](https://portal.azure.cn/)。\r 2. 从左侧菜单中选择“SQL 数据库”，并单击“SQL 数据库”页上的数据库。 \r 3. 在数据库的“概述”页上，查看完全限定的服务器名称（如下图所示）：可以将鼠标悬停到服务器名称上方以显示“单击以复制”选项。  \r \r    ![server-name](./media/sql-database-connect-query-dotnet/server-name.png) \r \r 4. 如果忘了服务器的登录信息，请导航到 SQL 数据库服务器页，以查看服务器管理员名称。  如有必要，可重置密码。     \r \r ## <a name=\"create-maven-project-and-dependencies\"></a>**创建 Maven 项目和依赖项**\r 1. 从终端创建一个名为 **sqltest** 的新 Maven 项目。 \r \r     ```bash\r     mvn archetype:generate \"-DgroupId=com.sqldbsamples\" \"-DartifactId=sqltest\" \"-DarchetypeArtifactId=maven-archetype-quickstart\" \"-Dversion=1.0.0\"\r     ```\r \r 2. 出现提示时输入“Y”。\r 3. 将目录更改为 **sqltest**，然后使用常用文本编辑器打开 pom.xml。  使用以下代码，将 **Microsoft JDBC Driver for SQL Server** 添加到项目的依赖项：\r \r     ```xml\r     <dependency>\r        <groupId>com.microsoft.sqlserver</groupId>\r        <artifactId>mssql-jdbc</artifactId>\r        <version>6.2.1.jre8</version>\r     </dependency>\r     ```\r \r 4. 另外，在 pom.xml 中添加项目的以下属性。  如果没有 properties 节，可以将其添加到 dependencies 后面。\r \r     ```xml\r     <properties>\r        <maven.compiler.source>1.8</maven.compiler.source>\r        <maven.compiler.target>1.8</maven.compiler.target>\r     </properties>\r     ```\r \r 5. 保存并关闭 pom.xml。\r \r ## <a name=\"insert-code-to-query-sql-database\"></a>插入用于查询 SQL 数据库的代码\r \r 1. 应该已在 Maven 项目中有了一个名为 ***App.java*** 的文件，其位置为：\\sqltest\\src\\main\\java\\com\\sqlsamples\\App.java\r \r 2. 打开该文件，将其内容替换为以下代码，并为服务器、数据库、用户和密码添加相应的值。\r \r    ```java\r    package com.sqldbsamples;\r \r    import java.sql.Connection;\r    import java.sql.Statement;\r    import java.sql.PreparedStatement;\r    import java.sql.ResultSet;\r    import java.sql.DriverManager;\r \r    public class App {\r \r     public static void main(String[] args) {\r     \r         // Connect to database\r            String hostName = \"your_server.database.chinacloudapi.cn\";\r            String dbName = \"your_database\";\r            String user = \"your_username\";\r            String password = \"your_password\";\r            String url = String.format(\"jdbc:sqlserver://%s:1433;database=%s;user=%s;password=%s;encrypt=true;hostNameInCertificate=*.database.chinacloudapi.cn;loginTimeout=30;\", hostName, dbName, user, password);\r            Connection connection = null;\r \r            try {\r                    connection = DriverManager.getConnection(url);\r                    String schema = connection.getSchema();\r                    System.out.println(\"Successful connection - Schema: \" + schema);\r \r                    System.out.println(\"Query data example:\");\r                    System.out.println(\"=========================================\");\r \r                    // Create and execute a SELECT SQL statement.\r                    String selectSql = \"SELECT TOP 20 pc.Name as CategoryName, p.name as ProductName \" \r                        + \"FROM [SalesLT].[ProductCategory] pc \"  \r                        + \"JOIN [SalesLT].[Product] p ON pc.productcategoryid = p.productcategoryid\";\r                 \r                    try (Statement statement = connection.createStatement();\r                        ResultSet resultSet = statement.executeQuery(selectSql)) {\r \r                            // Print results from select statement\r                            System.out.println(\"Top 20 categories:\");\r                            while (resultSet.next())\r                            {\r                                System.out.println(resultSet.getString(1) + \" \"\r                                    + resultSet.getString(2));\r                            }\r                     connection.close();\r                    }                   \r            }\r            catch (Exception e) {\r                    e.printStackTrace();\r            }\r        }\r    }\r    ```\r \r ## <a name=\"run-the-code\"></a>运行代码\r \r 1. 在命令提示符下运行以下命令：\r \r    ```bash\r    mvn package\r    mvn -q exec:java \"-Dexec.mainClass=com.sqldbsamples.App\"\r    ```\r \r 2. 验证是否已返回前 20 行，然后关闭应用程序窗口。\r \r ## <a name=\"next-steps\"></a>后续步骤\r - [设计第一个 Azure SQL 数据库](sql-database-design-first-database.md)\r - [用于 SQL Server 的 Microsoft JDBC 驱动程序](https://github.com/microsoft/mssql-jdbc)\r - [报告问题/提出问题](https://github.com/microsoft/mssql-jdbc/issues)\r "}