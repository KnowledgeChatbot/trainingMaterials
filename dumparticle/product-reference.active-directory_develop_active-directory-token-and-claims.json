{"Title":"了解 Azure AD 支持的不同令牌和声明类型","Description":"本指南帮助你了解和评估 Azure Active Directory (AAD) 颁发的 SAML 2.0 令牌和 JSON Web 令牌 (JWT) 令牌中的声明。","Content":"# <a name=\"azure-ad-token-reference\"></a>Azure AD 令牌参考\r Azure Active Directory (Azure AD) 在处理每个身份验证流时会发出多种类型的安全令牌。 本文档说明每种令牌的格式、安全特征和内容。\r \r ## <a name=\"types-of-tokens\"></a>令牌类型\r Azure AD 支持 [OAuth 2.0 授权协议](active-directory-protocols-oauth-code.md)，该协议同时使用 access_token 与 refresh_token。  它还支持通过 [OpenID Connect](active-directory-protocols-openid-connect-code.md) 进行身份验证和登录。OpenID Connect 引入了第三种类型的令牌：id_token。  为些令牌都表示为“持有者令牌”。\r \r 持有者令牌是一种轻型安全令牌，可授予对受保护资源的“持有者”访问权限。 从这个意义上来说，“持有者”是可以提供令牌的任何一方。 虽然接收持有者令牌需要进行 Azure AD 身份验证，但是仍必须采取步骤来保护令牌，以防止被不速之客拦截令牌。 因为持有者令牌没有内置机制来防止未经授权人员使用它们，所以必须在安全的通道（例如传输层安全性 (HTTPS)）中传输这些令牌。 如果持有者令牌以明文传输，则可以利用中间人攻击来获得令牌，并对受保护资源进行未经授权的访问。 当存储或缓存持有者令牌供以后使用时，也应遵循同样的安全原则。 请始终确保应用以安全的方式传输和存储持有者令牌。 有关持有者令牌的更多安全注意事项，请参阅 [RFC 6750 第 5 部分](http://tools.ietf.org/html/rfc6750)。\r \r Azure AD 颁发的许多令牌都以 JSON Web 令牌（也称作 JWT）的方式实现。  JWT 是一种精简的 URL 安全方法，可在两方之间传输信息。  JWT 中包含的信息也称为令牌持有者及使用者相关信息的“声明”或断言。  JWT 中的声明是为了传输而编码和序列化的 JSON 对象。  由于 Azure AD 所颁发的 JWT 已签名但未加密，因此可以轻松地检查 JWT 的内容以进行调试。  有多个工具可用于执行此操作，例如 [jwt.ms](https://jwt.ms/)。 有关 JWT 的详细信息，请参阅 [JWT 规范](http://self-issued.info/docs/draft-ietf-oauth-json-web-token.html)。\r \r ## <a name=\"idtokens\"></a>Id_token\r Id_token 是一种登录安全令牌，使用 [OpenID Connect](active-directory-protocols-openid-connect-code.md) 执行身份验证时会收到该令牌。  它以 [JWT](#types-of-tokens)表示，包含可让用户登录应用的声明。  可以适时使用 id_token 中的声明。该声明通常用于显示帐户信息或在应用程序中进行访问控制决策。\r \r 此时 Id_token 已签名，但未加密。  应用收到 id_token 后，必须[验证签名](#validating-tokens)以证明令牌的真实性，并验证令牌中的几个声明来证明其有效性。  应用验证的声明根据方案要求而有所不同，但存在一些 [常见声明验证](#validating-tokens) ，应用必须在每种方案中执行。\r \r 有关 Id_token 声明以及示例的信息，请参阅以下部分内容。  请注意，Id_token 中的声明不按任何特定顺序返回。  此外，Id_token 中可随时引入新声明；引入新声明时，应用不会中断。  下面的列表中包含了撰写本文时应用确定能够解释的声明。  如有需要，可以在 [OpenID Connect 规范](http://openid.net/specs/openid-connect-core-1_0.html)中找到更多详细信息。\r \r #### <a name=\"sample-idtoken\"></a>示例 id_token\r ```\r eyJ0eXAiOiJKV1QiLCJhbGciOiJub25lIn0.eyJhdWQiOiIyZDRkMTFhMi1mODE0LTQ2YTctODkwYS0yNzRhNzJhNzMwOWUiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC83ZmU4MTQ0Ny1kYTU3LTQzODUtYmVjYi02ZGU1N2YyMTQ3N2UvIiwiaWF0IjoxMzg4NDQwODYzLCJuYmYiOjEzODg0NDA4NjMsImV4cCI6MTM4ODQ0NDc2MywidmVyIjoiMS4wIiwidGlkIjoiN2ZlODE0NDctZGE1Ny00Mzg1LWJlY2ItNmRlNTdmMjE0NzdlIiwib2lkIjoiNjgzODlhZTItNjJmYS00YjE4LTkxZmUtNTNkZDEwOWQ3NGY1IiwidXBuIjoiZnJhbmttQGNvbnRvc28uY29tIiwidW5pcXVlX25hbWUiOiJmcmFua21AY29udG9zby5jb20iLCJzdWIiOiJKV3ZZZENXUGhobHBTMVpzZjd5WVV4U2hVd3RVbTV5elBtd18talgzZkhZIiwiZmFtaWx5X25hbWUiOiJNaWxsZXIiLCJnaXZlbl9uYW1lIjoiRnJhbmsifQ.\r ```\r \r > [!TIP]\r > 练习时，请尝试将示例 id_token 中的声明粘贴到 [jwt.ms](https://jwt.ms/) 中进行检查。\r > \r > \r \r #### <a name=\"claims-in-idtokens\"></a>Id_token 中的声明\r > [!div class=\"mx-codeBreakAll\"]\r | JWT 声明 | 名称 | 说明 |\r | --- | --- | --- |\r | `appid` |应用程序 ID |标识使用令牌访问资源的应用程序。 该应用程序可以自身名义或者代表用户进行操作。 应用程序 ID 通常表示应用程序对象，但它还可以表示 Azure AD 中的服务主体对象。 <br><br> JWT 值示例： <br> `\"appid\":\"15CB020F-3984-482A-864D-1D92265E8268\"` |\r | `aud` |目标受众 |令牌的目标接收方。 接收令牌的应用程序必须验证受众值是否正确，并拒绝任何以其他受众为目标的令牌。 <br><br> SAML 值示例： <br> `<AudienceRestriction>`<br>`<Audience>`<br>`https://contoso.com`<br>`</Audience>`<br>`</AudienceRestriction>` <br><br> JWT 值示例： <br> `\"aud\":\"https://contoso.com\"` |\r | `appidacr` |应用程序身份验证上下文类引用 |表示对客户端进行身份验证的方式。 对于公共客户端，该值为 0。 如果使用客户端 ID 和客户端机密，则该值为 1。 <br><br> JWT 值示例： <br> `\"appidacr\": \"0\"` |\r | `acr` |身份验证上下文类引用 |表示使用者的身份验证方式，此方式与应用程序身份验证上下文类引用声明中的客户端身份验证截然不同。 值为“0”表示最终用户身份验证不符合 ISO/IEC 29115 要求。 <br><br> JWT 值示例： <br> `\"acr\": \"0\"` |\r | 身份验证即时 |记录身份验证发生的日期和时间。 <br><br> SAML 值示例： <br> `<AuthnStatement AuthnInstant=\"2011-12-29T05:35:22.000Z\">` | |\r | `amr` |身份验证方法 |标识对令牌使用者进行身份验证的方式。 <br><br> SAML 值示例： <br> `<AuthnContextClassRef>`<br>`http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationmethod/password`<br>`</AuthnContextClassRef>` <br><br> JWT 值示例：`“amr”: [\"pwd\"]` |\r | `given_name` |名字 |按照 Azure AD 用户对象的设置，指定用户的名字。 <br><br> SAML 值示例： <br> `<Attribute Name=”http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname”>`<br>`<AttributeValue>Frank<AttributeValue>` <br><br> JWT 值示例： <br> `\"given_name\": \"Frank\"` |\r | `groups` |组 |指定表示使用者的组成员身份的对象 ID。 这些值具有唯一性（请参阅对象 ID），可安全地用于管理访问，例如强制要求授权访问资源。 组声明中包含的组通过应用程序清单的“groupMembershipClaims”属性，基于每个应用程序进行配置。 值为 null 将排除所有组；值为“SecurityGroup”将只包括“Active Directory 安全组”成员身份；值为“All”将包括安全组和 Office 365 通讯组列表。 <br><br> SAML 值示例： <br> `<Attribute Name=\"http://schemas.microsoft.com/ws/2008/06/identity/claims/groups\">`<br>`<AttributeValue>07dd8a60-bf6d-4e17-8844-230b77145381</AttributeValue>` <br><br> JWT 值示例： <br> `“groups”: [\"0e129f5b-6b0a-4944-982d-f776045632af\", … ]` |\r | `idp` |标识提供者 |记录对令牌使用者进行身份验证的标识提供者。 除非用户帐户与颁发者不在同一租户中，否则此值与颁发者声明的值相同。 <br><br> SAML 值示例： <br> `<Attribute Name=” http://schemas.microsoft.com/identity/claims/identityprovider”>`<br>`<AttributeValue>https://sts.chinacloudapi.cn/cbb1a5ac-f33b-45fa-9bf5-f37db0fed422/<AttributeValue>` <br><br> JWT 值示例： <br> `\"idp\":”https://sts.chinacloudapi.cn/cbb1a5ac-f33b-45fa-9bf5-f37db0fed422/”` |\r | `iat` |IssuedAt |存储颁发令牌的时间。 通常用于度量令牌新鲜度。 <br><br> SAML 值示例： <br> `<Assertion ID=\"_d5ec7a9b-8d8f-4b44-8c94-9812612142be\" IssueInstant=\"2014-01-06T20:20:23.085Z\" Version=\"2.0\" xmlns=\"urn:oasis:names:tc:SAML:2.0:assertion\">` <br><br> JWT 值示例： <br> `\"iat\": 1390234181` |\r | `iss` |颁发者 |标识构造并返回令牌的安全令牌服务 (STS)。 在 Azure AD 返回的令牌中，颁发者是 sts.chinacloudapi.cn。 颁发者声明值中的 GUID 是 Azure AD 目录的租户 ID。 租户 ID 是固定不变且可靠的目录标识符。 <br><br> SAML 值示例： <br> `<Issuer>https://sts.chinacloudapi.cn/cbb1a5ac-f33b-45fa-9bf5-f37db0fed422/</Issuer>` <br><br> JWT 值示例： <br>  `\"iss\":”https://sts.chinacloudapi.cn/cbb1a5ac-f33b-45fa-9bf5-f37db0fed422/”` |\r | `family_name` |姓氏 |按照 Azure AD 用户对象中的定义，指定用户的姓氏。 <br><br> SAML 值示例： <br> `<Attribute Name=” http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname”>`<br>`<AttributeValue>Miller<AttributeValue>` <br><br> JWT 值示例： <br> `\"family_name\": \"Miller\"` |\r | `unique_name` |名称 |提供一个用户可读值，用于标识令牌使用者。 此值不一定在租户中唯一，且仅供显示。 <br><br> SAML 值示例： <br> `<Attribute Name=”http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name”>`<br>`<AttributeValue>frankm@contoso.com<AttributeValue>` <br><br> JWT 值示例： <br> `\"unique_name\": \"frankm@contoso.com\"` |\r | `oid` |对象 ID |包含 Azure AD 中对象的唯一标识符。 此值固定不变，无法重新分配或重复使用。 在对 Azure AD 进行的查询中，可使用对象 ID 来标识对象。 <br><br> SAML 值示例： <br> `<Attribute Name=\"http://schemas.microsoft.com/identity/claims/objectidentifier\">`<br>`<AttributeValue>528b2ac2-aa9c-45e1-88d4-959b53bc7dd0<AttributeValue>` <br><br> JWT 值示例： <br> `\"oid\":\"528b2ac2-aa9c-45e1-88d4-959b53bc7dd0\"` |\r | `roles` |角色 |表示直接和间接通过组成员身份授予使用者的所有应用程序角色，可用于实施基于角色的访问控制。 可通过应用程序清单的 `appRoles` 属性，对每个应用程序定义应用程序角色。 每个应用程序角色的 `value` 属性是角色声明中显示的值。 <br><br> SAML 值示例： <br> `<Attribute Name=\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\">`<br>`<AttributeValue>Admin</AttributeValue>` <br><br> JWT 值示例： <br> `“roles”: [\"Admin\", … ]` |\r | `scp` |范围 |表示向客户端应用程序授予的模拟权限。 默认权限为 `user_impersonation`。 受保护资源的所有者可在 Azure AD 中注册其他值。 <br><br> JWT 值示例： <br> `\"scp\": \"user_impersonation\"` |\r | `sub` |使用者 |标识令牌断言信息的主体，例如应用程序的用户。 此值固定不变，无法重新分配或重复使用，因此可用于安全地执行授权检查。 因为使用者始终存在于 Azure AD 颁发的令牌中，我们建议在通用授权系统中使用此值。 <br> `SubjectConfirmation` 不是一个声明。 它用于描述对令牌使用者的验证方式。 `Bearer` 表示通过对令牌的持有来确认使用者。 <br><br> SAML 值示例： <br> `<Subject>`<br>`<NameID>S40rgb3XjhFTv6EQTETkEzcgVmToHKRkZUIsJlmLdVc</NameID>`<br>`<SubjectConfirmation Method=\"urn:oasis:names:tc:SAML:2.0:cm:bearer\" />`<br>`</Subject>` <br><br> JWT 值示例： <br> `\"sub\":\"92d0312b-26b9-4887-a338-7b00fb3c5eab\"` |\r | `tid` |租户 ID |一个固定不变且不能重复使用的标识符，用于标识颁发令牌的目录租户。 可以使用此值访问多租户应用程序中特定于租户的目录资源。 例如，可以在调用图形 API 时使用此值标识租户。 <br><br> SAML 值示例： <br> `<Attribute Name=”http://schemas.microsoft.com/identity/claims/tenantid”>`<br>`<AttributeValue>cbb1a5ac-f33b-45fa-9bf5-f37db0fed422<AttributeValue>` <br><br> JWT 值示例： <br> `\"tid\":\"cbb1a5ac-f33b-45fa-9bf5-f37db0fed422\"` |\r | `nbf`, `exp` |令牌生存期 |定义令牌保持有效状态的时间间隔。 验证令牌的服务应验证当前日期是否在令牌生存期内，如果不是，则应拒绝令牌。 考虑到 Azure AD 与服务之间可能存在时钟时间差异（“时间偏差”），服务最多可以超出令牌生存期五分钟。 <br><br> SAML 值示例： <br> `<Conditions`<br>`NotBefore=\"2013-03-18T21:32:51.261Z\"`<br>`NotOnOrAfter=\"2013-03-18T22:32:51.261Z\"`<br>`>` <br><br> JWT 值示例： <br> `\"nbf\":1363289634, \"exp\":1363293234` |\r | `upn` |用户主体名称 |存储用户主体的用户名。<br><br> JWT 值示例： <br> `\"upn\": frankm@contoso.com` |\r | `ver` |版本 |存储令牌的版本号。 <br><br> JWT 值示例： <br> `\"ver\": \"1.0\"` |\r \r ## <a name=\"access-tokens\"></a>访问令牌\r 在进行成功的身份验证时，Azure AD 返回一个访问令牌，该令牌可用于访问受保护的资源。 访问令牌是 base64 编码的 JSON Web 令牌 (JWT)，在解码器中运行访问令牌可以查看其内容。\r \r 如果应用只使用访问令牌来获取对 API 的访问权限，则可以（而且应该）将访问令牌视为完全不透明 - 它只是在 HTTP 请求中，由应用传递给资源的字符串。\r \r 请求访问令牌时，Azure AD 还是会返回一些有关访问令牌的元数据以供应用使用。  此信息包括访问令牌的到期时间及其有效范围。  这让应用能够对访问令牌执行智能缓存，而无需分析访问令牌本身。\r \r 如果应用是通过 Azure AD 保护的 API，需要 HTTP 请求中的访问令牌，则应验证和检查接收到的令牌。 在使用访问令牌访问资源之前，应用程序应执行访问令牌的验证。 有关验证的详细信息，请参阅 [验证令牌](#validating-tokens)。  \r 有关如何使用 .NET 执行此操作的详细信息，请参阅[使用 Azure AD 的持有者令牌保护 Web API](active-directory-devquickstarts-webapi-dotnet.md)。\r \r ## <a name=\"refresh-tokens\"></a>刷新令牌\r \r 刷新令牌是应用可用于在 OAuth 2.0 流中获取新访问令牌的安全令牌。  它让应用能够代表用户长期访问资源，而无需用户交互。\r \r 刷新令牌属于多资源令牌。  也就是说，在一个资源的令牌请求期间收到的刷新令牌可以兑换完全不同资源的访问令牌。 为此，请在目标资源的请求中设置 `resource` 参数。\r \r 刷新令牌对应用完全不透明。 它们属于长效令牌，但你不应将应用编写成预期刷新令牌将持续任何一段时间。  刷新令牌可能由于各种原因而随时失效。  让应用知道刷新令牌是否有效的唯一方式就是对 Azure AD 令牌终结点发出令牌请求以尝试兑换刷新令牌。\r \r 使用刷新令牌兑换新的访问令牌时，会在令牌响应中收到新的刷新令牌。  应该保存新颁发的刷新令牌，并替换请求中使用的刷新令牌。  这会保证刷新令牌尽可能长期保持有效。\r \r ## 验证令牌 <a name=\"validating-tokens\"></a>\r \r 为验证 id_token 或 access_token，应用应该同时验证令牌的签名和声明。 若要验证访问令牌，应用还需验证颁发者、受众和签名令牌。 这些需要根据 OpenID 发现文档中的值进行验证。 例如，与租户无关的文档版本位于 [https://login.partner.microsoftonline.cn/common/.well-known/openid-configuration](https://login.partner.microsoftonline.cn/common/.well-known/openid-configuration)。 Azure AD 中间件具有验证访问令牌的内置功能，浏览[示例](active-directory-code-samples.md)可找到你所用语言的示例。 有关如何显式验证 JWT 令牌的详细信息，请参阅 [手动 JWT 验证示例](https://github.com/Azure-Samples/active-directory-dotnet-webapi-manual-jwt-validation)。  \r \r 我们已提供库和代码示例，以演示如何轻松处理令牌验证 - 想要了解基本过程的用户可以参阅以下信息。  另外还有多个第三方开源库可用于 JWT 验证 - 几乎每个平台和语言都至少有一个选项。 有关 Azure AD 身份验证库和代码示例的详细信息，请参阅 [Azure AD 身份验证库](active-directory-authentication-libraries.md)。\r \r #### <a name=\"validating-the-signature\"></a>验证签名\r \r JWT 包含三个段（以 `.` 字符分隔）。  第一个段称为标头，第二个称为主体，第三个称为签名。  签名段可用于验证令牌的真实性，使令牌可获得应用的信任。\r \r Azure AD 颁发的令牌已使用行业标准非对称式加密算法（例如 RSA 256）进行签名。 JWT 的标头包含用于签名令牌的密钥和加密方法的相关信息：\r \r ```\r {\r   \"typ\": \"JWT\",\r   \"alg\": \"RS256\",\r   \"x5t\": \"kriMPdmBvx68skT8-mPAB3BseeA\"\r }\r ```\r \r `alg` 声明表示用于对令牌进行签名的算法，而 `x5t` 声明表示用于对令牌进行签名的特定公钥。\r \r 在任何给定时间点，Azure AD 可以使用特定公钥 - 私钥对中的任何一组对 id_token 进行签名。 Azure AD 定期换用一组可能的密钥，因此应将应用编写成自动处理这些密钥更改。  对 Azure AD 所用公钥的更新进行检查的合理频率为每 24 小时一次。\r \r 可以使用位于以下位置的 OpenID Connect 元数据文档来获取验证签名所需的签名密钥数据：\r \r ```\r https://login.partner.microsoftonline.cn/common/.well-known/openid-configuration\r ```\r \r > [!TIP]\r > 在浏览器中尝试打开此 URL！\r > \r > \r \r 此元数据文档是一个 JSON 对象，包含一些有用的信息，例如执行 OpenID Connect 身份验证所需的各种终结点的位置。  \r \r 它还包含 `jwks_uri`，其提供用于对令牌进行签名的公钥集的位置。  位于 `jwks_uri` 的 JSON 文档包含在该特定时间点使用的所有公钥信息。  应用可以使用 JWT 标头中的 `kid` 声明选择本文档中已用于对特定令牌进行签名的公钥。  然后可以使用正确的公钥和指定的算法来执行签名验证。\r \r 执行签名验证超出了本文档的范围 - 有许多开放源代码库可帮助这么做（如有必要）。\r \r #### <a name=\"validating-the-claims\"></a>验证声明\r \r 当应用接收到令牌（用户登录时的 id_token，或 HTTP 请求中作为持有者令牌的访问令牌）后，还应对令牌中的声明执行一些检查。  这些检查包括但不限于：\r \r - **受众** 声明 - 验证该令牌是否预期提供给应用。\r - 生效时间和过期时间声明 - 验证令牌是否未过期。\r - **颁发者** 声明 — 验证令牌是否确实由 Azure AD 颁发给应用。\r - Nonce - 缓和令牌重播攻击。\r - 等等...\r \r 有关应用应该针对 ID 令牌执行的声明验证的完整列表，请参阅 [OpenID Connect 规范](http://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation)。 有关这些声明的预期值的详细信息，请参阅前面的 [id_token](#id-tokens) 部分。\r \r ## <a name=\"sample-tokens\"></a>示例令牌\r \r 本部分显示 Azure AD 返回的 SAML 和 JWT 令牌的示例。 这些示例可让你查看上下文中的声明。\r \r ### <a name=\"saml-token\"></a>SAML 令牌\r \r 这是典型 SAML 令牌的一个示例。\r \r ```\r <?xml version=\"1.0\" encoding=\"UTF-8\"?>\r <t:RequestSecurityTokenResponse xmlns:t=\"http://schemas.xmlsoap.org/ws/2005/02/trust\">\r   <t:Lifetime>\r     <wsu:Created xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\">2014-12-24T05:15:47.060Z</wsu:Created>\r     <wsu:Expires xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\">2014-12-24T06:15:47.060Z</wsu:Expires>\r   </t:Lifetime>\r   <wsp:AppliesTo xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\">\r     <EndpointReference xmlns=\"http://www.w3.org/2005/08/addressing\">\r       <Address>https://contoso.partner.onmschina.cn/MyWebApp</Address>\r     </EndpointReference>\r   </wsp:AppliesTo>\r   <t:RequestedSecurityToken>\r     <Assertion xmlns=\"urn:oasis:names:tc:SAML:2.0:assertion\" ID=\"_3ef08993-846b-41de-99df-b7f3ff77671b\" IssueInstant=\"2014-12-24T05:20:47.060Z\" Version=\"2.0\">\r       <Issuer>https://sts.chinacloudapi.cn/b9411234-09af-49c2-b0c3-653adc1f376e/</Issuer>\r       <ds:Signature xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\">\r         <ds:SignedInfo>\r           <ds:CanonicalizationMethod Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\" />\r           <ds:SignatureMethod Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\" />\r           <ds:Reference URI=\"#_3ef08993-846b-41de-99df-b7f3ff77671b\">\r             <ds:Transforms>\r               <ds:Transform Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\" />\r               <ds:Transform Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\" />\r             </ds:Transforms>\r             <ds:DigestMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#sha256\" />\r             <ds:DigestValue>cV1J580U1pD24hEyGuAxrbtgROVyghCqI32UkER/nDY=</ds:DigestValue>\r           </ds:Reference>\r         </ds:SignedInfo>\r         <ds:SignatureValue>j+zPf6mti8Rq4Kyw2NU2nnu0pbJU1z5bR/zDaKaO7FCTdmjUzAvIVfF8pspVR6CbzcYM3HOAmLhuWmBkAAk6qQUBmKsw+XlmF/pB/ivJFdgZSLrtlBs1P/WBV3t04x6fRW4FcIDzh8KhctzJZfS5wGCfYw95er7WJxJi0nU41d7j5HRDidBoXgP755jQu2ZER7wOYZr6ff+ha+/Aj3UMw+8ZtC+WCJC3yyENHDAnp2RfgdElJal68enn668fk8pBDjKDGzbNBO6qBgFPaBT65YvE/tkEmrUxdWkmUKv3y7JWzUYNMD9oUlut93UTyTAIGOs5fvP9ZfK2vNeMVJW7Xg==</ds:SignatureValue>\r         <KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\">\r           <X509Data>\r             <X509Certificate>MIIDPjCCAabcAwIBAgIQsRiM0jheFZhKk49YD0SK1TAJBgUrDgMCHQUAMC0xKzApBgNVBAMTImFjY291bnRzLmFjY2Vzc2NvbnRyb2wud2luZG93cy5uZXQwHhcNMTQwMTAxMDcwMDAwWhcNMTYwMTAxMDcwMDAwWjAtMSswKQYDVQQDEyJhY2NvdW50cy5hY2Nlc3Njb250cm9sLndpbmRvd3MubmV0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAkSCWg6q9iYxvJE2NIhSyOiKvqoWCO2GFipgH0sTSAs5FalHQosk9ZNTztX0ywS/AHsBeQPqYygfYVJL6/EgzVuwRk5txr9e3n1uml94fLyq/AXbwo9yAduf4dCHTP8CWR1dnDR+Qnz/4PYlWVEuuHHONOw/blbfdMjhY+C/BYM2E3pRxbohBb3x//CfueV7ddz2LYiH3wjz0QS/7kjPiNCsXcNyKQEOTkbHFi3mu0u13SQwNddhcynd/GTgWN8A+6SN1r4hzpjFKFLbZnBt77ACSiYx+IHK4Mp+NaVEi5wQtSsjQtI++XsokxRDqYLwus1I1SihgbV/STTg5enufuwIDAQABo2IwYDBeBgNVHQEEVzBVgBDLebM6bK3BjWGqIBrBNFeNoS8wLTErMCkGA1UEAxMiYWNjb3VudHMuYWNjZXNzY29udHJvbC53aW5kb3dzLm5ldIIQsRiM0jheFZhKk49YD0SK1TAJBgUrDgMCHQUAA4IBAQCJ4JApryF77EKC4zF5bUaBLQHQ1PNtA1uMDbdNVGKCmSp8M65b8h0NwlIjGGGy/unK8P6jWFdm5IlZ0YPTOgzcRZguXDPj7ajyvlVEQ2K2ICvTYiRQqrOhEhZMSSZsTKXFVwNfW6ADDkN3bvVOVbtpty+nBY5UqnI7xbcoHLZ4wYD251uj5+lo13YLnsVrmQ16NCBYq2nQFNPuNJw6t3XUbwBHXpF46aLT1/eGf/7Xx6iy8yPJX4DyrpFTutDz882RWofGEO5t4Cw+zZg70dJ/hH/ODYRMorfXEW+8uKmXMKmX2wyxMKvfiPbTy5LmAU8Jvjs2tLg4rOBcXWLAIarZ</X509Certificate>\r           </X509Data>\r         </KeyInfo>\r       </ds:Signature>\r       <Subject>\r         <NameID Format=\"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent\">m_H3naDei2LNxUmEcWd0BZlNi_jVET1pMLR6iQSuYmo</NameID>\r         <SubjectConfirmation Method=\"urn:oasis:names:tc:SAML:2.0:cm:bearer\" />\r       </Subject>\r       <Conditions NotBefore=\"2014-12-24T05:15:47.060Z\" NotOnOrAfter=\"2014-12-24T06:15:47.060Z\">\r         <AudienceRestriction>\r           <Audience>https://contoso.partner.onmschina.cn/MyWebApp</Audience>\r         </AudienceRestriction>\r       </Conditions>\r       <AttributeStatement>\r         <Attribute Name=\"http://schemas.microsoft.com/identity/claims/objectidentifier\">\r           <AttributeValue>a1addde8-e4f9-4571-ad93-3059e3750d23</AttributeValue>\r         </Attribute>\r         <Attribute Name=\"http://schemas.microsoft.com/identity/claims/tenantid\">\r           <AttributeValue>b9411234-09af-49c2-b0c3-653adc1f376e</AttributeValue>\r         </Attribute>\r         <Attribute Name=\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name\">\r           <AttributeValue>sample.admin@contoso.partner.onmschina.cn</AttributeValue>\r         </Attribute>\r         <Attribute Name=\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname\">\r           <AttributeValue>Admin</AttributeValue>\r         </Attribute>\r         <Attribute Name=\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname\">\r           <AttributeValue>Sample</AttributeValue>\r         </Attribute>\r         <Attribute Name=\"http://schemas.microsoft.com/ws/2008/06/identity/claims/groups\">\r           <AttributeValue>5581e43f-6096-41d4-8ffa-04e560bab39d</AttributeValue>\r           <AttributeValue>07dd8a89-bf6d-4e81-8844-230b77145381</AttributeValue>\r           <AttributeValue>0e129f4g-6b0a-4944-982d-f776000632af</AttributeValue>\r           <AttributeValue>3ee07328-52ef-4739-a89b-109708c22fb5</AttributeValue>\r           <AttributeValue>329k14b3-1851-4b94-947f-9a4dacb595f4</AttributeValue>\r           <AttributeValue>6e32c650-9b0a-4491-b429-6c60d2ca9a42</AttributeValue>\r           <AttributeValue>f3a169a7-9a58-4e8f-9d47-b70029v07424</AttributeValue>\r           <AttributeValue>8e2c86b2-b1ad-476d-9574-544d155aa6ff</AttributeValue>\r           <AttributeValue>1bf80264-ff24-4866-b22c-6212e5b9a847</AttributeValue>\r           <AttributeValue>4075f9c3-072d-4c32-b542-03e6bc678f3e</AttributeValue>\r           <AttributeValue>76f80527-f2cd-46f4-8c52-8jvd8bc749b1</AttributeValue>\r           <AttributeValue>0ba31460-44d0-42b5-b90c-47b3fcc48e35</AttributeValue>\r           <AttributeValue>edd41703-8652-4948-94a7-2d917bba7667</AttributeValue>\r         </Attribute>\r         <Attribute Name=\"http://schemas.microsoft.com/identity/claims/identityprovider\">\r           <AttributeValue>https://sts.chinacloudapi.cn/b9411234-09af-49c2-b0c3-653adc1f376e/</AttributeValue>\r         </Attribute>\r       </AttributeStatement>\r       <AuthnStatement AuthnInstant=\"2014-12-23T18:51:11.000Z\">\r         <AuthnContext>\r           <AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:Password</AuthnContextClassRef>\r         </AuthnContext>\r       </AuthnStatement>\r     </Assertion>\r   </t:RequestedSecurityToken>\r   <t:RequestedAttachedReference>\r     <SecurityTokenReference xmlns=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\" xmlns:d3p1=\"http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd\" d3p1:TokenType=\"http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0\">\r       <KeyIdentifier ValueType=\"http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLID\">_3ef08993-846b-41de-99df-b7f3ff77671b</KeyIdentifier>\r     </SecurityTokenReference>\r   </t:RequestedAttachedReference>\r   <t:RequestedUnattachedReference>\r     <SecurityTokenReference xmlns=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\" xmlns:d3p1=\"http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd\" d3p1:TokenType=\"http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0\">\r       <KeyIdentifier ValueType=\"http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLID\">_3ef08993-846b-41de-99df-b7f3ff77671b</KeyIdentifier>\r     </SecurityTokenReference>\r   </t:RequestedUnattachedReference>\r   <t:TokenType>http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0</t:TokenType>\r   <t:RequestType>http://schemas.xmlsoap.org/ws/2005/02/trust/Issue</t:RequestType>\r   <t:KeyType>http://schemas.xmlsoap.org/ws/2005/05/identity/NoProofKey</t:KeyType>\r </t:RequestSecurityTokenResponse>\r ```\r \r ### <a name=\"jwt-token---user-impersonation\"></a>JWT 令牌 - 用户模拟\r 这是在授权代码授予流程中使用的典型 JSON Web 令牌 (JWT) 的一个示例。\r 除声明以外，该令牌还包括 ver 中的版本号和 appidacr（即身份验证上下文类引用，指示如何对客户端进行身份验证）。 对于公共客户端，该值为 0。 如果使用客户端 ID 或客户端机密，则该值为 1。\r \r ```\r {\r  typ: \"JWT\",\r  alg: \"RS256\",\r  x5t: \"kriMPdmBvx68skT8-mPAB3BseeA\"\r }.\r {\r  aud: \"https://contoso.partner.onmschina.cn/scratchservice\",\r  iss: \"https://sts.chinacloudapi.cn/b9411234-09af-49c2-b0c3-653adc1f376e/\",\r  iat: 1416968588,\r  nbf: 1416968588,\r  exp: 1416972488,\r  ver: \"1.0\",\r  tid: \"b9411234-09af-49c2-b0c3-653adc1f376e\",\r  amr: [\r   \"pwd\"\r  ],\r  roles: [\r   \"Admin\"\r  ],\r  oid: \"6526e123-0ff9-4fec-ae64-a8d5a77cf287\",\r  upn: \"sample.user@contoso.partner.onmschina.cn\",\r  unique_name: \"sample.user@contoso.partner.onmschina.cn\",\r  sub: \"yf8C5e_VRkR1egGxJSDt5_olDFay6L5ilBA81hZhQEI\",\r  family_name: \"User\",\r  given_name: \"Sample\",\r  groups: [\r   \"0e129f6b-6b0a-4944-982d-f776000632af\",\r   \"323b13b3-1851-4b94-947f-9a4dacb595f4\",\r   \"6e32c250-9b0a-4491-b429-6c60d2ca9a42\",\r   \"f3a161a7-9a58-4e8f-9d47-b70022a07424\",\r   \"8d4c81b2-b1ad-476d-9574-544d155aa6ff\",\r   \"1bf80164-ff24-4866-b19c-6212e5b9a847\",\r   \"76f80127-f2cd-46f4-8c52-8edd8bc749b1\",\r   \"0ba27160-44d0-42b5-b90c-47b3fcc48e35\"\r  ],\r  appid: \"b075ddef-0efa-123b-997b-de1337c29185\",\r  appidacr: \"1\",\r  scp: \"user_impersonation\",\r  acr: \"1\"\r }.\r ```\r \r ## <a name=\"related-content\"></a>相关内容\r - 请参阅 Azure AD Graph [策略操作](https://msdn.microsoft.com/library/azure/ad/graph/api/policy-operations)和[策略实体](https://msdn.microsoft.com/library/azure/ad/graph/api/entity-and-complex-type-reference#policy-entity)以了解有关通过 Azure AD Graph API 管理令牌生存期策略的详细信息。\r \r <!--Update_Description: wording update-->\r "}