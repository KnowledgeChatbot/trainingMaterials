{"Title":"Linux VM 上的 Django Hello World Web 应用","Description":"了解如何在 Azure 中使用 Linux VM 托管基于 Django 的 Web 应用。","Content":"# <a name=\"django-hello-world-web-app-on-a-linux-vm\"></a>Linux VM 上的 Django Hello World Web 应用\r > [!div class=\"op_single_selector\"]\r > * [Windows](../windows/classic/python-django-web-app.md?toc=%2fvirtual-machines%2fwindows%2fclassic%2ftoc.json)\r > * [Mac/Linux](../windows/classic/python-django-web-app.md?toc=%2fvirtual-machines%2flinux%2ftoc.json)\r > \r > \r \r <br>\r \r 本教程演示如何在 Azure Linux 虚拟机中托管基于 Django 的网站。 本教程假设读者以前没有使用过 Azure。 完成本教程后，即可在云中启动和运行基于 Django 的应用程序。\r \r 了解如何：\r \r * 设置 Azure 虚拟机以托管 Django。 虽然本教程介绍如何在 **Linux** 中执行此操作，但也可在 Azure 托管的 Windows Server VM 中执行相同操作。 \r * 在 Linux 中新建 Django 应用程序。\r \r 本教程演示如何生成一个基础 Hello World Web 应用程序。 该应用程序托管在 Azure 虚拟机中。\r \r 以下屏幕截图显示已完成的应用程序：\r \r ![浏览器窗口显示 Azure 中的 Hello World 页面](./media/python-django-web-app/mac-linux-django-helloworld-browser.png)\r \r [!INCLUDE [create-account-and-vms-note](../../../includes/create-account-and-vms-note.md)]\r \r ## <a name=\"create-and-set-up-an-azure-virtual-machine-to-host-django\"></a>创建并设置 Azure 虚拟机以托管 Django\r \r 1. 若要使用 Ubuntu Server 14.04 LTS 分发创建 Azure 虚拟机，请参阅[在 Azure 门户中创建 Linux 虚拟机](quick-create-portal.md?toc=%2fvirtual-machines%2flinux%2ftoc.json)。 还可选择密码验证而不是使用 SSH 公钥。\r 2. 若要编辑网络安全组以允许端口 80 的传入 HTTP 流量，请参阅[在 Azure 门户中创建网络安全组](../../virtual-network/virtual-networks-create-nsg-arm-pportal.md)。\r 3. （可选）默认情况下，新的虚拟机没有完全限定的域名 (FQDN)。  若要创建具有 FQDN 的 VM，请参阅[在 Azure 门户为 Windows VM 创建 FQDN](../windows/portal-create-fqdn.md?toc=%2fvirtual-machines%2flinux%2ftoc.json)。 此步骤非本教程必需步骤。\r \r ## <a id=\"setup\"></a>设置开发环境\r > [!NOTE]\r > 如果需要安装 Python 或者想使用客户端库，请参阅 [Python 安装指南](../../python-how-to-install.md)。\r \r Ubuntu Linux VM 已预装 Python 2.7，但不附带 Apache 或 Django。 完成以下步骤连接到 VM 并安装 Apache 和 Django：\r \r 1. 打开新终端窗口。\r 2. 输入以下命令连接到 Azure VM。 如未创建 FQDN，可使用 Azure 门户的虚拟机摘要中显示的公共 IP 地址进行连接。\r \r        $ ssh yourusername@yourVmUrl\r 3. 输入以下命令来安装 Django：\r \r        $ sudo apt-get install python-setuptools python-pip\r        $ sudo pip install django\r 4. 输入以下命令来安装带 mod-wsgi 的 Apache：\r \r        $ sudo apt-get install apache2 libapache2-mod-wsgi\r \r ## <a name=\"create-a-new-django-app\"></a>创建新的 Django 应用\r 1. 若要使用 SSH 访问 VM，请打开上一节中使用的终端窗口。\r 2. 输入以下命令来创建新的 Django 项目：\r \r        $ cd /var/www\r        $ sudo django-admin.py startproject helloworld\r \r    `django-admin.py` 脚本生成基于 Django 的网站的基本结构：\r \r    * `helloworld/manage.py` 帮助开始托管和停止托管基于 Django 的网站。\r    * `helloworld/helloworld/settings.py` 包含应用程序的 Django 设置。\r    * `helloworld/helloworld/urls.py` 包含每个 URL 及其视图之间的映射代码。\r 3. 在 /var/www/helloworld/helloworld 目录中创建一个名为 views.py 的新文件。 此文件包含用于呈现“hello world”页面的视图。 在代码编辑器中输入以下命令：\r \r        from django.http import HttpResponse\r        def home(request):\r            html = \"<html><body>Hello World!</body></html>\"\r            return HttpResponse(html)\r 4. 将 urls.py 文件的内容替换为以下命令：\r \r        from django.conf.urls import patterns, url\r        urlpatterns = patterns('',\r            url(r'^$', 'helloworld.views.home', name='home'),\r        )\r \r ## <a name=\"set-up-apache\"></a>设置 Apache\r 1. 在 /etc/apache2/sites-available/helloworld.conf 文件夹中创建 Apache 虚拟主机配置文件。 将内容设置为以下值。 将 *yourVmName* 替换为所使用的计算机的实际名称（例如 *pyubuntu*）。\r \r        <VirtualHost *:80>\r        ServerName yourVmName\r        </VirtualHost>\r        WSGIScriptAlias / /var/www/helloworld/helloworld/wsgi.py\r        WSGIPythonPath /var/www/helloworld\r 2. 使用以下命令激活该站点：\r \r        $ sudo a2ensite helloworld\r 3. 使用以下命令重启 Apache：\r \r        $ sudo service apache2 reload\r 4. 在浏览器中加载网页：\r \r    ![显示 Azure 中的 hello world 页面的浏览器窗口](./media/python-django-web-app/mac-linux-django-helloworld-browser.png)\r \r ## <a name=\"shut-down-your-azure-virtual-machine\"></a>关闭 Azure 虚拟机\r 完成本教程后，建议关闭或删除为本教程创建的 Azure VM。 这会为其他教程释放资源，同时可以避免产生 Azure 使用费用。\r \r <!--Update_Description: wording update-->"}