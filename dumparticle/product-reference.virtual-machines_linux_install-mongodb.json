{"Title":"如何在 Linux VM 上安装和配置 MongoDB","Description":"了解如何使用 Azure CLI 2.0 在 Linux 虚拟机上安装和配置 MongoDB","Content":"# <a name=\"how-to-install-and-configure-mongodb-on-a-linux-vm\"></a>如何在 Linux VM 上安装和配置 MongoDB\r [MongoDB](http://www.mongodb.org) 是一个流行的开源、高性能 NoSQL 数据库。 本文介绍如何使用 Azure CLI 2.0 在 Linux VM 上安装和配置 MongoDB。 还可以使用 [Azure CLI 1.0](install-mongodb-nodejs.md) 执行这些步骤。 文中提供了一些示例，详细说明如何执行以下操作：\r \r * [手动安装和配置基本的 MongoDB 实例](#manually-install-and-configure-mongodb-on-a-vm)\r * [使用 Resource Manager 模板创建基本的 MongoDB 实例](#create-basic-mongodb-instance-on-centos-using-a-template)\r * [使用 Resource Manager 模板创建包含副本集的复杂 MongoDB 分片群集](#create-a-complex-mongodb-sharded-cluster-on-centos-using-a-template)\r \r ## <a name=\"manually-install-and-configure-mongodb-on-a-vm\"></a>在 VM 上手动安装和配置 MongoDB\r MongoDB 为 Red Hat/CentOS、SUSE、Ubuntu 和 Debian 等 Linux 分发版[提供了安装说明](https://docs.mongodb.com/manual/administration/install-on-linux/)。 以下示例创建 *CentOS* VM。 若要创建此环境，需要安装最新的 [Azure CLI 2.0](https://docs.azure.cn/zh-cn/cli/install-az-cli2?view=azure-cli-latest)，并使用 [az login](https://docs.azure.cn/zh-cn/cli/?view=azure-cli-latest#login) 登录到 Azure 帐户。\r \r [!INCLUDE [azure-cli-2-azurechinacloud-environment-parameter](../../../includes/azure-cli-2-azurechinacloud-environment-parameter.md)]\r \r 使用 [az group create](https://docs.azure.cn/zh-cn/cli/group?view=azure-cli-latest#create) 创建资源组。 以下示例在“chinaeast”位置创建名为“myResourceGroup”的资源组：\r \r ```azurecli\r az group create --name myResourceGroup --location chinaeast\r ```\r \r 使用 [az vm create](https://docs.azure.cn/zh-cn/cli/vm?view=azure-cli-latest#create) 创建 VM。 以下示例通过名为 *azureuser* 的用户使用 SSH 公钥身份验证创建名为 *myVM* 的 VM\r \r ```azurecli\r az vm create \\\r     --resource-group myResourceGroup \\\r     --name myVM \\\r     --image CentOS \\\r     --admin-username azureuser \\\r     --generate-ssh-keys\r ```\r \r 使用自己的用户名和上一步骤中的输出中列出的 `publicIpAddress` 以 SSH 方式登录到 VM：\r \r ```bash\r ssh azureuser@<publicIpAddress>\r ```\r \r 若要为 MongoDB 添加安装源，请按如下所示创建一个 **yum** 存储库文件：\r \r ```bash\r sudo touch /etc/yum.repos.d/mongodb-org-3.4.repo\r ```\r \r 打开该 MongoDB 存储库文件进行编辑。 添加以下行：\r \r ```sh\r [mongodb-org-3.4]\r name=MongoDB Repository\r baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.4/x86_64/\r gpgcheck=1\r enabled=1\r gpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc\r ```\r \r 按如下所示使用 **yum** 安装 MongoDB：\r \r ```bash\r sudo yum install -y mongodb-org\r ```\r \r 默认情况下，CentOS 映像中强制实施 SELinux，会阻止你访问 MongoDB。 安装策略管理工具并配置 SELinux，让 MongoDB 在其默认的 TCP 端口 27017 上运行，如下所示：\r \r ```bash\r sudo yum install -y policycoreutils-python\r sudo semanage port -a -t mongod_port_t -p tcp 27017\r ```\r \r 按如下所示启动 MongoDB 服务：\r \r ```bash\r sudo service mongod start\r ```\r \r 通过使用本地 `mongo` 客户端进行连接来验证 MongoDB 安装：\r \r ```bash\r mongo\r ```\r \r 现在，通过添加一些数据并执行搜索来测试 MongoDB 实例：\r \r ```sh\r > db\r test\r > db.foo.insert( { a : 1 } )  \r > db.foo.find()  \r { \"_id\" : ObjectId(\"57ec477cd639891710b90727\"), \"a\" : 1 }\r > exit\r ```\r \r 如果需要，可将 MongoDB 配置为在系统重新引导期间自动启动：\r \r ```bash\r sudo chkconfig mongod on\r ```\r \r ## <a name=\"create-basic-mongodb-instance-on-centos-using-a-template\"></a>使用模板在 CentOS 上创建基本的 MongoDB 实例\r 可以使用 GitHub 中的以下 Azure 快速入门模板，在单个 CentOS VM 上创建基本的 MongoDB 实例。 此模板使用适用于 Linux 的自定义脚本扩展将 yum 存储库添加到新建的 CentOS VM，然后安装 MongoDB。\r \r * [CentOS 上的基本 MongoDB 实例](https://github.com/Azure/azure-quickstart-templates/tree/master/mongodb-on-centos) - https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/mongodb-on-centos/azuredeploy.json\r \r 若要创建此环境，需要安装最新的 [Azure CLI 2.0](https://docs.azure.cn/zh-cn/cli/install-az-cli2?view=azure-cli-latest)，并使用 [az login](https://docs.azure.cn/zh-cn/cli/?view=azure-cli-latest#login) 登录到 Azure 帐户。 首先，使用 [az group create](https://docs.azure.cn/zh-cn/cli/group?view=azure-cli-latest#create) 创建资源组。 以下示例在“chinaeast”位置创建名为“myResourceGroup”的资源组：\r \r ```azurecli\r az group create --name myResourceGroup --location chinaeast\r ```\r \r 接下来，使用 [az group deployment create](https://docs.azure.cn/zh-cn/cli/group/deployment?view=azure-cli-latest#create) 部署 MongoDB 模板。 根据需要定义自己的资源名称和大小，例如针对 newStorageAccountName、virtualNetworkName 和 vmSize：\r \r ```azurecli\r az group deployment create --resource-group myResourceGroup \\\r   --parameters '{\"newStorageAccountName\": {\"value\": \"mystorageaccount\"},\r     \"adminUsername\": {\"value\": \"azureuser\"},\r     \"adminPassword\": {\"value\": \"P@ssw0rd!\"},\r     \"dnsNameForPublicIP\": {\"value\": \"mypublicdns\"},\r     \"virtualNetworkName\": {\"value\": \"myVnet\"},\r     \"vmSize\": {\"value\": \"Standard_DS2_v2\"},\r     \"vmName\": {\"value\": \"myVM\"},\r     \"publicIPAddressName\": {\"value\": \"myPublicIP\"},\r     \"nicName\": {\"value\": \"myNic\"}}' \\\r   --template-uri https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/mongodb-on-centos/azuredeploy.json\r ```\r \r 使用 VM 的公共 DNS 地址登录到 VM。 可以使用 [az vm show](https://docs.azure.cn/zh-cn/cli/vm?view=azure-cli-latest#show)查看公共 DNS 地址：\r \r ```azurecli\r az vm show -g myResourceGroup -n myVM -d --query [fqdns] -o tsv\r ```\r \r 使用自己的用户名和公共 DNS 地址通过 SSH 连接到 VM：\r \r ```bash\r ssh azureuser@mypublicdns.chinaeast.chinacloudapp.cn\r ```\r \r 如下所示，通过使用本地 `mongo` 客户端进行连接来验证 MongoDB 安装：\r \r ```bash\r mongo\r ```\r \r 现在，按如下所示，通过添加一些数据并执行搜索来测试实例：\r \r ```sh\r > db\r test\r > db.foo.insert( { a : 1 } )  \r > db.foo.find()  \r { \"_id\" : ObjectId(\"57ec477cd639891710b90727\"), \"a\" : 1 }\r > exit\r ```\r \r ## <a name=\"create-a-complex-mongodb-sharded-cluster-on-centos-using-a-template\"></a>使用模板在 CentOS 上创建复杂的 MongoDB 分片群集\r 可以使用 GitHub 中的以下 Azure 快速入门模板创建复杂的 MongoDB 分片群集。 此模板遵循 [MongoDB 分片群集最佳实践](https://docs.mongodb.com/manual/core/sharded-cluster-components/) 来提供冗余和高可用性。 该模板会创建两个分片，其中每个副本集包含三个节点。 另外，它还会创建一个包含三个节点的配置服务器副本集，以及两个 **mongos** 路由器服务器（用于对各个分片中的应用程序提供一致性）。\r \r * [CentOS 上的 MongoDB 分片群集](https://github.com/Azure/azure-quickstart-templates/tree/master/mongodb-sharding-centos) - https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/mongodb-sharding-centos/azuredeploy.json\r \r > [!WARNING]\r > 部署这种复杂 MongoDB 分片群集需要 20 个以上的核心（每个区域中一个订阅的默认核心计数通常为 20 个）。 请提出 Azure 支持请求，以增加核心计数。\r \r 若要创建此环境，需要安装最新的 [Azure CLI 2.0](https://docs.azure.cn/zh-cn/cli/install-az-cli2?view=azure-cli-latest)，并使用 [az login](https://docs.azure.cn/zh-cn/cli/?view=azure-cli-latest#login) 登录到 Azure 帐户。 首先，使用 [az group create](https://docs.azure.cn/zh-cn/cli/group?view=azure-cli-latest#create) 创建资源组。 以下示例在“chinaeast”位置创建名为“myResourceGroup”的资源组：\r \r ```azurecli\r az group create --name myResourceGroup --location chinaeast\r ```\r \r 接下来，使用 [az group deployment create](https://docs.azure.cn/zh-cn/cli/group/deployment?view=azure-cli-latest#create) 部署 MongoDB 模板。 根据需要定义自己的资源名称和大小，例如针对 mongoAdminUsername、sizeOfDataDiskInGB 和 configNodeVmSize：\r \r ```azurecli\r az group deployment create --resource-group myResourceGroup \\\r   --parameters '{\"adminUsername\": {\"value\": \"azureuser\"},\r     \"adminPassword\": {\"value\": \"P@ssw0rd!\"},\r     \"mongoAdminUsername\": {\"value\": \"mongoadmin\"},\r     \"mongoAdminPassword\": {\"value\": \"P@ssw0rd!\"},\r     \"dnsNamePrefix\": {\"value\": \"mypublicdns\"},\r     \"environment\": {\"value\": \"AzureCloud\"},\r     \"numDataDisks\": {\"value\": \"4\"},\r     \"sizeOfDataDiskInGB\": {\"value\": 20},\r     \"centOsVersion\": {\"value\": \"7.0\"},\r     \"routerNodeVmSize\": {\"value\": \"Standard_DS3_v2\"},\r     \"configNodeVmSize\": {\"value\": \"Standard_DS3_v2\"},\r     \"replicaNodeVmSize\": {\"value\": \"Standard_DS3_v2\"},\r     \"zabbixServerIPAddress\": {\"value\": \"Null\"}}' \\\r   --template-uri https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/mongodb-sharding-centos/azuredeploy.json \\\r   --name myMongoDBCluster \\\r   --no-wait\r ```\r \r 此部署可能需要一个多小时来部署和配置所有 VM 实例。 上述命令的末尾使用了 `--no-wait` 标志，该标志可在 Azure 平台接受模板部署后将控制权返回给命令提示符。 然后，可以使用 [az group deployment show](https://docs.azure.cn/zh-cn/cli/group/deployment?view=azure-cli-latest#show) 查看部署状态。 以下示例查看 myResourceGroup 资源组中 myMongoDBCluster 部署的状态：\r \r ```azurecli\r az group deployment show \\\r     --resource-group myResourceGroup \\\r     --name myMongoDBCluster \\\r     --query [properties.provisioningState] \\\r     --output tsv\r ```\r \r ## <a name=\"next-steps\"></a>后续步骤\r 在上述示例中，已在本地从 VM 连接到 MongoDB 实例。 如果想要从另一个 VM 或网络连接到 MongoDB 实例，请确保[创建相应的网络安全组规则](nsg-quickstart.md)。\r \r 这些示例部署用于开发的核心 MongoDB 环境。 请为环境应用必需的安全配置选项。 有关详细信息，请参阅 [MongoDB 安全文档](https://docs.mongodb.com/manual/security/)。\r \r 有关使用模板创建这些规则的详细信息，请参阅 [Azure Resource Manager 概述](../../azure-resource-manager/resource-group-overview.md)。\r \r Azure Resource Manager 模板使用自定义脚本扩展在 VM 上下载并执行脚本。 有关详细信息，请参阅[在 Linux 虚拟机上使用 Azure 自定义脚本扩展](extensions-customscript.md)。\r \r <!--Update_Description: wording update-->"}