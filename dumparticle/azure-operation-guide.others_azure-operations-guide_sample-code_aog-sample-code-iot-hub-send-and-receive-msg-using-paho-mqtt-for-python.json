{"Title":"使用 Paho MQTT For Python 发送接收 IOT Hub 消息示例代码","Description":"使用 Paho MQTT For Python 发送接收 IOT Hub 消息示例代码","Content":"# 使用 Paho MQTT For Python 发送接收 IOT Hub 消息示例代码\r \r Azure IOT Hub 允许设备在端口 8883 上使用 MQTT V3.1.1 协议进行连接，但 Azure 要求所有的设备必须使用 TLS/SSL 保护设备的通信。\r \r 所以在使用 Paho MQTT 连接 IOT Hub 时，需要使用 TLS 连接，具体连接的方式参考以下步骤：\r \r 1.\t需要安装 Paho MQTT for Python，使用 pip 安装 Paho :\r \r     ```\r     pip install  paho-mqtt\r     ```\r \r     更多安装的配置可以参考该组件官方说明：\r \r     [Python Client - documentation](https://eclipse.org/paho/clients/python/docs/)\r \r 2.\t下载 Azure IOT Hub 使用的证书，目前 Azure IOT Hub 使用的是 WoSign 证书，所以我们需要将 WoSign 根证书下载到本地，下载地址：[WoSign Root Certificates](https://www.wosign.com/english/root.htm)\r \r     > [!NOTE]\r     > Azure 将于 2017 年 9 月份之后，逐渐会将 WoSign 的证书替换为 DigiCert，届时，请将证书替换为 DigiCert 的根证书，详细请了解此博客 : [中国区 Azure IoT 中心服务的根证书变更通知](https://www.azure.cn/blog/2017/07/21/RootCertificateChangeNoticeforAzureIoTHubServiceinAzureinChina)\r \r 3.\t编写 Python 代码，连接 Azure IOTHub，示例代码：\r \r     ```Python\r     import base64\r     import hmac\r     import urllib.parse\r \r     import paho.mqtt.client as mqtt\r     import time\r \r     hubAddress = 'freeiottest.azure-devices.cn'\r     deviceId = 'myDeviceId'\r     deviceKey = '<your device key>'\r     certPath = 'WS_CA1_NEW.crt'\r \r     hubUser = hubAddress + '/' + deviceId\r     endpoint = hubAddress + '/devices/' + deviceId\r     hubTopicPublish = 'devices/' + deviceId + '/messages/events/'\r     hubTopicSubscribe = 'devices/' + deviceId + '/messages/devicebound/#'\r \r \r     def on_connect(client, userdata, flags, rc):\r         print(\"Connected with result code \"+str(rc))\r         client.subscribe(hubTopicSubscribe)\r         client.publish(hubTopicPublish, \"testmessage\")\r \r \r     def on_message(client, userdata, msg):\r         print(\"{0} - {1} \".format(msg.topic, str(msg.payload)))\r \r \r     def generate_sas_token(uri, key, expiry=3600):\r         ttl = int(time.time()) + expiry\r         urlToSign = urllib.parse.quote(uri, safe='')\r         sign_key = \"%s\\n%d\" % (urlToSign, int(ttl))\r         h = hmac.new(base64.b64decode(key), msg=\"{0}\\n{1}\".format(urlToSign, ttl).encode('utf-8'), digestmod='sha256')\r         signature = urllib.parse.quote(base64.b64encode(h.digest()), safe='')\r         return \"SharedAccessSignature sr={0}&sig={1}&se={2}\".format(urlToSign,urllib.parse.quote(base64.b64encode(h.digest()),safe=''), ttl)\r \r     client = mqtt.Client(client_id=deviceId, protocol=mqtt.MQTTv311)\r     client.on_connect = on_connect\r     client.on_message = on_message\r     client.tls_set(certPath)\r     client.username_pw_set(username=hubUser,\r                         password=generate_sas_token(endpoint, deviceKey))\r     client.connect(hubAddress, port=8883, keepalive=60)\r \r     client.loop_forever()\r     ```\r \r > [!NOTE]\r > - 连接时，需要提供用户名和密码，密码使用 sas token 的形式。\r > - 连接时，必须使用 tls 方式，即必须使用 tls_set 方法设置证书位置。\r \r **参考文档** :\r \r - [使用 MQTT 协议与 IoT 中心通信](https://docs.azure.cn/zh-cn/iot-hub/iot-hub-mqtt-support)\r \r **示例代码** :\r \r - [使用 Paho MQTT For Python 发送接收 IOT Hub 消息示例代码](https://github.com/wacn/AOG-CodeSample/blob/master/IotHub/Python/send-and-recevice-message-from-azure-iothub-%20using-paho-mqtt-for-python/send-and-recevice-message-from-azure-iothub-%20using-paho-mqtt-for-python.py)"}