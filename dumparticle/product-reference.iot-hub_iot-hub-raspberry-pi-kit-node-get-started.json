{"Title":"连接到云的 Raspberry Pi (Node.js) - 将 Raspberry Pi 连接到 Azure IoT 中心","Description":"在本教程中了解如何设置 Raspberry Pi 并将其连接到 Azure IoT 中心，使其能够将数据发送到 Azure 云平台。","Content":"# <a name=\"connect-raspberry-pi-to-azure-iot-hub-nodejs\"></a>将 Raspberry Pi 连接到 Azure IoT 中心 (Node.js)\r \r [!INCLUDE [iot-hub-get-started-device-selector](../../includes/iot-hub-get-started-device-selector.md)]\r \r 在本教程中，首先学习有关使用运行 Raspbian 的 Raspberry Pi 的基础知识。 然后学习如何使用 [Azure IoT 中心](./iot-hub-what-is-iot-hub.md)将设备无缝连接到云。 有关 Windows 10 IoT Core 的示例，请访问 [Windows 开发人员中心](http://www.windowsondevices.com/)。\r \r 还没有工具包？ 试用 [Raspberry Pi 联机模拟器](./iot-hub-raspberry-pi-web-simulator-get-started.md)。 或在[此处](https://www.azure.cn/develop/iot/iot-starter-kits)购买新工具包。\r \r \r ## <a name=\"what-you-do\"></a>准备工作\r \r * 创建 IoT 中心。\r * 在 IoT 中心内为 Pi 注册设备。\r * 设置 Raspberry Pi。\r * 在 Pi 上运行示例应用程序，将传感器数据发送到 IoT 中心。\r \r ## <a name=\"what-you-learn\"></a>学习内容\r \r * 如何创建 Azure IoT 中心以及如何获取新的设备连接字符串。\r * 如何通过 BME280 传感器连接 Pi。\r * 如何通过在 Pi 上运行示例应用程序来收集传感器数据。\r * 如何将传感器数据发送到 IoT 中心。\r \r ## <a name=\"what-you-need\"></a>需要什么\r \r ![需要什么](./media/iot-hub-raspberry-pi-kit-node-get-started/0_starter_kit.jpg)\r \r * 一个 Raspberry Pi 2 或 Raspberry Pi 3 电路板。\r * 一个有效的 Azure 订阅。 如果没有 Azure 帐户，只需花费几分钟就能[创建一个 Azure 试用帐户](https://www.azure.cn/pricing/1rmb-trial/)。\r * 连接到 Pi 的监视器、USB 键盘和鼠标。\r * 运行 Windows 或 Linux 的 Mac 或电脑。\r * Internet 连接。\r * 16 GB 或更大容量的 microSD 卡。\r * USB-SD 适配器或 microSD 卡，用于将操作系统映像刻录到 microSD 卡中。\r * 带有 6 英尺微型 USB 电缆的 5 伏 2 安电源。\r \r 以下项可选：\r \r * 已装配的 Adafruit BME280 温度、压力和湿度传感器。\r * 试验板。\r * 6 根 F/M 跳线。\r * 散射的 10 毫米 LED 灯。\r \r \r > [!NOTE] \r 如果没有可选项，可以使用模拟的传感器数据。\r \r [!INCLUDE [iot-hub-get-started-create-hub-and-device](../../includes/iot-hub-get-started-create-hub-and-device.md)]\r \r ## <a name=\"setup-raspberry-pi\"></a>设置 Raspberry Pi\r \r ### <a name=\"install-the-raspbian-operating-system-for-pi\"></a>为 Pi 安装 Raspbian 操作系统\r \r 准备用于安装 Raspbian 映像的 microSD 卡。\r \r 1. 下载 Raspbian。\r    1. [下载 Raspbian Stretch with Desktop](https://www.raspberrypi.org/downloads/raspbian/)（.zip 文件）。\r    1. 将 Raspbian 映像解压缩到计算机的某个文件夹中。\r 1. 将 Raspbian 安装到 microSD 卡。\r    1. [下载并安装 Etcher SD 卡刻录机实用工具](https://etcher.io/)。\r    1. 运行 Etcher 并选择已在步骤 1 中解压缩的 Raspbian 映像。\r    1. 选择 microSD 卡驱动器。 Etcher 可能已选择了正确的驱动器。\r    1. 单击“刷机”，将 Raspbian 安装到 microSD 卡。\r    1. 在安装完成后，从计算机中移除 microSD 卡。 可以安全地直接取出 microSD 卡，因为 Etcher 会在完成后自动弹出或卸载 microSD 卡。\r    1. 将 microSD 卡插入 Pi。\r \r ### <a name=\"enable-ssh-and-i2c\"></a>启用 SSH 和 I2C\r \r 1. 将 Pi 连接到监视器、键盘和鼠标。 \r 1. 启动 Pi，然后使用 `pi` 作为用户名并使用 `raspberry` 作为密码来登录 Raspbian。\r 1. 依次单击 Raspberry 图标 >“首选项” > “Raspberry Pi 配置”。\r \r    ![Raspbian 首选项菜单](./media/iot-hub-raspberry-pi-kit-node-get-started/1_raspbian-preferences-menu.png)\r \r 1. 在“接口”选项卡上，将“I2C”和“SSH”设置为“启用”，然后单击“确定”。 如果没有物理传感器并且想要使用模拟的传感器数据，则此步骤是可选的。\r \r    ![在 Raspberry Pi 上启用 I2C 和 SSH](./media/iot-hub-raspberry-pi-kit-node-get-started/2_enable-i2c-ssh-on-raspberry-pi.png)\r \r > [!NOTE] \r 若要启用 SSH 和 I2C，可在 [raspberrypi.org](https://www.raspberrypi.org/documentation/remote-access/ssh/) 和 [Adafruit.com](https://learn.adafruit.com/adafruits-raspberry-pi-lesson-4-gpio-setup/configuring-i2c) 中找到更多参考文档。\r \r ### <a name=\"connect-the-sensor-to-pi\"></a>将传感器连接到 Pi\r \r 使用试验板和跳线，将 LED 灯和 BME280 连接到 Pi，如下所示。 如果没有该传感器，请[跳过此部分](#connect-pi-to-the-network)。\r \r ![Raspberry Pi 和传感器连接](./media/iot-hub-raspberry-pi-kit-node-get-started/3_raspberry-pi-sensor-connection.png)\r \r BME280 传感器可以收集温度和湿度数据。 当设备向云发送消息时，LED 将闪烁。 \r \r 对于传感器引脚，请使用以下接线：\r \r | 始端（传感器和 LED 灯）     | 结束（开发板）            | 线缆颜色   |\r | -----------------------  | ---------------------- | ------------: |\r | VDD（引脚 5G）             | 3.3V 电源（引脚 1）       | 白线   |\r | GND（引脚 7G）             | GND（引脚 6）            | 棕色电缆   |\r | SDI（引脚 10G）            | I2C1 SDA（引脚 3）       | 红线     |\r | SCK（引脚 8G）             | I2C1 SCL（引脚 5）       | 橙色电缆  |\r | LED VDD（引脚 18F）        | GPIO 24（引脚 18）       | 白线   |\r | LED GND（引脚 17F）        | GND（引脚 20）           | 黑线   |\r \r 单击查看 [Raspberry Pi 2 和 3 引脚映射](https://developer.microsoft.com/windows/iot/docs/pinmappingsrpi)以供参考。\r \r 成功将 BME280 连接到 Raspberry Pi 后，它应如下图所示。\r \r ![连接在一起的 Pi 和 BME280](./media/iot-hub-raspberry-pi-kit-node-get-started/4_connected-pi.jpg)\r \r ### <a name=\"connect-pi-to-the-network\"></a>将 Pi 连接到网络\r \r 使用 USB 微电缆和电源开启 Pi。 使用以太网电缆将 Pi 连接到有线网络，或者按照 [Raspberry Pi Foundation 中的说明](https://www.raspberrypi.org/learning/software-guide/wifi/)将 Pi 连接到无线网络。 将 Pi 成功连接到网络后，需要记下 [Pi 的 IP 地址](https://learn.adafruit.com/adafruits-raspberry-pi-lesson-3-network-setup/finding-your-pis-ip-address)。\r \r ![已连接到有线网络](./media/iot-hub-raspberry-pi-kit-node-get-started/5_power-on-pi.jpg)\r \r > [!NOTE]\r > 确保 Pi 与计算机连接到同一网络。 例如，如果计算机连接到无线网络，而 Pi 连接到有线网络，则可能看不到 devdisco 输出中的 IP 地址。\r \r ## <a name=\"run-a-sample-application-on-pi\"></a>在 Pi 上运行示例应用程序\r \r ### <a name=\"clone-sample-application-and-install-the-prerequisite-packages\"></a>克隆示例应用程序，并安装必备组件包\r \r 1. 从主计算机使用下列 SSH 客户端之一连接到 Raspberry Pi：\r    \r    **Windows 用户**\r    1. 下载并安装 [PuTTY](http://www.putty.org/) for Windows。 \r    1. 将 Pi 的 IP 地址复制到主机名（或 IP 地址）部分，并选择 SSH 作为连接类型。\r    \r    ![PuTTy](./media/iot-hub-raspberry-pi-kit-node-get-started/7_putty-windows.png)\r    \r    **Mac 和 Ubuntu 用户**\r    \r    使用 Ubuntu 或 macOS 上的内置 SSH 客户端。 可能需要运行 `ssh pi@<ip address of pi>`，以通过 SSH 连接 Pi。\r    > [!NOTE] \r    默认用户名是 `pi`，密码是 `raspberry`。\r \r 1. 将 Node.js 和 NPM 安装到 Pi。\r    \r    首先检查 Node.js 版本。 \r    \r    ```bash\r    node -v\r    ```\r \r    如果版本低于 4.x，或者 Pi 上没有 Node.js，请安装最新版本。\r \r    ```bash\r    curl -sL http://deb.nodesource.com/setup_4.x | sudo -E bash\r    sudo apt-get -y install nodejs\r    ```\r \r 1. 克隆示例应用程序。\r \r    ```bash\r    git clone https://github.com/Azure-Samples/iot-hub-node-raspberrypi-client-app\r    ```\r \r 1. 安装示例的所有程序包。 安装包括 Azure IoT 设备 SDK、BME280 传感器库和接线 Pi 库。\r \r    ```bash\r    cd iot-hub-node-raspberrypi-client-app\r    sudo npm install\r    ```\r    > [!NOTE] \r    完成此安装过程可能需要几分钟，具体取决于网络连接情况。\r \r ### <a name=\"configure-the-sample-application\"></a>配置示例应用程序\r \r 1. 通过运行以下命令，打开配置文件：\r \r    ```bash\r    nano config.json\r    ```\r \r    ![配置文件](./media/iot-hub-raspberry-pi-kit-node-get-started/6_config-file.png)\r \r    此文件中有两个可以配置的项。 第一个是 `interval`，它定义发送到云的消息之间的时间间隔（以毫秒为单位）。 第二个是 `simulatedData`，它是一个布尔值，指示是否使用模拟的传感器数据。\r \r    如果**没有传感器**，请将 `simulatedData` 值设置为 `true`，使示例应用程序创建和使用模拟的传感器数据。\r \r 1. 通过按“Ctrl-O”>“Enter”>“Ctrl-X”保存并退出。\r \r ### <a name=\"run-the-sample-application\"></a>运行示例应用程序\r \r 通过运行以下命令，生成示例应用程序：\r \r    ```bash\r    sudo node index.js '<YOUR AZURE IOT HUB DEVICE CONNECTION STRING>'\r    ```\r \r    > [!NOTE] \r    确保将设备连接字符串复制并粘贴到单引号中。\r \r \r 应看到以下输出，其中显示传感器数据以及发送至 IoT 中心的消息。\r \r ![输出 - 从 Raspberry Pi 发送到 IoT 中心的传感器数据](./media/iot-hub-raspberry-pi-kit-node-get-started/8_run-output.png)\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r 此时已运行示例应用程序，收集传感器数据并将其发送到 IoT 中心。 若要查看 Raspberry Pi 已发送到 IoT 中心的消息，或若要在命令行接口中将消息发送到 Raspberry Pi，请参阅[使用 iothub-explorer 管理云设备消息传送教程](./iot-hub-explorer-cloud-device-messaging.md)。\r \r [!INCLUDE [iot-hub-get-started-next-steps](../../includes/iot-hub-get-started-next-steps.md)]\r \r <!--Update_Description:update meta properties and wording-->"}