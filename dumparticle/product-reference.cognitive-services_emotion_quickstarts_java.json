{"Title":"Java for Android 情感 API 快速入门","Description":"获取信息和代码示例，帮助自己快速开始使用认知服务中的情感 API 和 Java for Android。","Content":"# <a name=\"emotion-api-java-for-android-quick-start\"></a>Java for Android 情感 API 快速入门\r 本文提供信息和代码示例来帮助读者快速开始使用情感 API Android 客户端库中的[情感识别方法](https://dev.cognitive.azure.cn/docs/services/5639d931ca73072154c1ce89/operations/563b31ea778daf121cc3a5fa)。 示例演示如何使用 Java 识别人员表达的情感。 \r \r ## <a name=\"prerequisites\"></a>先决条件\r - 在[此处](https://github.com/Microsoft/Cognitive-emotion-android)获取 Java for Android 情感 API SDK\r - 从 [Azure 门户](https://portal.azure.cn)获取订阅密钥\r \r ## <a name=\"recognize-emotions-java-for-android-example-request\"></a>识别情感 Java for Android 示例请求\r \r ```java\r // // This sample uses the Apache HTTP client from HTTP Components (http://hc.apache.org/httpcomponents-client-ga/)\r import java.net.URI;\r import org.apache.http.HttpEntity;\r import org.apache.http.HttpResponse;\r import org.apache.http.client.HttpClient;\r import org.apache.http.client.methods.HttpPost;\r import org.apache.http.entity.StringEntity;\r import org.apache.http.client.utils.URIBuilder;\r import org.apache.http.impl.client.DefaultHttpClient;\r import org.apache.http.util.EntityUtils;\r \r public class Main\r {\r     public static void main(String[] args)\r     {\r         HttpClient httpClient = new DefaultHttpClient();\r \r         try\r         {\r             URIBuilder uriBuilder = new URIBuilder(\"https://api.cognitive.azure.cn/emotion/v1.0/recognize\");\r \r             URI uri = uriBuilder.build();\r             HttpPost request = new HttpPost(uri);\r \r             // Request headers. Replace the example key below with your valid subscription key.\r             request.setHeader(\"Content-Type\", \"application/json\");\r             request.setHeader(\"Ocp-Apim-Subscription-Key\", \"13hc77781f7e4b19b5fcdd72a8df7156\");\r \r             // Request body. Replace the example URL below with the URL of the image you want to analyze.\r             StringEntity reqEntity = new StringEntity(\"{ \\\"url\\\": \\\"http://example.com/images/test.jpg\\\" }\");\r             request.setEntity(reqEntity);\r \r             HttpResponse response = httpClient.execute(request);\r             HttpEntity entity = response.getEntity();\r \r             if (entity != null)\r             {\r                 System.out.println(EntityUtils.toString(entity));\r             }\r         }\r         catch (Exception e)\r         {\r             System.out.println(e.getMessage());\r         }\r     }\r }\r ```\r \r ## <a name=\"recognize-emotions-sample-response\"></a>识别情感示例响应\r 成功调用返回人脸条目及其关联情感评分的数组，返回的内容已按人脸矩形大小的降序排序。 空响应表示未检测到任何人脸。 情感条目包含以下字段：\r - faceRectangle - 人脸在图像中的矩形位置。\r - scores - 图像中每张人脸的情感评分。 \r \r ```json\r application/json \r [\r   {\r     \"faceRectangle\": {\r       \"left\": 68,\r       \"top\": 97,\r       \"width\": 64,\r       \"height\": 97\r     },\r     \"scores\": {\r       \"anger\": 0.00300731952,\r       \"contempt\": 5.14648448E-08,\r       \"disgust\": 9.180124E-06,\r       \"fear\": 0.0001912825,\r       \"happiness\": 0.9875571,\r       \"neutral\": 0.0009861537,\r       \"sadness\": 1.889955E-05,\r       \"surprise\": 0.008229999\r     }\r   }\r ]\r \r "}