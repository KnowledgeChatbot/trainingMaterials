{"Title":"在 Azure 中使用 Docker VM 扩展创建 Docker 环境","Description":"了解如何使用 Docker VM 扩展快速安全地在 Azure 中使用 Resource Manager 模板和 Azure CLI 2.0 部署 Docker 环境","Content":"# <a name=\"create-a-docker-environment-in-azure-using-the-docker-vm-extension\"></a>在 Azure 中使用 Docker VM 扩展创建 Docker 环境\r Docker 是流行的容器管理和映像处理平台，用于在 Linux 上快速操作容器。 在 Azure 中，可以根据需要使用各种方式部署 Docker。 本文重点介绍如何通过 Azure CLI 2.0 使用 Docker VM 扩展和 Azure Resource Manager 模板。 还可以使用 [Azure CLI 1.0](dockerextension-nodejs.md) 执行这些步骤。\r \r ## <a name=\"azure-docker-vm-extension-overview\"></a>Azure Docker VM 扩展概述\r Azure Docker VM 扩展在 Linux 虚拟机 (VM) 中安装并配置 Docker 守护程序、Docker 客户端和 Docker Compose。 使用 Azure Docker VM 扩展，可以拥有更多的控制和功能，而不仅仅是使用 Docker Machine 或自行创建 Docker 主机。 借助这些附加功能（例如 [Docker Compose](https://docs.docker.com/compose/overview/)），Azure Docker VM 扩展可用于更可靠的开发人员或生产环境。\r \r 有关不同部署方法的详细信息，包括如何使用 Docker Machine，请参阅以下文章：\r \r * 若要快速建立应用原型，可以使用 [Docker Machine](docker-machine.md) 创建一个 Docker 主机。\r \r ## <a name=\"deploy-a-template-with-the-azure-docker-vm-extension\"></a>使用 Azure Docker VM 扩展部署模板\r 让我们使用现有的快速入门模板，创建使用 Azure Docker VM 扩展来安装和配置 Docker 主机的 Ubuntu VM。 可以在此处查看模板： [使用 Docker 轻松部署 Ubuntu VM](https://github.com/Azure/azure-quickstart-templates/tree/master/docker-simple-on-ubuntu)。 需要安装最新的 [Azure CLI 2.0](https://docs.azure.cn/zh-cn/cli/install-az-cli2?view=azure-cli-latest) 并已使用 [az login](https://docs.azure.cn/zh-cn/cli/?view=azure-cli-latest#login) 登录到 Azure 帐户。\r \r >[!NOTE]\r > 必须修改从 GitHub 存储库“azure-quickstart-templates”部署的模板，以适应 Azure 中国云环境。 例如，替换某些终结点 -- 将“blob.core.windows.net”替换为“blob.core.chinacloudapi.cn”，将“cloudapp.azure.com”替换为“chinacloudapp.cn”。\r \r [!INCLUDE [azure-cli-2-azurechinacloud-environment-parameter](../../../includes/azure-cli-2-azurechinacloud-environment-parameter.md)]\r \r 首先，使用 [az group create](https://docs.azure.cn/zh-cn/cli/group?view=azure-cli-latest#create) 创建资源组。 以下示例在“chinanorth”位置创建名为“myResourceGroup”的资源组：\r \r ```azurecli\r az group create --name myResourceGroup --location chinanorth\r ```\r \r 接下来，使用 [az group deployment create](https://docs.azure.cn/zh-cn/cli/group/deployment?view=azure-cli-latest#create) 部署 VM，其中包含 [GitHub 中此 Azure Resource Manager 模板](https://github.com/Azure/azure-quickstart-templates/tree/master/docker-simple-on-ubuntu)中的 Azure Docker VM 扩展。 为 newStorageAccountName、adminUsername、adminPassword 和 dnsNameForPublicIP 提供自己的唯一值，如下所示：\r \r ```azurecli\r az group deployment create --resource-group myResourceGroup \\\r   --parameters '{\"newStorageAccountName\": {\"value\": \"mystorageaccount\"},\r     \"adminUsername\": {\"value\": \"azureuser\"},\r     \"adminPassword\": {\"value\": \"P@ssw0rd!\"},\r     \"dnsNameForPublicIP\": {\"value\": \"mypublicdns\"}}' \\\r   --template-file /path/to/azuredeploy.json\r ```\r \r 需要几分钟才能完成部署。 部署完成后，[移到下一步](#deploy-your-first-nginx-container)，通过 SSH 连接到 VM。 \r \r （可选）要重新通过提示符进行控制并让部署在后台继续运行，请将 `--no-wait` 标志添加到前一个命令。 使用此过程可在 CLI 中执行其他操作，同时让部署持续几分钟。 \r \r 然后，可以使用 [az vm show](https://docs.azure.cn/zh-cn/cli/vm?view=azure-cli-latest#show) 查看有关 Docker 主机状态的详细信息。 以下示例在名为 *myResourceGroup* 的资源组中检查名为 *myDockerVM*（模板中的默认名称 - 请不要更改该名称）的 VM 的状态：\r \r ```azurecli\r az vm show \\\r     --resource-group myResourceGroup \\\r     --name myDockerVM \\\r     --query [provisioningState] \\\r     --output tsv\r ```\r \r 当此命令返回“已成功”时，表示部署完毕，可使用以下步骤通过 SSH 连接到 VM。\r \r ## <a name=\"deploy-your-first-nginx-container\"></a>部署第一个 NGINX 容器\r 若要查看 VM 的详细信息（包括 DNS 名称），请使用 [az vm show](https://docs.azure.cn/zh-cn/cli/vm?view=azure-cli-latest#show)：\r \r ```azurecli\r az vm show \\\r     --resource-group myResourceGroup \\\r     --name myDockerVM \\\r     --show-details \\\r     --query [fqdns] \\\r     --output tsv\r ```\r \r 通过 SSH 连接到新的 Docker 主机。 提供自己的 DNS 名称，如下所示：\r \r ```bash\r ssh azureuser@mypublicdns.chinanorth.cloudapp.chinacloudapi.cn\r ```\r \r 登录到 Docker 主机后，运行 NGINX 容器：\r \r ```bash\r sudo docker run -d -p 80:80 nginx\r ```\r \r 下载 NGINX 映像并启动容器时，输出结果类似于以下示例：\r \r ```bash\r Unable to find image 'nginx:latest' locally\r latest: Pulling from library/nginx\r efd26ecc9548: Pull complete\r a3ed95caeb02: Pull complete\r a48df1751a97: Pull complete\r 8ddc2d7beb91: Pull complete\r Digest: sha256:2ca2638e55319b7bc0c7d028209ea69b1368e95b01383e66dfe7e4f43780926d\r Status: Downloaded newer image for nginx:latest\r b6ed109fb743a762ff21a4606dd38d3e5d35aff43fa7f12e8d4ed1d920b0cd74\r ```\r \r 检查在 Docker 主机上运行的容器的状态，如下所示：\r \r ```bash\r sudo docker ps\r ```\r \r 输出类似于以下示例，它显示 NGINX 容器正在运行，且正在转发 TCP 端口 80 和 443：\r \r ```bash\r CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS                         NAMES\r b6ed109fb743        nginx               \"nginx -g 'daemon off\"   About a minute ago   Up About a minute   0.0.0.0:80->80/tcp, 443/tcp   adoring_payne\r ```\r \r 若要查看容器的运行情况，请打开 Web 浏览器并输入 Docker 主机的 DNS 名称：\r \r ![运行 ngnix 容器](./media/dockerextension/nginxrunning.png)\r \r ## <a name=\"azure-docker-vm-extension-template-reference\"></a>Azure Docker VM 扩展模板参考\r 之前的示例使用现有的快速入门模板。 还可使用自己的 Resource Manager 模板部署 Azure Docker VM 扩展。 为此，请将以下内容添加到资源管理器模板，并适当地定义 VM 的 `vmName`：\r \r ```json\r {\r   \"type\": \"Microsoft.Compute/virtualMachines/extensions\",\r   \"name\": \"[concat(variables('vmName'), '/DockerExtension'))]\",\r   \"apiVersion\": \"2015-05-01-preview\",\r   \"location\": \"[parameters('location')]\",\r   \"dependsOn\": [\r     \"[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]\"\r   ],\r   \"properties\": {\r     \"publisher\": \"Microsoft.Azure.Extensions\",\r     \"type\": \"DockerExtension\",\r     \"typeHandlerVersion\": \"1.*\",\r     \"autoUpgradeMinorVersion\": true,\r     \"settings\": {},\r     \"protectedSettings\": {}\r   }\r }\r ```\r \r 有关更详细的 Resource Manager 模板用法演练，请阅读 [Azure Resource Manager overview](../../azure-resource-manager/resource-group-overview.md)（Azure Resource Manager 概述）。\r \r ## <a name=\"next-steps\"></a>后续步骤\r 可能需要使用 [Docker Compose](https://docs.docker.com/compose/overview/) [配置 Docker 守护程序 TCP 端口](https://docs.docker.com/engine/reference/commandline/dockerd/#/bind-docker-to-another-hostport-or-a-unix-socket)，了解 [Docker 安全性](https://docs.docker.com/engine/security/security/)或部署容器。 有关 Azure Docker VM 扩展本身的详细信息，请参阅 [GitHub 项目](https://github.com/Azure/azure-docker-extension/)。\r \r 阅读有关 Azure 中其他 Docker 部署选项的详细信息：\r \r * [通过 Azure 驱动程序使用 Docker Machine](docker-machine.md)  \r * [开始使用 Docker 和 Compose，在 Azure 虚拟机上定义和运行多容器应用程序](docker-compose-quickstart.md)。\r <!--Update_Description: update meta properties， update link-->\r "}