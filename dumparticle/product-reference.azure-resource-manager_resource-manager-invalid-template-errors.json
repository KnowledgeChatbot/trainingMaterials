{"Title":"Azure 无效模板错误","Description":"说明如何解决无效模板错误。","Content":"# <a name=\"resolve-errors-for-invalid-template\"></a>解决无效模板错误\r \r 本文说明如何解决无效模板错误。\r \r ## <a name=\"symptom\"></a>症状\r \r 部署模板时将收到一个指示以下内容的错误：\r \r ```\r Code=InvalidTemplate\r Message=<varies>\r ```\r \r 错误消息取决于错误的类型。\r \r ## <a name=\"cause\"></a>原因\r \r 此错误可由多种不同类型的错误导致。 它们通常涉及模板中的语法或结构错误。\r \r ## <a name=\"solution\"></a>解决方案\r \r ### <a name=\"solution-1---syntax-error\"></a>解决方案 1 - 语法错误\r \r 如果有错误消息指出模板验证失败，则可能是模板中存在语法问题。\r \r ```\r Code=InvalidTemplate\r Message=Deployment template validation failed\r ```\r \r 此错误很容易发生，因为模板表达式可能很复杂。 例如，存储帐户的以下名称分配包含一组方括号、三个函数、三组圆括号、一组单引号和一个属性：\r \r ```json\r \"name\": \"[concat('storage', uniqueString(resourceGroup().id))]\",\r ```\r \r 如果未提供匹配的语法，该模板会生成一个不同于所需的值。\r \r 收到此类错误时，请仔细检查表达式语法。 考虑使用 [Visual Studio](vs-azure-tools-resource-groups-deployment-projects-create-deploy.md) 或 [Visual Studio Code](resource-manager-vs-code.md) 等 JSON 编辑器，此类编辑器在出现语法错误时可以发出警告。\r \r ### <a name=\"solution-2---incorrect-segment-lengths\"></a>解决方案 2 - 段长度不正确\r \r 当资源名称的格式不正确时，会发生另一种模板无效错误。\r \r ```\r Code=InvalidTemplate\r Message=Deployment template validation failed: 'The template resource {resource-name}'\r for type {resource-type} has incorrect segment lengths.\r ```\r \r 根级别的资源其名称中的段必须比资源类型中的段少一个。 段之间用斜杠隔开。 在下面的示例中，类型有两个段，名称有一个段，因此为 **有效名称**。\r \r ```json\r {\r   \"type\": \"Microsoft.Web/serverfarms\",\r   \"name\": \"myHostingPlanName\",\r   ...\r }\r ```\r \r 但下一个示例 **不是有效名称** ，因为其段数与类型的段数相同。\r \r ```json\r {\r   \"type\": \"Microsoft.Web/serverfarms\",\r   \"name\": \"appPlan/myHostingPlanName\",\r   ...\r }\r ```\r \r 对于子资源来说，类型和名称的段数必须相同。 之所以必须这样，是因为子资源的完整名称和类型包含父名称和类型。 因此，完整名称的段仍比完整类型的段少一个。\r \r ```json\r \"resources\": [\r     {\r         \"type\": \"Microsoft.KeyVault/vaults\",\r         \"name\": \"contosokeyvault\",\r         ...\r         \"resources\": [\r             {\r                 \"type\": \"secrets\",\r                 \"name\": \"appPassword\",\r                 ...\r             }\r         ]\r     }\r ]\r ```\r \r 确保段数正确对于 Resource Manager 类型来说可能很困难，这些类型应用到各个资源提供程序。 例如，对网站应用资源锁需要使用包含四个段的类型。 因此，该名称包含三个段：\r \r ```json\r {\r     \"type\": \"Microsoft.Web/sites/providers/locks\",\r     \"name\": \"[concat(variables('siteName'),'/Microsoft.Authorization/MySiteLock')]\",\r     ...\r }\r ```\r \r ### <a name=\"solution-3---parameter-is-not-valid\"></a>解决方案 3 - 参数无效\r \r 如果模板指定了参数的允许值，但你提供的值并不是这些允许值之一，则会收到类似于下面的错误消息：\r \r ```\r Code=InvalidTemplate;\r Message=Deployment template validation failed: 'The provided value {parameter value}\r for the template parameter {parameter name} is not valid. The parameter value is not\r part of the allowed values\r ```\r \r 请仔细检查模板中的允许值，并提供在部署过程中提供这些值之一。\r \r ### <a name=\"solution-4---circular-dependency-detected\"></a>解决方案 4 - 检测到循环依赖项\r \r 当资源以某种方式互相依赖，导致部署无法启动时，就会出现此错误。 将多个相互依赖的项组合在一起时，会导致两个或两个以上的资源等待其他资源，而后者也在进行等待。 例如，resource1 依赖于 resource3，resource2 依赖于 resource1，resource3 依赖于 resource2。 通常情况下，删除不必要的依赖项即可解决此问题。\r \r <!--Update_Description: new articles on invalid template errors-->"}