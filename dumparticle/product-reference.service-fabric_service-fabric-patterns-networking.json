{"Title":"Azure Service Fabric 的网络模式","Description":"介绍 Service Fabric 的常见网络模式以及如何使用 Azure 网络功能创建群集。","Content":"# <a name=\"service-fabric-networking-patterns\"></a>Service Fabric 网络模式\r 可将 Azure Service Fabric 群集与其他 Azure 网络功能集成。 本文说明如何创建使用以下功能的群集：\r \r - [现有虚拟网络或子网](#existingvnet)\r - [静态公共 IP 地址](#staticpublicip)\r - [仅限内部的负载均衡器](#internallb)\r - [内部和外部负载均衡器](#internalexternallb)\r \r Service Fabric 在标准的虚拟机规模集中运行。 可在虚拟机规模集中使用的任何功能同样可在 Service Fabric 群集中使用。 虚拟机规模集与 Service Fabric 的 Azure Resource Manager 模板的网络部分是相同的。 部署到现有虚拟网络后，可以轻松地整合其他网络功能，例如 Azure ExpressRoute、Azure VPN 网关、网络安全组和虚拟网络对等互连。\r \r 与其他网络功能相比，Service Fabric 的独特之处体现在一个方面。 [Azure 门户](https://portal.azure.cn)在内部使用 Service Fabric 资源提供程序连接到群集，以获取有关节点和应用程序的信息。 Service Fabric 资源提供程序需要对管理终结点上的 HTTP 网关端口（默认为 19080）具有可公开访问的入站访问权限。 [Service Fabric Explorer](service-fabric-visualizing-your-cluster.md) 使用该管理终结点来管理群集。 Service Fabric 资源提供程序还使用此端口来查询有关群集的信息，以便在 Azure 门户中显示。 \r \r 如果无法通过 Service Fabric 资源提供程序访问端口 19080，门户中会显示一条类似于“找不到节点”的消息，并且节点和应用程序列表显示为空。 如果想要在 Azure 门户中查看群集，负载均衡器必须公开一个公共 IP 地址，并且网络安全组必须允许端口 19080 上的传入流量。 如果设置不满足这些要求，Azure 门户不会显示群集的状态。\r \r ## <a name=\"templates\"></a>模板\r \r 所有 Service Fabric 模板在[一个下载文件](https://msdnshared.blob.core.windows.net/media/2016/10/SF_Networking_Templates.zip)中提供。 使用以下 PowerShell 命令应可按原样部署模板。 若要部署现有的 Azure 虚拟网络模板或静态公共 IP 模板，请先阅读本文的[初始设置](#initialsetup)部分。\r \r <a name=\"initialsetup\"></a>\r ## <a name=\"initial-setup\"></a>初始设置\r \r ### <a name=\"existing-virtual-network\"></a>现有虚拟网络\r \r 在以下示例中，我们从 **ExistingRG** 资源组中名为 ExistingRG-vnet 的现有虚拟网络着手。 子网命名为 default。 这些默认资源是在使用 Azure 门户创建标准虚拟机 (VM) 时创建的。 可以只创建虚拟网络和子网而不创建 VM，但是，将群集添加到现有虚拟网络的主要目的是提供与其他 VM 之间的网络连接。 创建 VM 可以很好地示范现有虚拟网络的典型用法。 如果 Service Fabric 群集仅使用不带公共 IP 地址的内部负载均衡器，则可以将 VM 及其公共 IP 用作安全的*转接盒*。\r \r ### <a name=\"static-public-ip-address\"></a>静态公共 IP 地址\r \r 静态公共 IP 地址通常是一个专用资源，与其所分配的 VM 分开管理。 它在专用网络资源组中（而不是在 Service Fabric 群集资源组本身中）预配。 使用 Azure 门户或 PowerShell 在同一个 ExistingRG 资源组中创建名为 staticIP1 的静态公共 IP 地址：\r \r ```powershell\r PS C:\\Users\\user> New-AzureRmPublicIpAddress -Name staticIP1 -ResourceGroupName ExistingRG -Location chinaeast -AllocationMethod Static -DomainNameLabel sfnetworking\r \r Name                     : staticIP1\r ResourceGroupName        : ExistingRG\r Location                 : chinaeast\r Id                       : /subscriptions/1237f4d2-3dce-1236-ad95-123f764e7123/resourceGroups/ExistingRG/providers/Microsoft.Network/publicIPAddresses/staticIP1\r Etag                     : W/\"fc8b0c77-1f84-455d-9930-0404ebba1b64\"\r ResourceGuid             : 77c26c06-c0ae-496c-9231-b1a114e08824\r ProvisioningState        : Succeeded\r Tags                     :\r PublicIpAllocationMethod : Static\r IpAddress                : 40.83.182.110\r PublicIpAddressVersion   : IPv4\r IdleTimeoutInMinutes     : 4\r IpConfiguration          : null\r DnsSettings              : {\r                              \"DomainNameLabel\": \"sfnetworking\",\r                              \"Fqdn\": \"sfnetworking.chinaeast.cloudapp.chinacloudapi.cn\"\r                            }\r ```\r \r ### <a name=\"service-fabric-template\"></a>Service Fabric 模板\r \r 本文中的示例使用 Service Fabric template.json。 在创建群集之前，可以使用标准门户向导下载该模板。 也可以使用[模板库](https://azure.microsoft.com/documentation/templates/?term=service+fabric)中的模板之一，例如[五节点 Service Fabric 群集](https://azure.microsoft.com/resources/templates/service-fabric-secure-cluster-5-node-1-nodetype/)。\r \r <a name=\"existingvnet\"></a>\r ## <a name=\"existing-virtual-network-or-subnet\"></a>现有虚拟网络或子网\r \r 1. 将子网参数更改为现有子网的名称，并添加两个新参数以引用现有的虚拟网络：\r \r     ```\r     \"subnet0Name\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"default\"\r         },\r         \"existingVNetRGName\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"ExistingRG\"\r         },\r \r         \"existingVNetName\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"ExistingRG-vnet\"\r         },\r         /*\r         \"subnet0Name\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"Subnet-0\"\r         },\r         \"subnet0Prefix\": {\r             \"type\": \"string\",\r             \"defaultValue\": \"10.0.0.0/24\"\r         },*/\r     ```\r \r 2. 将 `vnetID` 变量更改为指向现有虚拟网络：\r \r     ```\r     /*old \"vnetID\": \"[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]\",*/\r     \"vnetID\": \"[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('existingVNetRGName'), '/providers/Microsoft.Network/virtualNetworks/', parameters('existingVNetName'))]\",\r     ```\r \r 3. 从资源中删除 `Microsoft.Network/virtualNetworks`，使 Azure 不会创建新的虚拟网络：\r \r     ```\r     /*{\r     \"apiVersion\": \"[variables('vNetApiVersion')]\",\r     \"type\": \"Microsoft.Network/virtualNetworks\",\r     \"name\": \"[parameters('virtualNetworkName')]\",\r     \"location\": \"[parameters('computeLocation')]\",\r     \"properities\": {\r         \"addressSpace\": {\r             \"addressPrefixes\": [\r                 \"[parameters('addressPrefix')]\"\r             ]\r         },\r         \"subnets\": [\r             {\r                 \"name\": \"[parameters('subnet0Name')]\",\r                 \"properties\": {\r                     \"addressPrefix\": \"[parameters('subnet0Prefix')]\"\r                 }\r             }\r         ]\r     },\r     \"tags\": {\r         \"resourceType\": \"Service Fabric\",\r         \"clusterName\": \"[parameters('clusterName')]\"\r     }\r     },*/\r     ```\r \r 4. 从 `Microsoft.Compute/virtualMachineScaleSets` 的 `dependsOn` 属性中注释掉虚拟网络，避免非得要创建新的虚拟网络：\r \r     ```\r     \"apiVersion\": \"[variables('vmssApiVersion')]\",\r     \"type\": \"Microsoft.Computer/virtualMachineScaleSets\",\r     \"name\": \"[parameters('vmNodeType0Name')]\",\r     \"location\": \"[parameters('computeLocation')]\",\r     \"dependsOn\": [\r         /*\"[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]\",\r         */\r         \"[Concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[0])]\",\r \r     ```\r \r 5. 部署模板：\r \r     ```powershell\r     New-AzureRmResourceGroup -Name sfnetworkingexistingvnet -Location chinaeast\r     New-AzureRmResourceGroupDeployment -Name deployment -ResourceGroupName sfnetworkingexistingvnet -TemplateFile C:\\SFSamples\\Final\\template\\_existingvnet.json\r     ```\r \r     部署后，虚拟网络应包含新的规模集 VM。 虚拟机规模集节点类型应显示现有虚拟网络和子网。 还可以使用远程桌面协议 (RDP) 访问虚拟网络中已有的 VM，并对新规模集 VM 执行 ping 操作：\r \r     ```\r     C:>\\Users\\users>ping 10.0.0.5 -n 1\r     C:>\\Users\\users>ping NOde1000000 -n 1\r     ```\r \r 请参阅[并非特定于 Service Fabric 的另一个示例](https://github.com/gbowerman/azure-myriad/tree/master/existing-vnet)。\r \r <a name=\"staticpublicip\"></a>\r ## <a name=\"static-public-ip-address\"></a>静态公共 IP 地址\r \r 1. 添加现有静态 IP 资源组名称、名称和完全限定的域名 (FQDN) 的参数：\r \r     ```\r     \"existingStaticIPResourceGroup\": {\r                 \"type\": \"string\"\r             },\r             \"existingStaticIPName\": {\r                 \"type\": \"string\"\r             },\r             \"existingStaticIPDnsFQDN\": {\r                 \"type\": \"string\"\r     }\r     ```\r \r 2. 删除 `dnsName` 参数。 （静态 IP 已有名称。）\r \r     ```\r     /*\r     \"dnsName\": {\r         \"type\": \"string\"\r     },\r     */\r     ```\r \r 3. 添加一个变量来引用现有的静态 IP 地址：\r \r     ```\r     \"existingStaticIP\": \"[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('existingStaticIPResourceGroup'), '/providers/Microsoft.Network/publicIPAddresses/', parameters('existingStaticIPName'))]\",\r     ```\r \r 4. 从资源中删除 `Microsoft.Network/publicIPAddresses`，使 Azure 不会创建新的 IP 地址：\r \r     ```\r     /*\r     {\r         \"apiVersion\": \"[variables('publicIPApiVersion')]\",\r         \"type\": \"Microsoft.Network/publicIPAddresses\",\r         \"name\": \"[concat(parameters('lbIPName'),)'-', '0')]\",\r         \"location\": \"[parameters('computeLocation')]\",\r         \"properties\": {\r             \"dnsSettings\": {\r                 \"domainNameLabel\": \"[parameters('dnsName')]\"\r             },\r             \"publicIPAllocationMethod\": \"Dynamic\"        \r         },\r         \"tags\": {\r             \"resourceType\": \"Service Fabric\",\r             \"clusterName\": \"[parameters('clusterName')]\"\r         }\r     }, */\r     ```\r \r 5. 从 `Microsoft.Network/loadBalancers` 的 `dependsOn` 属性中注释掉 IP 地址，避免非得要创建新的 IP 地址：\r \r     ```\r     \"apiVersion\": \"[variables('lbIPApiVersion')]\",\r     \"type\": \"Microsoft.Network/loadBalancers\",\r     \"name\": \"[concat('LB', '-', parameters('clusterName'), '-', parameters('vmNodeType0Name'))]\",\r     \"location\": \"[parameters('computeLocation')]\",\r     /*\r     \"dependsOn\": [\r         \"[concat('Microsoft.Network/publicIPAddresses/', concat(parameters('lbIPName'), '-', '0'))]\"\r     ], */\r     \"properties\": {\r     ```\r \r 6. 在 `Microsoft.Network/loadBalancers` 资源中，将 `frontendIPConfigurations` 的 `publicIPAddress` 元素更改为引用现有的静态 IP 地址而不是新建的 IP 地址：\r \r     ```\r     \"frontendIPConfigurations\": [\r             {\r                 \"name\": \"LoadBalancerIPConfig\",\r                 \"properties\": {\r                     \"publicIPAddress\": {\r                         /*\"id\": \"[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('lbIPName'),'-','0'))]\"*/\r                         \"id\": \"[variables('existingStaticIP')]\"\r                     }\r                 }\r             }\r         ],\r     ```\r \r 7. 在 `Microsoft.ServiceFabric/clusters` 资源中，将 `managementEndpoint` 更改为静态 IP 地址的 DNS FQDN。 如果使用安全群集，请确保将 *http://* 更改为 *https://*。 （请注意，此步骤仅适用于 Service Fabric 群集。 如果使用虚拟机规模集，请跳过此步骤。）\r \r     ```\r     \"fabricSettings\": [],\r     /*\"managementEndpoint\": \"[concat('http://',reference(concat(parameters('lbIPName'),'-','0')).dnsSettings.fqdn,':',parameters('nt0fabricHttpGatewayPort'))]\",*/\r     \"managementEndpoint\": \"[concat('http://',parameters('existingStaticIPDnsFQDN'),':',parameters('nt0fabricHttpGatewayPort'))]\",\r     ```\r \r 8. 部署模板：\r \r     ```powershell\r     New-AzureRmResourceGroup -Name sfnetworkingstaticip -Location chinaeast\r \r     $staticip = Get-AzureRmPublicIpAddress -Name staticIP1 -ResourceGroupName ExistingRG\r \r     $staticip\r \r     New-AzureRmResourceGroupDeployment -Name deployment -ResourceGroupName sfnetworkingstaticip -TemplateFile C:\\SFSamples\\Final\\template\\_staticip.json -existingStaticIPResourceGroup $staticip.ResourceGroupName -existingStaticIPName $staticip.Name -existingStaticIPDnsFQDN $staticip.DnsSettings.Fqdn\r     ```\r \r 部署后，可以看到负载均衡器已绑定到其他资源组中的公共静态 IP 地址。 Service Fabric 客户端连接终结点和 [Service Fabric Explorer](service-fabric-visualizing-your-cluster.md) 终结点指向静态 IP 地址的 DNS FQDN。\r \r <a name=\"internallb\"></a>\r ## <a name=\"internal-only-load-balancer\"></a>仅限内部的负载均衡器\r \r 本方案用仅限内部的负载均衡器替代默认 Service Fabric 模板中的外部负载均衡器。 有关对 Azure 门户和 Service Fabric 资源提供程序的影响，请参阅前面部分。\r \r 1. 删除 `dnsName` 参数。 （不需要此参数。）\r \r     ```\r     /*\r     \"dnsName\": {\r         \"type\": \"string\"\r     },\r     */\r     ```\r \r 2. （可选）如果使用静态分配方法，可添加静态 IP 地址参数。 如果使用动态分配方法，则无需执行此步骤。\r \r     ```\r     \"internalLBAddress\": {\r         \"type\": \"string\",\r         \"defaultValue\": \"10.0.0.250\"\r     }\r     ```\r \r 3. 从资源中删除 `Microsoft.Network/publicIPAddresses`，使 Azure 不会创建新的 IP 地址：\r \r     ```\r     /*\r     {\r         \"apiVersion\": \"[variables('publicIPApiVersion')]\",\r         \"type\": \"Microsoft.Network/publicIPAddresses\",\r         \"name\": \"[concat(parameters('lbIPName'),)'-', '0')]\",\r         \"location\": \"[parameters('computeLocation')]\",\r         \"properties\": {\r             \"dnsSettings\": {\r                 \"domainNameLabel\": \"[parameters('dnsName')]\"\r             },\r             \"publicIPAllocationMethod\": \"Dynamic\"        \r         },\r         \"tags\": {\r             \"resourceType\": \"Service Fabric\",\r             \"clusterName\": \"[parameters('clusterName')]\"\r         }\r     }, */\r     ```\r \r 4. 删除 `Microsoft.Network/loadBalancers` 的 IP 地址 `dependsOn` 属性，避免非得要创建新的 IP 地址。 添加虚拟网络 `dependsOn` 属性，因为负载均衡器现在依赖于虚拟网络中的子网：\r \r     ```\r     \"apiVersion\": \"[variables('lbApiVersion')]\",\r     \"type\": \"Microsoft.Network/loadBalancers\",\r     \"name\": \"[concat('LB','-', parameters('clusterName'),'-',parameters('vmNodeType0Name'))]\",\r     \"location\": \"[parameters('computeLocation')]\",\r     \"dependsOn\": [\r         /*\"[concat('Microsoft.Network/publicIPAddresses/',concat(parameters('lbIPName'),'-','0'))]\"*/\r         \"[concat('Microsoft.Network/virtualNetworks/',parameters('virtualNetworkName'))]\"\r     ],\r     ```\r \r 5. 将负载均衡器的 `frontendIPConfigurations` 设置从使用 `publicIPAddress` 更改为使用子网和 `privateIPAddress`。 `privateIPAddress` 使用预定义的静态内部 IP 地址。 要使用动态 IP 地址，请删除 `privateIPAddress` 元素，然后将 `privateIPAllocationMethod` 更改为 **Dynamic**。\r \r     ```\r     \"frontendIPConfigurations\": [\r             {\r                 \"name\": \"LoadBalancerIPConfig\",\r                 \"properties\": {\r                     /*\r                     \"publicIPAddress\": {\r                         \"id\": \"[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('lbIPName'),'-','0'))]\"\r                     } */\r                     \"subnet\" :{\r                         \"id\": \"[variables('subnet0Ref')]\"\r                     },\r                     \"privateIPAddress\": \"[parameters('internalLBAddress')]\",\r                     \"privateIPAllocationMethod\": \"Static\"\r                 }\r             }\r         ],\r     ```\r \r 6. 在 `Microsoft.ServiceFabric/clusters` 资源中，将 `managementEndpoint` 更改为指向内部负载均衡器地址。 如果使用安全群集，请确保将 *http://* 更改为 *https://*。 （请注意，此步骤仅适用于 Service Fabric 群集。 如果使用虚拟机规模集，请跳过此步骤。）\r \r     ```\r     \"fabricSettings\": [],\r     /*\"managementEndpoint\": \"[concat('http://',reference(concat(parameters('lbIPName'),'-','0')).dnsSettings.fqdn,':',parameters('nt0fabricHttpGatewayPort'))]\",*/\r     \"managementEndpoint\": \"[concat('http://',reference(variables('lbID0')).frontEndIPConfigurations[0].properties.privateIPAddress,':',parameters('nt0fabricHttpGatewayPort'))]\",\r     ```\r \r 7. 部署模板：\r \r     ```powershell\r     New-AzureRmResourceGroup -Name sfnetworkinginternallb -Location chinaeast\r \r     New-AzureRmResourceGroupDeployment -Name deployment -ResourceGroupName sfnetworkinginternallb -TemplateFile C:\\SFSamples\\Final\\template\\_internalonlyLB.json\r     ```\r \r 部署后，负载均衡器使用专用静态 IP 地址 10.0.0.250。 如果同一虚拟网络中还有其他计算机，可以转到内部 [Service Fabric Explorer](service-fabric-visualizing-your-cluster.md) 终结点。 可以看到，该终结点已连接到负载均衡器后面的某个节点。\r \r <a name=\"internalexternallb\"></a>\r ## <a name=\"internal-and-external-load-balancer\"></a>内部和外部负载均衡器\r \r 本方案从现有的单节点类型外部负载均衡器着手，添加一个相同节点类型的内部负载均衡器。 附加到后端地址池的后端端口只能分配给单个负载均衡器。 选择哪个负载均衡器使用应用程序端口，哪个负载均衡器使用管理终结点（端口 19000 和 19080）。 如果将管理终结点放在内部负载均衡器上，请记住前文所述的 Service Fabric 资源提供程序限制。 本示例将管理终结点保留在外部负载均衡器上。 还需要添加一个端口号为 80 的应用程序端口，并将其放在内部负载均衡器上。\r \r 在双节点类型的群集中，一个节点类型位于外部负载均衡器上。 另一个节点类型位于内部负载均衡器上。 要使用双节点类型的群集，请在门户创建的双节点类型模板（附带两个负载均衡器）中，将第二个负载均衡器切换为内部负载均衡器。 有关详细信息，请参阅[仅限内部的负载均衡器](#internallb)部分。\r \r 1. 添加静态内部负载均衡器 IP 地址参数。 （有关使用动态 IP 地址的说明，请参阅本文的前面部分。）\r \r     ```\r     \"internalLBAddress\": {\r         \"type\": \"string\",\r         \"defaultValue\": \"10.0.0.250\"\r     }\r     ```\r \r 2. 添加应用程序端口 80 参数。\r \r 3. 若要添加现有网络变量的内部版本，请复制并粘贴这些变量，并在名称中添加“-Int”：\r \r     ```\r     /* Add internal load balancer networking variables */\r             \"lbID0-Int\": \"[resourceId('Microsoft.Network/loadBalancers', concat('LB','-', parameters('clusterName'),'-',parameters('vmNodeType0Name'), '-Internal'))]\",\r             \"lbIPConfig0-Int\": \"[concat(variables('lbID0-Int'),'/frontendIPConfigurations/LoadBalancerIPConfig')]\",\r             \"lbPoolID0-Int\": \"[concat(variables('lbID0-Int'),'/backendAddressPools/LoadBalancerBEAddressPool')]\",\r             \"lbProbeID0-Int\": \"[concat(variables('lbID0-Int'),'/probes/FabricGatewayProbe')]\",\r             \"lbHttpProbeID0-Int\": \"[concat(variables('lbID0-Int'),'/probes/FabricHttpGatewayProbe')]\",\r             \"lbNatPoolID0-Int\": \"[concat(variables('lbID0-Int'),'/inboundNatPools/LoadBalancerBEAddressNatPool')]\",\r             /* Internal load balancer networking variables end */\r     ```\r \r 4. 如果从使用应用程序端口 80、由门户生成的模板开始，则默认门户模板会在外部负载均衡器上添加 AppPort1（端口 80）。 在此情况下，请将 AppPort1 从外部负载均衡器 `loadBalancingRules` 和探测中删除，以便将其添加到内部负载均衡器中：\r \r     ```\r     \"loadBalancingRules\": [\r         {\r             \"name\": \"LBHttpRule\",\r             \"properties\":{\r                 \"backendAddressPool\": {\r                     \"id\": \"[variables('lbPoolID0')]\"\r                 },\r                 \"backendPort\": \"[parameters('nt0fabricHttpGatewayPort')]\",\r                 \"enableFloatingIP\": \"false\",\r                 \"frontendIPConfiguration\": {\r                     \"id\": \"[variables('lbIPConfig0')]\"            \r                 },\r                 \"frontendPort\": \"[parameters('nt0fabricHttpGatewayPort')]\",\r                 \"idleTimeoutInMinutes\": \"5\",\r                 \"probe\": {\r                     \"id\": \"[variables('lbHttpProbeID0')]\"\r                 },\r                 \"protocol\": \"tcp\"\r             }\r         } /* Remove AppPort1 from the external load balancer.\r         {\r             \"name\": \"AppPortLBRule1\",\r             \"properties\": {\r                 \"backendAddressPool\": {\r                     \"id\": \"[variables('lbPoolID0')]\"\r                 },\r                 \"backendPort\": \"[parameters('loadBalancedAppPort1')]\",\r                 \"enableFloatingIP\": \"false\",\r                 \"frontendIPConfiguration\": {\r                     \"id\": \"[variables('lbIPConfig0')]\"            \r                 },\r                 \"frontendPort\": \"[parameters('loadBalancedAppPort1')]\",\r                 \"idleTimeoutInMinutes\": \"5\",\r                 \"probe\": {\r                     \"id\": \"[concate(variables('lbID0'), '/probes/AppPortProbe1')]\"\r                 },\r                 \"protocol\": \"tcp\"\r             }\r         }*/\r \r     ],\r     \"probes\": [\r         {\r             \"name\": \"FabricGatewayProbe\",\r             \"properties\": {\r                 \"intervalInSeconds\": 5,\r                 \"numberOfProbes\": 2,\r                 \"port\": \"[parameters('nt0fabricTcpGatewayPort')]\",\r                 \"protocol\": \"tcp\"\r             }\r         },\r         {\r             \"name\": \"FabricHttpGatewayProbe\",\r             \"properties\": {\r                 \"intervalInSeconds\": 5,\r                 \"numberOfProbes\": 2,\r                 \"port\": \"[parameters('nt0fabricHttpGatewayPort')]\",\r                 \"protocol\": \"tcp\"\r             }\r         } /* Remove AppPort1 from the external load balancer.\r         {\r             \"name\": \"AppPortProbe1\",\r             \"properties\": {\r                 \"intervalInSeconds\": 5,\r                 \"numberOfProbes\": 2,\r                 \"port\": \"[parameters('loadBalancedAppPort1')]\",\r                 \"protocol\": \"tcp\"\r             }\r         } */\r \r     ],\r     \"inboundNatPools\": [\r     ```\r \r 5. 添加第二个 `Microsoft.Network/loadBalancers` 资源。 该资源与[仅限内部的负载均衡器](#internallb)部分中创建的内部负载均衡器类似，不过它使用的是“-Int”负载均衡器变量，并且仅实现应用程序端口 80。 这样做还会删除 `inboundNatPools`，以便将 RDP 终结点保留在公共负载均衡器上。 如果要将 RDP 放在内部负载均衡器上，请将 `inboundNatPools` 从外部负载均衡器移到此内部负载均衡器：\r \r     ```\r     /* Add a second load balancer, configured with a static privateIPAddress and the \"-Int\" load balancer variables. */\r     {\r         \"apiVersion\": \"[variables('lbApiVersion')]\",\r         \"type\": \"Microsoft.Network/loadBalancers\",\r         /* Add \"-Internal\" to the name. */\r         \"name\": \"[concat('LB','-', parameters('clusterName'),'-',parameters('vmNodeType0Name'), '-Internal')]\",\r         \"location\": \"[parameters('computeLocation')]\",\r         \"dependsOn\": [\r             /* Remove public IP dependsOn, add vnet dependsOn\r             \"[concat('Microsoft.Network/publicIPAddresses/',concat(parameters('lbIPName'),'-','0'))]\"\r             */\r             \"[concat('Microsoft.Network/virtualNetworks/',parameters('virtualNetworkName'))]\"\r         ],\r         \"properties\": {\r             \"frontendIPConfigurations\": [\r                 {\r                     \"name\": \"LoadBalancerIPConfig\",\r                     \"properties\": {\r                         /* Switch from Public to Private IP address\r                         */\r                         \"publicIPAddress\": {\r                             \"id\": \"[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('lbIPName'),'-','0'))]\"\r                         }\r                         */\r                         \"subnet\" :{\r                             \"id\": \"[variables('subnet0Ref')]\"\r                         },\r                         \"privateIPAddress\": \"[parameters('internalLBAddress')]\",\r                         \"privateIPAllocationMethod\": \"Static\"\r                     }\r                 }\r             ],\r             \"backendAddressPools\": [\r                 {\r                     \"name\": \"LoadBalancerBEAddressPool\",\r                     \"properties\": {}\r                 }\r             ],\r             \"loadBalancingRules\": [\r                 /* Add the AppPort rule. Be sure to reference the \"-Int\" versions of backendAddressPool, frontendIPConfiguration, and the probe variables. */\r                 {\r                     \"name\": \"AppPortLBRule1\",\r                     \"properties\": {\r                         \"backendAddressPool\": {\r                             \"id\": \"[variables('lbPoolID0-Int')]\"\r                         },\r                         \"backendPort\": \"[parameters('loadBalancedAppPort1')]\",\r                         \"enableFloatingIP\": \"false\",\r                         \"frontendIPConfiguration\": {\r                             \"id\": \"[variables('lbIPConfig0-Int')]\"\r                         },\r                         \"frontendPort\": \"[parameters('loadBalancedAppPort1')]\",\r                         \"idleTimeoutInMinutes\": \"5\",\r                         \"probe\": {\r                             \"id\": \"[concat(variables('lbID0-Int'),'/probes/AppPortProbe1')]\"\r                         },\r                         \"protocol\": \"tcp\"\r                     }\r                 }\r             ],\r             \"probes\": [\r             /* Add the probe for the app port. */\r             {\r                     \"name\": \"AppPortProbe1\",\r                     \"properties\": {\r                         \"intervalInSeconds\": 5,\r                         \"numberOfProbes\": 2,\r                         \"port\": \"[parameters('loadBalancedAppPort1')]\",\r                         \"protocol\": \"tcp\"\r                     }\r                 }\r             ],\r             \"inboundNatPools\": [\r             ]\r         },\r         \"tags\": {\r             \"resourceType\": \"Service Fabric\",\r             \"clusterName\": \"[parameters('clusterName')]\"\r         }\r     },\r     ```\r \r 6. 在 `Microsoft.Compute/virtualMachineScaleSets` 资源的 `networkProfile` 中，添加内部后端地址池：\r \r     ```\r     \"loadBalancerBackendAddressPools\": [\r                                                         {\r                                                             \"id\": \"[variables('lbPoolID0')]\"\r                                                         },\r                                                         {\r                                                             /* Add internal BE pool */\r                                                             \"id\": \"[variables('lbPoolID0-Int')]\"\r                                                         }\r     ],\r     ```\r \r 7. 部署模板：\r \r     ```powershell\r     New-AzureRmResourceGroup -Name sfnetworkinginternalexternallb -Location chinaeast\r \r     New-AzureRmResourceGroupDeployment -Name deployment -ResourceGroupName sfnetworkinginternalexternallb -TemplateFile C:\\SFSamples\\Final\\template\\_internalexternalLB.json\r     ```\r \r 部署后，可在资源组中看到两个负载均衡器。 如果浏览这两个负载均衡器，可以看到公共 IP 地址和分配给公共 IP 地址的管理终结点（端口 19000 和 19080）。 此外，还会看到静态内部 IP 地址和分配给内部负载均衡器的应用程序终结点（端口 80）。 这两个负载均衡器使用同一个虚拟机规模集后端池。\r \r ## <a name=\"next-steps\"></a>后续步骤\r [创建群集](service-fabric-cluster-creation-via-arm.md)\r \r <!--Update_Description: wording update-->\r "}