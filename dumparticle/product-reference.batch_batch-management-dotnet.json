{"Title":"使用适用于 .NET 的客户端库管理 Batch 帐户资源 - Azure","Description":"使用 Batch Management .NET 库创建、删除和修改 Azure Batch 帐户资源。","Content":"# <a name=\"manage-batch-accounts-and-quotas-with-the-batch-management-client-library-for-net\"></a>通过用于 .NET 的 Batch Management 客户端库管理 Batch 帐户和配额\r \r > [!div class=\"op_single_selector\"]\r > * [Azure 门户](batch-account-create-portal.md)\r > * [Batch Management .NET](batch-management-dotnet.md)\r > \r > \r \r 可以使用 [Batch Management .NET][api_mgmt_net] 库来自动化 Batch 帐户的创建、删除、密钥管理和配额发现，从而降低 Azure Batch 应用程序的维护开销。\r \r - 在任何区域中**创建和删除 Batch 帐户**。 例如，如果你是一家独立软件供应商 (ISV)，现在要为每个分配了不同计费 Batch 帐户的客户提供服务，则你可以将帐户创建和删除功能添加到客户门户中。\r - 以编程方式为任何 Batch 帐户**检索和重新生成帐户密钥**。 这样可确保遵循安全策略，以便定期滚动更新帐户密钥或令其过期。 当各种不同的 Azure 区域中有多个 Batch 帐户时，将此滚动更新过程自动化会提高解决方案的效率。\r - **检查帐户配额** 并采取试错猜测，确定哪些 Batch 帐户存在哪些限制。 在启动作业、创建池或添加计算节点之前检查帐户配额可以主动调整创建计算资源的位置或时机。 可在帐户中分配其他资源之前，确定哪些帐户需要增加配额。\r - 通过在同一应用程序中使用 Batch Management .NET、[Azure Active Directory][aad_about] 和 [Azure Resource Manager][resman_overview]，用户可以**结合其他 Azure 服务的功能**获得全功能管理体验。 使用这些功能及其 API 可以提供顺畅的身份验证体验、创建和删除资源组以及上述功能，以获取端到端管理解决方案。\r \r > [!NOTE]\r > 尽管本文着重介绍以编程方式管理 Batch 帐户、密钥和配额，但你也可以使用 [Azure 门户][azure_portal]执行其中的许多活动。 有关详细信息，请参阅[使用 Azure 门户创建 Azure Batch 帐户](batch-account-create-portal.md)以及 [Azure Batch 服务的配额和限制](batch-quota-limit.md)。\r > \r > \r \r ## <a name=\"create-and-delete-batch-accounts\"></a>创建和删除 Batch 帐户\r 如上所述，Batch Management API 的主要功能之一就是在 Azure 区域中创建和删除 Batch 帐户。 为此，请使用 [BatchManagementClient.Account.CreateAsync][net_create] 和 [DeleteAsync][net_delete]，或其同步等效命令。\r \r 以下代码段将创建一个帐户，从 Batch 服务获取新建的帐户，然后将它删除。 在此代码片段以及本文的其他代码片段中，`batchManagementClient` 是完全初始化的 [BatchManagementClient][net_mgmt_client] 实例。\r \r ```csharp\r // Create a new Batch account\r await batchManagementClient.Account.CreateAsync(\"MyResourceGroup\",\r     \"mynewaccount\",\r     new BatchAccountCreateParameters() { Location = \"China North\" });\r \r // Get the new account from the Batch service\r AccountResource account = await batchManagementClient.Account.GetAsync(\r     \"MyResourceGroup\",\r     \"mynewaccount\");\r \r // Delete the account\r await batchManagementClient.Account.DeleteAsync(\"MyResourceGroup\", account.Name);\r ```\r \r > [!NOTE]\r > 使用 Batch Management .NET 库及其 BatchManagementClient 类的应用程序需有**服务管理员**或**共同管理员**访问权限才能使用拥有要管理的 Batch 帐户的订阅。 有关详细信息，请参阅 Azure Active Directory 部分和 [AccountManagement][acct_mgmt_sample] 代码示例。\r > \r > \r \r ## <a name=\"retrieve-and-regenerate-account-keys\"></a>检索和重新生成帐户密钥\r 使用 [ListKeysAsync][net_list_keys]从订阅中的任何 Batch 帐户获取主要和辅助帐户密钥。 可以使用 [RegenerateKeyAsync][net_regenerate_keys] 重新生成这些密钥。\r \r ```csharp\r // Get and print the primary and secondary keys\r BatchAccountListKeyResult accountKeys =\r     await batchManagementClient.Account.ListKeysAsync(\r         \"MyResourceGroup\",\r         \"mybatchaccount\");\r Console.WriteLine(\"Primary key:   {0}\", accountKeys.Primary);\r Console.WriteLine(\"Secondary key: {0}\", accountKeys.Secondary);\r \r // Regenerate the primary key\r BatchAccountRegenerateKeyResponse newKeys =\r     await batchManagementClient.Account.RegenerateKeyAsync(\r         \"MyResourceGroup\",\r         \"mybatchaccount\",\r         new BatchAccountRegenerateKeyParameters() {\r             KeyName = AccountKeyType.Primary\r             });\r ```\r \r > [!TIP]\r > 可以为管理应用程序创建简化的连接工作流。 首先，获取想要使用 [ListKeysAsync][net_list_keys] 管理的批处理帐户的帐户密钥。 然后在初始化 Batch .NET 库的 [BatchSharedKeyCredentials][net_sharedkeycred] 类（初始化 [BatchClient][net_batch_client] 时使用）时使用此密钥。\r > \r > \r \r ## <a name=\"check-azure-subscription-and-batch-account-quotas\"></a>检查 Azure 订阅和 Batch 帐户配额\r Azure 订阅和类似于 Batch 的各个 Azure 服务均有默认配额，用于限制其中特定实体的数目。 有关 Batch 服务的默认配额，请参阅 [Azure Batch 服务的配额和限制](batch-quota-limit.md)。 使用 Batch 管理 .NET 库可以在应用程序中检查这些配额。 这样，你就可以在添加帐户或计算资源（如池和计算节点）之前做出分配决策。\r \r ### <a name=\"check-an-azure-subscription-for-batch-account-quotas\"></a>检查 Azure 订阅和 Batch 帐户配额\r 在区域中创建 Batch 帐户之前，可以检查 Azure 订阅，看是否能将帐户添加到该区域中。\r \r 在以下的代码片段中，我们先使用 [BatchManagementClient.Account.ListAsync][net_mgmt_listaccounts] 来获取订阅中所有 Batch 帐户的集合。 获取此集合后，可以确定目标区域有多少个帐户。 然后使用 [BatchManagementClient.Subscriptions][net_mgmt_subscriptions] 来获取批处理帐户配额，并确定可以在该区域中创建多少个帐户（如果有）。\r \r ```csharp\r // Get a collection of all Batch accounts within the subscription\r BatchAccountListResponse listResponse =\r         await batchManagementClient.Account.ListAsync(new AccountListParameters());\r IList<AccountResource> accounts = listResponse.Accounts;\r Console.WriteLine(\"Total number of Batch accounts under subscription id {0}:  {1}\",\r     creds.SubscriptionId,\r     accounts.Count);\r \r // Get a count of all accounts within the target region\r string region = \"chinanorth\";\r int accountsInRegion = accounts.Count(o => o.Location == region);\r \r // Get the account quota for the specified region\r SubscriptionQuotasGetResponse quotaResponse = await batchManagementClient.Subscriptions.GetSubscriptionQuotasAsync(region);\r Console.WriteLine(\"Account quota for {0} region: {1}\", region, quotaResponse.AccountQuota);\r \r // Determine how many accounts can be created in the target region\r Console.WriteLine(\"Accounts in {0}: {1}\", region, accountsInRegion);\r Console.WriteLine(\"You can create {0} accounts in the {1} region.\", quotaResponse.AccountQuota - accountsInRegion, region);\r ```\r \r 在上面的代码片段中，`creds` 是 [TokenCloudCredentials][azure_tokencreds] 的实例。 若要查看创建此对象的示例，请参阅 GitHub 上的 [AccountManagement][acct_mgmt_sample] 代码示例。\r \r ### <a name=\"check-a-batch-account-for-compute-resource-quotas\"></a>检查 Batch 帐户的计算资源配额\r 增加 Batch 解决方案中的计算资源之前，可以通过检查来确保需要分配的资源不超过帐户的配额。 在以下代码片段中，将输出名为 `mybatchaccount`的 Batch 帐户的配额信息。 在用户自己的应用程序中，可以使用此类信息来确定帐户是否可以处理要创建的其他资源。\r \r ```csharp\r // First obtain the Batch account\r BatchAccountGetResponse getResponse =\r     await batchManagementClient.Account.GetAsync(\"MyResourceGroup\", \"mybatchaccount\");\r AccountResource account = getResponse.Resource;\r \r // Now print the compute resource quotas for the account\r Console.WriteLine(\"Core quota: {0}\", account.Properties.CoreQuota);\r Console.WriteLine(\"Pool quota: {0}\", account.Properties.PoolQuota);\r Console.WriteLine(\"Active job and job schedule quota: {0}\", account.Properties.ActiveJobAndJobScheduleQuota);\r ```\r \r > [!IMPORTANT]\r > 尽管 Azure 订阅和服务有默认配额，但许多限制都可以通过在 [Azure 门户][azure_portal]中提出请求来提高。 例如，可以参阅 [Azure Batch 服务的配额和限制](batch-quota-limit.md)以获取有关提高 Batch 帐户配额的说明。\r > \r > \r \r ## <a name=\"use-azure-ad-with-batch-management-net\"></a>将 Azure AD 和 Batch 管理 .NET 配合使用\r \r Batch 管理 .NET 库是 Azure 资源提供程序客户端，与 [Azure Resource Manager][resman_overview] 配合使用以编程方式管理帐户资源。 Azure AD 需要对通过任何 Azure 资源提供程序客户端（包括 Batch 管理 .NET 库）和 [Azure Resource Manager][resman_overview] 发出的请求进行身份验证。 \r \r ## GitHub 上的示例项目 <a name=\"sample\"></a>\r \r 查看 GitHub 上的 [AccountManagment][acct_mgmt_sample] 示例项目，了解 Batch 管理 .NET 的操作实践。 AccountManagment 示例应用程序演示了以下操作：\r \r 1. 使用 [ADAL][aad_adal] 从 Azure AD 获取安全令牌。 如果用户尚未登录，系统将提示其输入 Azure 凭据。\r 2. 使用从 Azure AD 获取的安全令牌创建 [SubscriptionClient][resman_subclient]，以便在 Azure 中查询与帐户关联的订阅列表。 如果列表包含多个订阅，则用户可从中选择一个订阅。\r 3. 获取与所选订阅关联的凭据。\r 4. 使用凭据创建 [ResourceManagementClient][resman_client] 对象。\r 5. 使用 [ResourceManagementClient][resman_client] 对象创建资源组。\r 6. 使用 [BatchManagementClient][net_mgmt_client] 对象执行多个 Batch 帐户操作：\r    - 在新资源组中创建 Batch 帐户。\r    - 从 Batch 服务获取新建的帐户。\r    - 输出新帐户的帐户密钥。\r    - 重新生成帐户的新主密钥。\r    - 输出帐户的配额信息。\r    - 输出订阅的配额信息。\r    - 输出订阅中的所有帐户。\r    - 删除新建的帐户。\r 7. 删除该资源组。\r \r 删除新建的 Batch 帐户和资源组之前，可以在 [Azure 门户][azure_portal]中查看它们：\r \r [aad_about]:../active-directory/active-directory-whatis.md\r [aad_adal]:../active-directory/develop/active-directory-authentication-libraries.md\r [aad_auth_scenarios]:../active-directory/develop/active-directory-authentication-scenarios.md\r [acct_mgmt_sample]: https://github.com/Azure/azure-batch-samples/tree/master/CSharp/AccountManagement\r [api_net]: http://msdn.microsoft.com/library/azure/mt348682.aspx\r [api_mgmt_net]: https://msdn.microsoft.com/library/azure/mt463120.aspx\r [azure_portal]: http://portal.azure.cn\r [azure_storage]: /storage/\r [azure_tokencreds]: https://msdn.microsoft.com/library/azure/microsoft.windowsazure.tokencloudcredentials.aspx\r [batch_explorer_project]: https://github.com/Azure/azure-batch-samples/tree/master/CSharp/BatchExplorer\r [net_batch_client]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.batchclient.aspx\r [net_list_keys]: https://msdn.microsoft.com/library/azure/microsoft.azure.management.batch.accountoperationsextensions.listkeysasync.aspx\r [net_create]: https://msdn.microsoft.com/library/azure/microsoft.azure.management.batch.accountoperationsextensions.createasync.aspx\r [net_delete]: https://msdn.microsoft.com/library/azure/microsoft.azure.management.batch.accountoperationsextensions.deleteasync.aspx\r [net_regenerate_keys]: https://msdn.microsoft.com/library/azure/microsoft.azure.management.batch.accountoperationsextensions.regeneratekeyasync.aspx\r [net_sharedkeycred]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.auth.batchsharedkeycredentials.aspx\r [net_mgmt_client]: https://msdn.microsoft.com/library/azure/microsoft.azure.management.batch.batchmanagementclient.aspx\r [net_mgmt_subscriptions]: https://msdn.microsoft.com/library/azure/microsoft.azure.management.batch.batchmanagementclient.subscriptions.aspx\r [net_mgmt_listaccounts]: https://msdn.microsoft.com/library/azure/microsoft.azure.management.batch.iaccountoperations.listasync.aspx\r [resman_client]: https://msdn.microsoft.com/library/azure/microsoft.azure.management.resources.resourcemanagementclient.aspx\r [resman_subclient]: https://msdn.microsoft.com/library/azure/microsoft.azure.subscriptions.subscriptionclient.aspx\r [resman_overview]: ../azure-resource-manager/resource-group-overview.md\r \r [1]: ./media/batch-management-dotnet/portal-01.png\r [2]: ./media/batch-management-dotnet/portal-02.png\r [3]: ./media/batch-management-dotnet/portal-03.png\r \r "}