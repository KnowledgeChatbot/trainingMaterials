{"Title":"为高级 Azure Redis 缓存配置虚拟网络","Description":"了解如何为高级层 Azure Redis 缓存实例创建和管理虚拟网络支持","Content":"# <a name=\"how-to-configure-virtual-network-support-for-a-premium-azure-redis-cache\"></a>如何为高级 Azure Redis 缓存配置虚拟网络支持\r Azure Redis 缓存具有不同的缓存产品（包括群集、持久性和虚拟网络支持等高级层功能），使缓存大小和功能的选择更加灵活。 VNet 是云中的专用网络。 为 Azure Redis 缓存实例配置了 VNet 后，该实例不可公开寻址，而只能从 VNet 中的虚拟机和应用程序进行访问。 本文说明如何为高级 Azure Redis 缓存实例配置虚拟网络支持。\r \r > [!NOTE]\r > Azure Redis 缓存同时支持经典 VNet 和 Resource Manager VNet。\r > \r > \r \r 有关其他高级缓存功能的信息，请参阅 [Azure Redis 缓存高级层简介](cache-premium-tier-intro.md)。\r \r ## <a name=\"why-vnet\"></a>为何使用 VNet？\r [Azure 虚拟网络 (VNet)](/virtual-network/) 部署为 Azure Redis 缓存提供增强的安全性和隔离性，并提供子网、访问控制策略，以及用于进一步限制访问的其他功能。\r \r ## <a name=\"virtual-network-support\"></a>虚拟网络支持\r 在创建缓存期间，可在“新建 Redis 缓存”边栏选项卡中配置虚拟网络 (VNet) 支持。 \r \r [!INCLUDE [redis-cache-create](../../includes/redis-cache-premium-create.md)]\r \r 选择高级定价层后，可以通过选择与缓存相同的订阅和位置中的 VNet，来配置 Redis VNet 集成。 若要使用新 VNet，请先创建 VNet，方法是遵循[使用 Azure 门户创建虚拟网络](../virtual-network/virtual-networks-create-vnet-arm-pportal.md)或[使用 Azure 门户创建虚拟网络（经典）](../virtual-network/virtual-networks-create-vnet-classic-pportal.md)中的步骤，然后返回“新建 Redis 缓存”边栏选项卡来创建和配置高级缓存。\r \r 如果要为新缓存配置 VNet，请单击“新建 Redis 缓存”边栏选项卡上的“虚拟网络”，并从下拉列表中选择所需的 VNet。\r \r ![虚拟网络][redis-cache-vnet]\r \r 从“子网”下拉列表中选择所需的子网，并指定所需的“静态 IP 地址”。 如果使用经典 VNet，则“静态 IP 地址”字段是可选的；如果未指定任何地址，将从选定的子网中选择一个。\r \r > [!IMPORTANT]\r > 将 Azure Redis 缓存部署到Resource Manager VNet 时，缓存必须位于专用子网中，其中只能包含 Azure Redis 缓存实例，而不能包含其他任何资源。 如果尝试将 Azure Redis 缓存部署到包含其他资源的 Resource Manager VNet 子网，则部署会失败。\r > \r > \r \r ![虚拟网络][redis-cache-vnet-ip]\r \r > [!IMPORTANT]\r > Azure 会保留每个子网中的某些 IP 地址，但是这些地址不能使用。 子网的第一个和最后一个 IP 地址仅为协议一致性而保留，其他三个地址用于 Azure 服务。 有关详细信息，请参阅[使用这些子网中的 IP 地址是否有任何限制？](../virtual-network/virtual-networks-faq.md#are-there-any-restrictions-on-using-ip-addresses-within-these-subnets)\r > \r > 除了 Azure VNET 基础结构使用的 IP 地址以外，子网中的每个 Redis 实例为每个分片使用两个 IP 地址，为负载均衡器使用一个额外的 IP 地址。 非群集缓存被视为包含一个分片。\r > \r > \r \r 创建缓存之后，可以在“设置”中单击“虚拟网络”，查看 VNet 的配置。\r \r ![虚拟网络][redis-cache-vnet-info]\r \r 若要在使用 VNet 时连接到 Azure Redis 缓存实例，请在连接字符串中指定缓存主机名，如以下示例中所示：\r \r     private static Lazy<ConnectionMultiplexer> lazyConnection = new Lazy<ConnectionMultiplexer>(() =>\r     {\r         return ConnectionMultiplexer.Connect(\"contoso5premium.redis.cache.chinacloudapi.cn,abortConnect=false,ssl=true,password=password\");\r     });\r \r     public static ConnectionMultiplexer Connection\r     {\r         get\r         {\r             return lazyConnection.Value;\r         }\r     }\r \r ## <a name=\"azure-redis-cache-vnet-faq\"></a>Azure Redis 缓存 VNet 常见问题\r 以下列表包含有关 Azure Redis 缓存缩放的常见问题的解答。\r \r - [Azure Redis 缓存和 VNet 有哪些常见的错误配置问题？](#what-are-some-common-misconfiguration-issues-with-azure-redis-cache-and-vnets)\r - [如何验证缓存是否在 VNET 中正常工作？](#how-can-i-verify-that-my-cache-is-working-in-a-vnet)\r - [是否可以对标准或基本缓存使用 VNet？](#can-i-use-vnets-with-a-standard-or-basic-cache)\r - [为什么在某些子网中创建 Redis 缓存失败，而在其他子网中不会失败？](#why-does-creating-a-redis-cache-fail-in-some-subnets-but-not-others)\r - [子网地址空间的要求是什么？](#what-are-the-subnet-address-space-requirements)\r - [在 VNET 中托管缓存时，是否可以使用所有缓存功能？](#do-all-cache-features-work-when-hosting-a-cache-in-a-vnet)\r \r ## <a name=\"what-are-some-common-misconfiguration-issues-with-azure-redis-cache-and-vnets\"></a>Azure Redis 缓存和 VNet 有哪些常见的错误配置问题？\r 在 VNet 中托管 Azure Redis 缓存时，会使用下表中的端口。 \r \r >[!IMPORTANT]\r >如果下表中的端口受阻，缓存可能无法正常工作。 在 VNet 中使用 Azure Redis 缓存时，阻止这些端口中的一个或多个是最常见的错误配置问题。\r > \r > \r \r - [出站端口要求](#outbound-port-requirements)\r - [入站端口要求](#inbound-port-requirements)\r \r ### <a name=\"outbound-port-requirements\"></a>出站端口要求\r \r 出站端口有七个要求。\r \r - 如果需要，与 Internet 的所有出站连接都可以通过客户端的本地审核设备建立。\r - 3 个端口将流量路由到服务 Azure 存储和 Azure DNS 的 Azure 终结点。\r - 剩余端口范围，这些端口用于内部 Redis 子网通信。 内部 Redis 子网通信不需要子网 NSG 规则。\r \r | 端口 | 方向 | 传输协议 | 目的 | 本地 IP | 远程 IP |\r | --- | --- | --- | --- | --- | --- |\r | 80、443 |出站 |TCP |Azure 存储/PKI (Internet) 上的 Redis 依赖关系 | （Redis 子网） |* |\r | 53 |出站 |TCP/UDP |DNS (Internet/VNet) 上的 Redis 依赖关系 | （Redis 子网） |* |\r | 8443 |出站 |TCP |Redis 的内部通信 | （Redis 子网） | （Redis 子网） |\r | 10221-10231 |出站 |TCP |Redis 的内部通信 | （Redis 子网） | （Redis 子网） |\r | 20226 |出站 |TCP |Redis 的内部通信 | （Redis 子网） |（Redis 子网） |\r | 13000-13999 |出站 |TCP |Redis 的内部通信 | （Redis 子网） |（Redis 子网） |\r | 15000-15999 |出站 |TCP |Redis 的内部通信 | （Redis 子网） |（Redis 子网） |\r \r \r ### <a name=\"inbound-port-requirements\"></a>入站端口要求\r \r 入站端口范围有八个要求。 这些范围中的入站请求从同一 VNET 中托管的其他服务入站，或者是 Redis 子网通信的内部请求。\r \r | 端口 | 方向 | 传输协议 | 目的 | 本地 IP | 远程 IP |\r | --- | --- | --- | --- | --- | --- |\r | 6379、6380 |入站 |TCP |与 Redis 的客户端通信、Azure 负载均衡 | （Redis 子网） |虚拟网络、Azure 负载均衡器 |\r | 8443 |入站 |TCP |Redis 的内部通信 | （Redis 子网） |（Redis 子网） |\r | 8500 |入站 |TCP/UDP |Azure 负载均衡 | （Redis 子网） |Azure 负载均衡器 |\r | 10221-10231 |入站 |TCP |Redis 的内部通信 | （Redis 子网） |（Redis 子网）、Azure 负载均衡器 |\r | 13000-13999 |入站 |TCP |与 Redis 群集的客户端通信、Azure 负载均衡 | （Redis 子网） |虚拟网络、Azure 负载均衡器 |\r | 15000-15999 |入站 |TCP |与 Redis 群集的客户端通信、Azure 负载均衡 | （Redis 子网） |虚拟网络、Azure 负载均衡器 |\r | 16001 |入站 |TCP/UDP |Azure 负载均衡 | （Redis 子网） |Azure 负载均衡器 |\r | 20226 |入站 |TCP |Redis 的内部通信 | （Redis 子网） |（Redis 子网） |\r \r ### <a name=\"additional-vnet-network-connectivity-requirements\"></a>其他 VNET 网络连接要求\r \r 在虚拟网络中，可能一开始不符合 Azure Redis 缓存的网络连接要求。 在虚拟网络中使用时，Azure Redis 缓存需要以下所有项才能正常运行。\r \r - 与全球 Azure 存储终结点建立的出站网络连接。 这包括位于与 Azure Redis 缓存实例相同区域中的终结点，以及位于 **其他** Azure 区域的存储终结点。 Azure 存储终结点在以下 DNS 域之下解析：*table.core.chinacloudapi.cn*、*blob.core.chinacloudapi.cn*、*queue.core.chinacloudapi.cn* 和 *file.core.chinacloudapi.cn*。 \r - 与 *ocsp.msocsp.com*、*mscrl.microsoft.com* 和 *crl.microsoft.com* 建立的出站网络连接。需要此连接才能支持 SSL 功能。\r - 虚拟网络的 DNS 设置必须能够解析前面几点所提到的所有终结点和域。 确保已针对虚拟网络配置并维护有效的 DNS 基础结构即可符合这些 DNS 要求。\r - 与以下 Azure 监视终结点（在下列 DNS 域下进行解析）的出站网络连接：shoebox2-black.shoebox2.metrics.nsatc.net、north-prod2.prod2.metrics.nsatc.net、azglobal-black.azglobal.metrics.nsatc.net、shoebox2-red.shoebox2.metrics.nsatc.net、east-prod2.prod2.metrics.nsatc.net、azglobal-red.azglobal.metrics.nsatc.net。\r \r ### <a name=\"how-can-i-verify-that-my-cache-is-working-in-a-vnet\"></a>如何验证缓存是否在 VNET 中正常工作？\r \r >[!IMPORTANT]\r >连接到 VNET 中托管的 Azure Redis 缓存实例时，缓存客户端（包括所有测试应用程序或诊断 ping 工具）必须在同一 VNET 中。\r >\r >\r \r 根据上一部分中所述的要求配置端口后，可通过执行以下步骤来验证缓存是否正常工作。\r \r - [重新启动](cache-administration.md#reboot)所有缓存节点。 如果无法访问全部所需的缓存依赖项（如[入站端口要求](cache-how-to-premium-vnet.md#inbound-port-requirements)和[出站端口要求](cache-how-to-premium-vnet.md#outbound-port-requirements)中所述），则缓存无法成功重启。\r - 重启缓存节点后（由 Azure 门户中的缓存状态报告），可执行以下测试：\r   - 使用 [tcping](https://www.elifulkerson.com/projects/tcping.php)，从缓存所在的同一 VNET 中的某台计算机 ping 缓存终结点（使用端口 6380）。 例如：\r     \r     `tcping.exe contosocache.redis.cache.chinacloudapi.cn 6380`\r     \r     如果 `tcping` 工具报告端口已打开，则可以从该 VNET 中的客户端连接缓存。\r \r   - 另一种测试方法是创建一个与缓存连接的测试缓存客户端（可以是使用 StackExchange.Redis 的简单控制台应用程序），然后在缓存中添加和检索一些项。 将示例客户端应用程序安装到缓存所在的同一个 VNET 中的某个 VM，然后运行该应用程序来验证与缓存之间的连接。\r \r \r ### <a name=\"can-i-use-vnets-with-a-standard-or-basic-cache\"></a>是否可以对标准或基本缓存使用 VNet？\r 只能对高级缓存使用 VNet。\r \r ### <a name=\"why-does-creating-a-redis-cache-fail-in-some-subnets-but-not-others\"></a>为什么在某些子网中创建 Redis 缓存失败，而在其他子网中不会失败？\r 如果要将 Azure Redis 缓存部署到Resource Manager VNet，缓存必须位于不包含任何其他资源类型的专用子网中。 如果尝试将 Azure Redis 缓存部署到包含其他资源的 Resource Manager VNet 子网，部署会失败。 必须先删除该子网中的现有资源，才能创建新的 Redis 缓存。\r \r 只要有足够的可用 IP 地址，就可以将多种类型的资源部署到经典 VNet。\r \r ### <a name=\"what-are-the-subnet-address-space-requirements\"></a>子网地址空间的要求是什么？\r Azure 会保留每个子网中的某些 IP 地址，但是这些地址不能使用。 子网的第一个和最后一个 IP 地址仅为协议一致性而保留，其他三个地址用于 Azure 服务。 有关详细信息，请参阅[使用这些子网中的 IP 地址是否有任何限制？](../virtual-network/virtual-networks-faq.md#are-there-any-restrictions-on-using-ip-addresses-within-these-subnets)\r \r 除了 Azure VNET 基础结构使用的 IP 地址以外，子网中的每个 Redis 实例为每个分片使用两个 IP 地址，为负载均衡器使用一个额外的 IP 地址。 非群集缓存被视为包含一个分片。\r \r ### <a name=\"do-all-cache-features-work-when-hosting-a-cache-in-a-vnet\"></a>在 VNET 中托管缓存时，是否可以使用所有缓存功能？\r 如果缓存是 VNET 的一部分，则只有 VNET 中的客户端可以访问缓存。 因此，以下缓存管理功能目前不起作用。\r \r - Redis 控制台 - 由于 Redis 控制台在本地浏览器中运行（这在 VNET 的外部），因此它无法连接到缓存。\r \r ## <a name=\"use-expressroute-with-azure-redis-cache\"></a>将 ExpressRoute 用于 Azure Redis 缓存\r 客户可以将 [Azure ExpressRoute](/expressroute/) 线路连接到虚拟网络基础结构，从而将其本地网络扩展到 Azure。 \r \r 默认情况下，新创建的 ExpressRoute 线路不会在 VNET 上执行强制隧道（默认路由播发，0.0.0.0/0）。 因此，允许出站 Internet 连接直接来自 VNET，而且客户端应用程序能够连接到其他 Azure 终结点（包括 Azure Redis 缓存）。\r \r 但是，常见的客户配置是使用强制隧道（播发默认路由），以强制出站 Internet 流量改为流向本地。 如果出站流量在本地遭到阻止，此流量将断开与 Azure Redis 缓存的连接，这样 Azure Redis 缓存实例将无法与其依赖项通信。\r \r 解决方法是在包含 Azure Redis 缓存的子网上定义一个或多个用户定义的路由 (UDR)。 UDR 定义了要遵循的子网特定路由，而不是默认路由。\r \r 如果可能，建议使用以下配置：\r \r - ExpressRoute 配置播发 0.0.0.0/0 并默认使用强制隧道将所有输出流量发送到本地。\r - 已应用到包含 Azure Redis 缓存的子网的 UDR 使用公共 Internet 的 TCP/IP 流量工作路由来定义 0.0.0.0/0；例如，通过将下一个跃点类型设置为“Internet”。\r \r 这些步骤的组合效应是子网级 UDR 将优先于 ExpressRoute 强制隧道，从而确保来自 Azure Redis 缓存的出站 Internet 访问。\r \r 出于性能原因，从本地应用程序使用 ExpressRoute 连接到 Azure Redis 缓存实例不是典型使用方案（为了获得最佳性能，Azure Redis 缓存客户端应与 Azure Redis 缓存在同一区域中）。\r \r >[!IMPORTANT] \r >UDR 中定义的路由 **必须** 足够明确，以便优先于 ExpressRoute 配置所播发的任何路由。 以下示例使用广泛 0.0.0.0/0 地址范围，因此使用更明确的地址范围，有可能意外地被路由播发重写。\r \r >[!WARNING]  \r >**未正确交叉播发从公共对等路径到专用对等路径的路由**的 ExpressRoute 配置不支持 Azure Redis 缓存。 已配置公共对等互连的 ExpressRoute 配置收到来自 Microsoft 的大量 Microsoft Azure IP 地址范围的路由播发。 如果这些地址范围在专用对等路径上未正确交叉播发，结果是来自 Azure Redis 缓存实例子网的所有出站网络数据包都不会正确地使用强制隧道发送到客户的本地网络基础结构。 此网络流将破坏 Azure Redis 缓存。 此问题的解决方法是停止从公共对等路径到专用对等路径的交叉播发路由。\r \r \r 有关用户定义路由的背景信息，请参阅此[概述](../virtual-network/virtual-networks-udr-overview.md)。\r \r 有关 ExpressRoute 的详细信息，请参阅 [ExpressRoute 技术概述](../expressroute/expressroute-introduction.md)。\r \r ## <a name=\"next-steps\"></a>后续步骤\r 了解如何使用更多的高级缓存功能。\r \r - [Azure Redis 缓存高级层简介](cache-premium-tier-intro.md)\r \r <!-- IMAGES -->\r \r [redis-cache-vnet]: ./media/cache-how-to-premium-vnet/redis-cache-vnet.png\r \r [redis-cache-vnet-ip]: ./media/cache-how-to-premium-vnet/redis-cache-vnet-ip.png\r \r [redis-cache-vnet-info]: ./media/cache-how-to-premium-vnet/redis-cache-vnet-info.png\r \r \r <!--Update_Description: wording update-->\r "}