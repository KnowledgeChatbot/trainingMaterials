{"Title":"如何在 Azure Cosmos DB 中使用 SQL 进行查询？","Description":"了解如何在 Azure Cosmos DB 中使用 SQL 通过 DocumentDB 数据进行查询","Content":"# <a name=\"azure-cosmos-db-how-to-query-using-sql\"></a>Azure Cosmos DB：如何使用 SQL 进行查询？\r \r Azure Cosmos DB [DocumentDB API](documentdb-introduction.md) 支持使用 SQL 查询文档。 本文提供一个示例文档和两个示例 SQL 查询和结果。\r \r 本文涵盖以下任务： \r \r > [!div class=\"checklist\"]\r > * 使用 SQL 查询数据\r \r ## <a name=\"sample-document\"></a>示例文档\r \r 本文中的 SQL 查询使用下面的示例文档。\r \r ```json\r {\r   \"id\": \"WakefieldFamily\",\r   \"parents\": [\r       { \"familyName\": \"Wakefield\", \"givenName\": \"Robin\" },\r       { \"familyName\": \"Miller\", \"givenName\": \"Ben\" }\r   ],\r   \"children\": [\r       {\r         \"familyName\": \"Merriam\", \r         \"givenName\": \"Jesse\", \r         \"gender\": \"female\", \"grade\": 1,\r         \"pets\": [\r             { \"givenName\": \"Goofy\" },\r             { \"givenName\": \"Shadow\" }\r         ]\r       },\r       { \r         \"familyName\": \"Miller\", \r          \"givenName\": \"Lisa\", \r          \"gender\": \"female\", \r          \"grade\": 8 }\r   ],\r   \"address\": { \"state\": \"NY\", \"county\": \"Manhattan\", \"city\": \"NY\" },\r   \"creationDate\": 1431620462,\r   \"isRegistered\": false\r }\r ```\r ## <a name=\"where-can-i-run-sql-queries\"></a>可在何处运行 SQL 查询？\r \r 通过 [REST API 和 SDK](documentdb-sdk-dotnet.md) 或[查询演练](https://www.documentdb.com/sql/demo)（它对现有示例数据集运行查询），可在 Azure 门户中使用数据资源管理器运行查询。\r \r 有关 SQL 查询的详细信息，请参阅：\r * [SQL 查询和 SQL 语法](documentdb-sql-query.md)\r \r ## <a name=\"prerequisites\"></a>先决条件\r \r 本教程假定已拥有 Azure Cosmos DB 帐户和集合。 没有这些内容？ 请学习 [5 分钟快速入门](create-mongodb-nodejs.md)或[开发人员教程](tutorial-develop-mongodb.md)，创建帐户和集合。\r \r ## <a name=\"example-query-1\"></a>示例查询 1\r \r 若使用上述示例家庭文档，则以下 SQL 查询返回其 ID 字段匹配 `WakefieldFamily` 的文档。 由于它是 `SELECT *` 语句，因此该查询的输出为完整的 JSON 文档：\r \r **查询**\r \r     SELECT * \r     FROM Families f \r     WHERE f.id = \"WakefieldFamily\"\r \r **结果**\r \r ```json\r {\r   \"id\": \"WakefieldFamily\",\r   \"parents\": [\r       { \"familyName\": \"Wakefield\", \"givenName\": \"Robin\" },\r       { \"familyName\": \"Miller\", \"givenName\": \"Ben\" }\r   ],\r   \"children\": [\r       {\r         \"familyName\": \"Merriam\", \r         \"givenName\": \"Jesse\", \r         \"gender\": \"female\", \"grade\": 1,\r         \"pets\": [\r             { \"givenName\": \"Goofy\" },\r             { \"givenName\": \"Shadow\" }\r         ]\r       },\r       { \r         \"familyName\": \"Miller\", \r          \"givenName\": \"Lisa\", \r          \"gender\": \"female\", \r          \"grade\": 8 }\r   ],\r   \"address\": { \"state\": \"NY\", \"county\": \"Manhattan\", \"city\": \"NY\" },\r   \"creationDate\": 1431620462,\r   \"isRegistered\": false\r }\r ```\r \r ## <a name=\"example-query-2\"></a>示例查询 2\r \r 下一查询返回家族中所有 ID 匹配 `WakefieldFamily` 的子女的名字（按匹配得分排序）。\r \r **查询**\r \r     SELECT c.givenName \r     FROM Families f \r     JOIN c IN f.children \r     WHERE f.id = 'WakefieldFamily'\r     ORDER BY f.children.grade ASC\r \r **结果**\r \r     [\r       { \"givenName\": \"Jesse\" }, \r       { \"givenName\": \"Lisa\"}\r     ]\r \r ## <a name=\"next-steps\"></a>后续步骤\r \r 在本教程中，已完成以下内容：\r \r > [!div class=\"checklist\"]\r > * 已了解如何使用 SQL 进行查询  \r \r 现可继续学习下一教程，了解如何全局分发数据。\r \r > [!div class=\"nextstepaction\"]\r > [全局分发数据](tutorial-global-distribution-documentdb.md)\r \r <!--Update_Description: update meta properties-->"}