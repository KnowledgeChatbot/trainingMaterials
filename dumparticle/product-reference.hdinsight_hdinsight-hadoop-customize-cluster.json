{"Title":"使用脚本操作自定义 HDInsight 群集 - Azure","Description":"了解如何使用脚本操作自定义 HDInsight 群集。","Content":"# <a name=\"customize-windows-based-hdinsight-clusters-using-script-action\"></a>使用脚本操作自定义基于 Windows 的 HDInsight 群集\r 在创建群集的过程中，可以使用脚本操作来调用[自定义脚本](hdinsight-hadoop-script-actions.md)，以便在群集上安装其他软件。\r \r 本文中的信息特定于基于 Windows 的 HDInsight 群集。 有关基于 Linux 的群集，请参阅[使用脚本操作自定义基于 Linux 的 HDInsight 群集](hdinsight-hadoop-customize-cluster-linux.md)。\r \r > [!IMPORTANT]\r > Linux 是在 HDInsight 3.4 版或更高版本上使用的唯一操作系统。 有关详细信息，请参阅 [HDInsight 在 Windows 上停用](hdinsight-component-versioning.md#hdinsight-windows-retirement)。\r \r 也可以使用多种其他方法来自定义 HDInsight 群集，例如包含其他 Azure 存储帐户、更改 Hadoop 配置文件（core-site.xml、hive-site.xml 等），或者将共享库（例如 Hive、Oozie）添加到群集中的共同位置。 这些自定义可以通过使用 Azure PowerShell、Azure HDInsight .NET SDK 或 Azure 门户来完成。 有关详细信息，请参阅 [在 HDInsight 中创建 Hadoop 群集][hdinsight-provision-cluster]。\r \r [!INCLUDE [upgrade-powershell](../../includes/hdinsight-use-latest-powershell-cli-and-dotnet-sdk.md)]\r \r ## <a name=\"script-action-in-the-cluster-creation-process\"></a>群集创建过程中的脚本操作\r 只能在创建群集过程中使用脚本操作。 下图演示了在创建过程中执行脚本操作的时间：\r \r ![群集创建期间的 HDInsight 群集自定义和阶段][img-hdi-cluster-states]\r \r 当脚本运行时，群集进入 **ClusterCustomization** 阶段。 在此阶段，脚本在系统管理员帐户下，以并行方式在群集中所有指定的节点上运行，而在节点上提供完全的系统管理员权限。\r \r > [!NOTE]\r > 你在 **ClusterCustomization** 阶段中于群集节点上拥有系统管理员权限，所以可以使用脚本来运行作业，例如停止和启动服务，包括 Hadoop 相关服务。 因此，在脚本中，必须在脚本完成运行之前，确定 Ambari 服务及其他 Hadoop 相关服务已启动并且正在运行。 这些服务必须在群集创建时，成功地确定群集的运行状况和状态。 如果更改群集上的任何影响这些服务的配置，必须使用所提供的帮助器函数。 有关帮助器函数的详细信息，请参阅 [为 HDInsight 开发脚本操作脚本][hdinsight-write-script]。\r >\r >\r \r 脚本的输出以及错误日志文件存储在为群集指定的默认存储帐户中。 这些日志存储在名为 u<\\cluster-name-fragment><\\time-stamp>setuplog 的表中。 这是从群集中所有节点上（头节点和辅助节点）运行的脚本聚合的日志文件。\r \r 每个群集可接受多个脚本操作，这些脚本依其指定顺序被调用。 脚本可在头节点和/或辅助节点上运行。\r \r HDInsight 提供了多个脚本用于在 HDInsight 群集上安装以下组件：\r \r | 名称 | 脚本 |\r | --- | --- |\r | **安装 Spark** |https://hdiconfigactions.blob.core.windows.net/sparkconfigactionv03/spark-installer-v03.ps1。 请参阅 [在 HDInsight 群集上安装并使用 Spark][hdinsight-install-spark]。 |\r | **安装 R** |https://hdiconfigactions.blob.core.windows.net/rconfigactionv02/r-installer-v02.ps1。 请参阅 [在 HDInsight 群集上安装并使用 R][hdinsight-install-r]。 |\r | **安装 Solr** |https://hdiconfigactions.blob.core.windows.net/solrconfigactionv01/solr-installer-v01.ps1。 请参阅[在 HDInsight 群集上安装并使用 Solr](hdinsight-hadoop-solr-install.md)。 |\r | - **安装 Giraph** |https://hdiconfigactions.blob.core.windows.net/giraphconfigactionv01/giraph-installer-v01.ps1。 请参阅[在 HDInsight 群集上安装并使用 Giraph](hdinsight-hadoop-giraph-install.md)。 |\r | **预加载 Hive 库** |https://hdiconfigactions.blob.core.windows.net/setupcustomhivelibsv01/setup-customhivelibs-v01.ps1。 请参阅[在 HDInsight 群集上添加 Hive 库](hdinsight-hadoop-add-hive-libraries.md) |\r \r ## <a name=\"call-scripts-using-the-azure-portal\"></a>使用 Azure 门户调用脚本\r **从 Azure 门户**\r \r 1. 根据[在 HDInsight 中创建 Hadoop 群集](hdinsight-hadoop-provision-linux-clusters.md)中的说明开始创建群集。\r 2. 在“脚本操作”边栏选项卡的“可选配置”下，单击“添加脚本操作”，提供有关脚本操作的详细信息，如下所示：\r \r     ![使用脚本操作自定义群集](./media/hdinsight-hadoop-customize-cluster/HDI.CreateCluster.8.png \"使用脚本操作自定义群集\")\r \r     <table border='1'>\r         <tr><th>属性</th><th>值</th></tr>\r         <tr><td>名称</td>\r             <td>指定脚本操作的名称。</td></tr>\r         <tr><td>脚本 URI</td>\r             <td>指定要调用来自定义群集的脚本的 URI。 s</td></tr>\r         <tr><td>头节点/辅助节点</td>\r             <td>指定在其上运行自定义脚本的节点（头节点或辅助角色节点）</b>。\r         <tr><td>Parameters</td>\r             <td>根据脚本的需要，请指定参数。</td></tr>\r     </table>\r \r     按 ENTER 可添加多个脚本操作，以在群集上安装多个组件。\r 3. 单击“选择”可保存脚本操作配置并继续执行群集创建。\r \r ## <a name=\"call-scripts-using-azure-powershell\"></a>使用 Azure PowerShell 调用脚本\r 以下 PowerShell 脚本演示如何在基于 Windows 的 HDInsight 群集上安装 Spark。  \r \r     # Provide values for these variables\r     $subscriptionID = \"<Azure Suscription ID>\" # After \"Login-AzureRmAccount -EnvironmentName AzureChinaCloud\", use \"Get-AzureRmSubscription\" to list IDs.\r \r     $nameToken = \"<Enter A Name Token>\"  # The token is use to create Azure service names.\r     $namePrefix = $nameToken.ToLower() + (Get-Date -Format \"MMdd\")\r \r     $resourceGroupName = $namePrefix + \"rg\"\r     $location = \"CHINA EAST\" # used for creating resource group, storage account, and HDInsight cluster.\r \r     $hdinsightClusterName = $namePrefix + \"spark\"\r     $httpUserName = \"admin\"\r     $httpPassword = \"<Enter a Password>\"\r \r     $defaultStorageAccountName = \"$namePrefix\" + \"store\"\r     $defaultBlobContainerName = $hdinsightClusterName\r \r     #############################################################\r     # Connect to Azure\r     #############################################################\r \r     Try{\r         Get-AzureRmSubscription\r     }\r     Catch{\r         Login-AzureRmAccount -EnvironmentName AzureChinaCloud\r     }\r     Select-AzureRmSubscription -SubscriptionId $subscriptionID\r \r     #############################################################\r     # Prepare the dependent components\r     #############################################################\r \r     # Create resource group\r     New-AzureRmResourceGroup -Name $resourceGroupName -Location $location\r \r     # Create storage account\r     New-AzureRmStorageAccount `\r         -ResourceGroupName $resourceGroupName `\r         -Name $defaultStorageAccountName `\r         -Location $location `\r         -Type Standard_GRS\r     $defaultStorageAccountKey = (Get-AzureRmStorageAccountKey `\r                                     -ResourceGroupName $resourceGroupName `\r                                     -Name $defaultStorageAccountName)[0].Value\r     $defaultStorageAccountContext = New-AzureStorageContext `\r                                     -StorageAccountName $defaultStorageAccountName `\r                                     -StorageAccountKey $storageAccountKey  \r     New-AzureStorageContainer `\r         -Name $defaultBlobContainerName `\r         -Context $defaultStorageAccountContext\r \r     #############################################################\r     # Create cluster with ApacheSpark\r     #############################################################\r \r     # Specify the configuration options\r     $config = New-AzureRmHDInsightClusterConfig `\r                 -DefaultStorageAccountName \"$defaultStorageAccountName.blob.core.chinacloudapi.cn\" `\r                 -DefaultStorageAccountKey $defaultStorageAccountKey\r \r     # Add a script action to the cluster configuration\r     $config = Add-AzureRmHDInsightScriptAction `\r                 -Config $config `\r                 -Name \"Install Spark\" `\r                 -NodeType HeadNode `\r                 -Uri https://hdiconfigactions.blob.core.windows.net/sparkconfigactionv03/spark-installer-v03.ps1 `\r \r     # Start creating a cluster with Spark installed\r     New-AzureRmHDInsightCluster `\r             -ResourceGroupName $resourceGroupName `\r             -ClusterName $hdinsightClusterName `\r             -Location $location `\r             -ClusterSizeInNodes 2 `\r             -ClusterType Hadoop `\r             -OSType Windows `\r             -DefaultStorageContainer $defaultBlobContainerName `\r             -Config $config\r \r 若要安装其他软件，需要替换脚本中的脚本文件：\r \r 出现提示时，请输入群集的凭据。 创建群集可能需要几分钟时间。\r \r ## <a name=\"call-scripts-using-net-sdk\"></a>使用 .NET SDK 调用脚本\r 以下示例演示如何在基于 Windows 的 HDInsight 群集上安装 Spark。 若要安装其他软件，需要替换代码中的脚本文件。\r \r **创建具有 Spark 的 HDInsight 群集**\r \r 1. 在 Visual Studio 中创建 C# 控制台应用程序。\r 2. 通过 Nuget 包管理器控制台运行以下命令。\r \r         Install-Package Microsoft.Rest.ClientRuntime.Azure.Authentication -Pre\r         Install-Package Microsoft.Azure.Management.ResourceManager -Pre\r         Install-Package Microsoft.Azure.Management.HDInsight\r 3. 在 Program.cs 文件中使用以下 using 语句：\r \r         using System;\r         using System.Security;\r         using Microsoft.Azure;\r         using Microsoft.Azure.Management.HDInsight;\r         using Microsoft.Azure.Management.HDInsight.Models;\r         using Microsoft.Azure.Management.ResourceManager;\r         using Microsoft.IdentityModel.Clients.ActiveDirectory;\r         using Microsoft.Rest;\r         using Microsoft.Rest.Azure.Authentication;\r 4. 将类中的代码替换为以下内容：\r \r         private static HDInsightManagementClient _hdiManagementClient;\r \r         // Replace with your AAD tenant ID if necessary\r         private const string TenantId = UserTokenProvider.CommonTenantId;\r         private const string SubscriptionId = \"<Your Azure Subscription ID>\";\r         // This is the GUID for the PowerShell client. Used for interactive logins in this example.\r         private const string ClientId = \"1950a258-227b-4e31-a9cf-717495945fc2\";\r         private static Uri BaseUri = new Uri(\"https://management.chinacloudapi.cn/\");\r         private const string ResourceGroupName = \"<ExistingAzureResourceGroupName>\";\r         private const string NewClusterName = \"<NewAzureHDInsightClusterName>\";\r         private const int NewClusterNumWorkerNodes = 2;\r         private const string NewClusterLocation = \"China East\";\r         private const string NewClusterVersion = \"3.2\";\r         private const string ExistingStorageName = \"<ExistingAzureStorageAccountName>\";\r         private const string ExistingStorageKey = \"<ExistingAzureStorageAccountKey>\";\r         private const string ExistingContainer = \"<ExistingAzureBlobStorageContainer>\";\r         private const string NewClusterType = \"Hadoop\";\r         private const OSType NewClusterOSType = OSType.Windows;\r         private const string NewClusterUsername = \"<HttpUserName>\";\r         private const string NewClusterPassword = \"<HttpUserPassword>\";\r \r         static void Main(string[] args)\r         {\r             System.Console.WriteLine(\"Running\");\r \r             // Authenticate and get a token\r             var authToken = Authenticate(TenantId, ClientId, SubscriptionId);\r             // Flag subscription for HDInsight, if it isn't already.\r             EnableHDInsight(authToken);\r             // Get an HDInsight management client\r             _hdiManagementClient = new HDInsightManagementClient(authToken, BaseUri);\r \r             CreateCluster();\r         }\r \r         private static void CreateCluster()\r         {\r             var parameters = new ClusterCreateParameters\r             {\r                 ClusterSizeInNodes = NewClusterNumWorkerNodes,\r                 Location = NewClusterLocation,\r                 ClusterType = NewClusterType,\r                 OSType = NewClusterOSType,\r                 Version = NewClusterVersion,\r                 DefaultStorageInfo = new AzureStorageInfo(ExistingStorageName, ExistingStorageKey, ExistingContainer),\r                 UserName = NewClusterUsername,\r                 Password = NewClusterPassword,\r             };\r \r             ScriptAction sparkScriptAction = new ScriptAction(\"Install Spark\",\r                 new Uri(\"https://hdiconfigactions.blob.core.windows.net/sparkconfigactionv03/spark-installer-v03.ps1\"), \"\");\r \r             parameters.ScriptActions.Add(ClusterNodeType.HeadNode, new System.Collections.Generic.List<ScriptAction> { sparkScriptAction });\r             parameters.ScriptActions.Add(ClusterNodeType.WorkerNode, new System.Collections.Generic.List<ScriptAction> { sparkScriptAction });\r \r             _hdiManagementClient.Clusters.Create(ResourceGroupName, NewClusterName, parameters);\r         }\r \r         /// <summary>\r         /// Authenticate to an Azure subscription and retrieve an authentication token\r         /// </summary>\r         /// <param name=\"TenantId\">The AAD tenant ID</param>\r         /// <param name=\"ClientId\">The AAD client ID</param>\r         /// <param name=\"SubscriptionId\">The Azure subscription ID</param>\r         /// <returns></returns>\r         static TokenCloudCredentials Authenticate(string TenantId, string ClientId, string SubscriptionId)\r         {\r             var authContext = new AuthenticationContext(\"https://login.chinacloudapi.cn/\" + TenantId);\r             var tokenAuthResult = authContext.AcquireToken(\"https://management.core.chinacloudapi.cn/\",\r                 ClientId,\r                 new Uri(\"urn:ietf:wg:oauth:2.0:oob\"),\r                 PromptBehavior.Always,\r                 UserIdentifier.AnyUser);\r             return new TokenCloudCredentials(SubscriptionId, tokenAuthResult.AccessToken);\r         }\r         /// <summary>\r         /// Marks your subscription as one that can use HDInsight, if it has not already been marked as such.\r         /// </summary>\r         /// <remarks>This is essentially a one-time action; if you have already done something with HDInsight\r         /// on your subscription, then this isn't needed at all and will do nothing.</remarks>\r         /// <param name=\"authToken\">An authentication token for your Azure subscription</param>\r         static void EnableHDInsight(TokenCloudCredentials authToken)\r         {\r             // Create a client for the Resource manager and set the subscription ID\r             var resourceManagementClient = new ResourceManagementClient(BaseUri, new TokenCredentials(authToken.Token));\r             resourceManagementClient.SubscriptionId = SubscriptionId;\r             // Register the HDInsight provider\r             var rpResult = resourceManagementClient.Providers.Register(\"Microsoft.HDInsight\");\r         }\r 5. 按 **F5** 运行应用程序。\r \r ## <a name=\"support-for-open-source-software-used-on-hdinsight-clusters\"></a>支持 HDInsight 群集上使用的开源软件\r Azure HDInsight 服务是一个弹性平台，可让你使用围绕着 Hadoop 形成的开放源代码技术生态系统，在云中生成大数据应用程序。 Azure 为开放源代码技术提供一般级别的支持，如 **Azure Support FAQ**（Azure 支持常见问题）网站上的 <a href=\"https://www.azure.cn/support/faq/\" target=\"_blank\">Support Scope</a>（支持范围）部分中所述。 HDInsight 服务为如下所述的某些组件提供附加的支持级别。\r \r HDInsight 服务中有两种类型的开放源代码组件：\r \r * **内置组件** - 这些组件预先安装在 HDInsight 群集上，并提供在群集的核心功能。 例如，Yarn ResourceManager、Hive 查询语言 (HiveQL) 及 Mahout 库均属于此类别。 [HDInsight 提供的 Hadoop 群集版本有哪些新功能？](hdinsight-component-versioning.md)</a>中提供了群集组件的完整列表。\r * **自定义组件** - 作为群集用户，可以安装，或者在工作负荷中使用由社区提供或自己创建的任何组件。\r \r 完全支持内置组件，Azure 支持部门帮助找出并解决与这些组件相关的问题。\r \r > [!WARNING]\r > 完全支持通过 HDInsight 群集提供的组件，Azure 支持部门帮助找出并解决与这些组件相关的问题。\r >\r > 自定义组件可获得合理范围的支持，有助于进一步解决问题。 这可能会促进解决问题，或要求使用可用的开源技术渠道，在渠道中可找到该技术的深厚的专业知识。 有许多可以使用的社区站点，例如：[HDInsight 的 MSDN 论坛](https://social.msdn.microsoft.com/Forums/azure/en-US/home?forum=hdinsight)和 [Azure CSDN](http://azure.csdn.net)。 此外，Apache 项目在 [http://apache.org](http://apache.org) 上提供了项目站点，例如 [Hadoop](http://hadoop.apache.org/)、[Spark](http://spark.apache.org/)。\r >\r >\r \r HDInsight 服务提供多种方式来使用自定义组件。 不论在群集上使用组件或安装组件的方式为何，均适用相同级别的支持。 以下是可以在 HDInsight 群集上使用的自定义组件最常见方式的列表：\r \r 1. 作业提交 - Hadoop 或其他类型的作业可以提交到执行或使用自定义组件的群集。\r 2. 群集自定义 - 在群集创建期间，可以指定要安装在群集节点的其他设置和自定义组件。\r 3. 示例 - 对于常见的自定义组件，Microsoft 和其他人可能会提供演示如何在 HDInsight 群集上使用这些组件的示例。 我们不针对这些示例提供支持。\r \r ## <a name=\"develop-script-action-scripts\"></a>开发脚本操作脚本\r 请参阅 [为 HDInsight 开发脚本操作脚本][hdinsight-write-script]。\r \r ## <a name=\"see-also\"></a>另请参阅\r * [在 HDInsight 中创建 Hadoop 群集][hdinsight-provision-cluster] 说明了如何使用其他自定义选项创建 HDInsight 群集。\r * [为 HDInsight 开发脚本操作脚本][hdinsight-write-script]\r * [在 HDInsight 群集上安装并使用 Spark][hdinsight-install-spark]\r * [在 HDInsight 群集上安装并使用 R][hdinsight-install-r]\r * [在 HDInsight 群集上安装并使用 Solr](hdinsight-hadoop-solr-install.md)。\r * [在 HDInsight 群集上安装并使用 Giraph](hdinsight-hadoop-giraph-install.md)。\r \r [hdinsight-install-spark]: spark/apache-spark-jupyter-spark-sql.md\r [hdinsight-install-r]: hdinsight-hadoop-r-scripts.md\r [hdinsight-write-script]: hdinsight-hadoop-script-actions.md\r [hdinsight-provision-cluster]: hdinsight-hadoop-provision-linux-clusters.md\r [powershell-install-configure]: https://docs.microsoft.com/powershell/azureps-cmdlets-docs\r \r [img-hdi-cluster-states]: ./media/hdinsight-hadoop-customize-cluster/HDI-Cluster-state.png \"群集创建期间的阶段\"\r \r <!--Update_Description: update wording and link references-->\r "}