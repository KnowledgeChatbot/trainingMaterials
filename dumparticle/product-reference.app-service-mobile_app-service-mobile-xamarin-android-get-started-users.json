{"Title":"Xamarin Android 中的移动应用身份验证入门","Description":"了解如何使用移动应用通过各种标识提供者（包括 AAD 和 Microsoft）对 Xamarin Android 应用的用户进行身份验证。","Content":"# <a name=\"add-authentication-to-your-xamarinandroid-app\"></a>向 Xamarin.Android 应用添加身份验证\r \r [!INCLUDE [app-service-mobile-selector-get-started-users](../../includes/app-service-mobile-selector-get-started-users.md)]\r \r 本主题演示如何从客户端应用程序对移动应用的用户进行身份验证。 在本教程中，使用 Azure 移动应用支持的标识提供者向快速入门项目添加身份验证。 在移动应用中成功进行身份验证和授权后，显示用户 ID 值。\r \r 本教程基于移动应用快速入门。 还必须先完成教程 [创建 Xamarin.Android 应用]。 如果不使用下载的快速入门服务器项目，必须将身份验证扩展包添加到项目。 有关服务器扩展包的详细信息，请参阅[使用适用于 Azure 移动应用的 .NET 后端服务器 SDK](./app-service-mobile-dotnet-backend-how-to-use-server-sdk.md)。\r \r ##<a name=\"register\"></a>注册应用以进行身份验证并配置应用服务\r \r [!INCLUDE [app-service-mobile-register-authentication](../../includes/app-service-mobile-register-authentication.md)]\r \r ## <a name=\"redirecturl\"></a>将应用添加到允许的外部重定向 URL\r \r 安全身份验证要求为应用定义新的 URL 方案。 此方案允许在完成身份验证过程后，身份验证系统重定向到应用。 在本教程中，我们自始至终使用 URL 方案 _appname_ 。 但是，可以使用任何你所选的 URL 方案。 对于移动应用程序而言，它应是唯一的。 在服务器端启用重定向：\r \r 1. 在 [Azure 门户]中，选择应用服务。\r \r 2. 单击“身份验证/授权”菜单选项。\r \r 3. 在“允许的外部重定向 URL”中，输入 `url_scheme_of_your_app://easyauth.callback`。  此字符串中的 **url_scheme_of_your_app** 是移动应用程序的 URL 方案。  它应该遵循协议的正常 URL 规范（仅使用字母和数字，并以字母开头）。  请记下所选的字符串，因为需要在几个地方使用 URL 方案调整移动应用程序代码。\r \r 4. 单击 **“确定”**。\r \r 5. 单击“保存” 。\r \r ## <a name=\"permissions\"></a>将权限限制给已经过身份验证的用户\r [!INCLUDE [app-service-mobile-restrict-permissions-dotnet-backend](../../includes/app-service-mobile-restrict-permissions-dotnet-backend.md)]\r \r 在 Visual Studio 或 Xamarin Studio 中，运行设备或模拟器中的客户端项目。 验证在应用启动后是否引发状态代码为 401（“未授权”）的未处理异常。 发生此异常的原因是应用尝试以未经身份验证的用户身份访问移动应用后端。 *TodoItem* 表现在要求身份验证。\r \r 接下来，更新客户端应用，以使用经过身份验证的用户从移动应用后端请求资源。\r \r ##<a name=\"add-authentication\"></a>向应用程序添加身份验证\r \r 已更新应用，在显示数据之前要求用户点击“登录”  按钮进行身份验证。\r \r 1. 将以下代码添加到 **TodoActivity** 类：\r \r     ```\r     // Define a authenticated user.\r     private MobileServiceUser user;\r     private async Task<bool> Authenticate()\r     {\r             var success = false;\r             try\r             {\r                 // Sign in with MicrosoftAccount login using a server-managed flow.\r                 user = await client.LoginAsync(this,\r                         MobileServiceAuthenticationProvider.MicrosoftAccount, \"{url_scheme_of_your_app}\");\r                 CreateAndShowDialog(string.Format(\"you are now logged in - {0}\",\r                     user.UserId), \"Logged in!\");\r \r                 success = true;\r             }\r             catch (Exception ex)\r             {\r                 CreateAndShowDialog(ex, \"Authentication failed\");\r             }\r             return success;\r     }\r \r     [Java.Interop.Export()]\r     public async void LoginUser(View view)\r     {\r         // Load data only after authentication succeeds.\r         if (await Authenticate())\r         {\r             //Hide the button after authentication succeeds.\r             FindViewById<Button>(Resource.Id.buttonLoginUser).Visibility = ViewStates.Gone;\r \r             // Load the data.\r             OnRefreshItemsSelected();\r         }\r     }\r     ```\r \r     此代码创建一个新方法（用于对用户进行身份验证）和新“登录”按钮的方法处理程序。上面示例代码中的用户使用 MicrosoftAccount 登录进行身份验证。对话框用于在进行身份验证后显示用户 ID。\r \r     > [!NOTE]\r     > 如果使用的标识提供者不是 MicrosoftAccount，请将传递给上述 **LoginAsync** 的值更改为以下值：_WindowsAzureActiveDirectory_。\r     > \r     > \r 3. 在 **OnCreate** 方法中，删除或注释掉以下代码行：\r \r     ```\r     OnRefreshItemsSelected ();\r     ```\r \r 4. 在 Activity_To_Do.axml 文件中，在现有 *AddItem* 按钮之前添加以下 *LoginUser* 按钮定义：\r \r     ```\r       <Button\r         android:id=\"@+id/buttonLoginUser\"\r         android:layout_width=\"wrap_content\"\r         android:layout_height=\"wrap_content\"\r         android:onClick=\"LoginUser\"\r         android:text=\"@string/login_button_text\" />\r     ```\r \r 5. 将以下元素添加到 Strings.xml 资源文件：\r \r     ```\r     <string name=\"login_button_text\">Sign in</string>\r     ```\r \r 6. 在 Visual Studio 或 Xamarin Studio 中，运行设备或模拟器中的客户端项目，并使用所选的标识提供者登录。\r \r     成功登录后，应用将显示登录 ID 和待办事项列表，用户可以对数据进行更新。\r \r <!-- URLs. -->\r [创建 Xamarin.Android 应用]: ./app-service-mobile-xamarin-android-get-started.md\r [Azure 门户]: https://portal.azure.cn\r \r <!--Update_Description: update wording and code-->"}