{"Title":"了解 Azure IoT 中心直接方法","Description":"开发人员指南 - 使用直接方法从服务应用调用设备上的代码。","Content":"# <a name=\"understand-and-invoke-direct-methods-from-iot-hub\"></a>了解和调用 IoT 中心的直接方法\r 借助 IoT 中心，用户可以从云中对设备调用直接方法。 直接方法表示与设备进行的请求-答复式交互，类似于会立即成功或失败（在用户指定的超时时间后）的 HTTP 调用。 此方法适用于即时操作过程取决于设备能否响应的情况，例如，如果设备脱机，则向设备发送短信以唤醒设备（短信的开销比方法调用更大）。\r \r 每个设备方法针对一个设备。 [作业][lnk-devguide-jobs]提供了一种方法，用于对多个设备调用直接方法，并为已断开连接的设备计划方法调用。\r \r 只要拥有 IoT 中心的“服务连接”权限，任何人都可以调用设备上的方法。\r \r 直接方法遵循请求-响应模式，适用于需要立即确认其结果的通信，通常是对设备的交互式控制，例如，要打开风扇。\r \r 如果在使用所需属性、直接方法或云到设备消息方面有任何疑问，请参阅 [云到设备通信指南][lnk-c2d-guidance] 。\r \r ## <a name=\"method-lifecycle\"></a>方法生命周期\r 直接方法在设备上实现，可能需要在方法有效负载中进行 0 次或 0 次以上的输入才能正确地实例化。 可以通过面向服务的 URI (`{iot hub}/twins/{device id}/methods/`) 调用直接方法。 设备通过特定于设备的 MQTT 主题 (`$iothub/methods/POST/{method name}/`) 接收直接方法。 将来可能会支持在更多的设备端网络协议上使用直接方法。\r \r > [!NOTE]\r > 调用设备上的直接方法时，属性名称和值只能包含 US ASCII 可打印字母数字，但下列组中的任一项除外：``{'$', '(', ')', '<', '>', '@', ',', ';', ':', '\\', '\"', '/', '[', ']', '?', '=', '{', '}', SP, HT}``。\r > \r > \r \r 直接方法是同步的，在超时期限（默认：30 秒，最长可设置为 3600 秒）过后，其结果不是成功就是失败。 直接方法适用于交互式场景，即当且仅当设备处于联机状态且可接收命令时，用户希望设备做出响应，例如打开手机的灯。 在此类方案中，用户需要立即看到结果是成功还是失败，以便云服务可以尽快根据结果进行操作。 设备可能返回某些消息正文作为方法的结果，但系统不会要求方法一定这样做。 无法保证基于方法调用的排序或者任何并发语义。\r \r 直接方法从云端只能通过 HTTPS 调用，从设备端可以通过 MQTT 或 AMQP 调用。\r \r 方法请求和响应的有效负载为最大 8 KB 的 JSON 文档。\r \r ## <a name=\"invoke-a-direct-method-from-a-back-end-app\"></a>从后端应用调用直接方法\r ### <a name=\"method-invocation\"></a>方法调用\r 在设备上直接调用方法属于 HTTPS 调用，其中包括：\r \r * URI，特定于设备 (`{iot hub}/twins/{device id}/methods/`)\r * POST 方法\r * 标头，包含身份验证、请求 ID、内容类型和内容编码\r * 透明的 JSON *正文* ，采用以下格式：\r \r ```\r {\r     \"methodName\": \"reboot\",\r     \"responseTimeoutInSeconds\": 200,\r     \"payload\": {\r         \"input1\": \"someInput\",\r         \"input2\": \"anotherInput\"\r     }\r }\r ```\r \r 超时以秒为单位。 如果未设置超时，则默认为 30 秒。\r \r ### <a name=\"response\"></a>响应\r 由后端应用接收响应，其中包括：\r \r * HTTP 状态代码，用于 IoT 中心发出的错误，包括 404 错误（针对当前未连接的设备）\r * 标头，包含 ETag、请求 ID、内容类型和内容编码\r * 采用以下格式的 JSON 正文：\r \r ```\r {\r     \"status\" : 201,\r     \"payload\" : {...}\r }\r ```\r \r    `status` 和 `body` 均由设备提供，用于响应，其中包含设备自身的状态代码和/或描述。\r \r ## <a name=\"handle-a-direct-method-on-a-device\"></a>处理针对设备的直接方法\r ### <a name=\"method-invocation\"></a>方法调用\r 设备通过 MQTT 主题接收直接方法请求： `$iothub/methods/POST/{method name}/?$rid={request id}`\r \r 设备接收的正文采用以下格式：\r \r ```\r {\r     \"input1\": \"someInput\",\r     \"input2\": \"anotherInput\"\r }\r ```\r \r 方法请求为 QoS 0。\r \r ### <a name=\"response\"></a>响应\r 设备将响应发送到 `$iothub/methods/res/{status}/?$rid={request id}`，其中：\r \r * `status` 属性是设备提供的方法执行状态。\r * `$rid` 属性是从 IoT 中心接收的方法调用中的请求 ID。\r \r 正文由设备设置，可以是任何状态。\r \r ## <a name=\"additional-reference-material\"></a>其他参考资料\r IoT 中心开发人员指南中的其他参考主题包括：\r \r * [IoT 中心终结点][lnk-endpoints] ，介绍了每个 IoT 中心针对运行时和管理操作公开的各种终结点。\r * [限制和配额][lnk-quotas]，说明了适用于 IoT 中心服务的配额，以及使用服务时预期会碰到的限制行为。\r * [Azure IoT 设备和服务 SDK][lnk-sdks]，列出了在开发与 IoT 中心交互的设备和服务应用时可使用的各种语言 SDK。\r * [用于设备孪生、作业和消息路由的 IoT 中心查询语言][lnk-query]一文介绍了可用于从 IoT 中心检索设备孪生和作业相关信息的 IoT 中心查询语言。\r * [IoT 中心 MQTT 支持][lnk-devguide-mqtt] 提供有关 IoT 中心对 MQTT 协议的支持的详细信息。\r \r ## <a name=\"next-steps\"></a>后续步骤\r 了解如何使用直接方法后，可根据兴趣参阅以下 IoT 中心开发人员指南文章：\r \r * [Schedule jobs on multiple devices（在多台设备上计划作业）][lnk-devguide-jobs]\r \r 若要尝试本文中介绍的一些概念，可以根据兴趣学习以下 IoT 中心教程：\r \r * [使用直接方法][lnk-methods-tutorial]\r \r <!-- links and images -->\r \r [lnk-endpoints]: ./iot-hub-devguide-endpoints.md\r [lnk-quotas]: ./iot-hub-devguide-quotas-throttling.md\r [lnk-sdks]: ./iot-hub-devguide-sdks.md\r [lnk-query]: ./iot-hub-devguide-query-language.md\r [lnk-devguide-mqtt]: ./iot-hub-mqtt-support.md\r \r [lnk-devguide-jobs]: ./iot-hub-devguide-jobs.md\r [lnk-methods-tutorial]: ./iot-hub-node-node-direct-methods.md\r [lnk-devguide-messages]: ./iot-hub-devguide-messaging.md\r [lnk-c2d-guidance]: ./iot-hub-devguide-c2d-guidance.md\r \r \r <!--Update_Description: update wording-->"}