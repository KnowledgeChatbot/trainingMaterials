{"Title":"在 Azure 模板之间传递复杂值","Description":"显示了如何通过建议的方法来使用复杂对象，以便与 Azure Resource Manager 模板和已链接模板共享状态数据。","Content":"# <a name=\"share-state-to-and-from-azure-resource-manager-templates\"></a>在 Azure Resource Manager 模板中来回共享状态\r 本主题介绍有关在模板中管理和共享状态的最佳实践。 本主题中所示的参数和变量是用户为了方便组织部署要求而可以定义的对象类型的示例。 通过这些示例，可以使用适合环境的属性值实现自己的对象。\r \r 本主题是包含更多内容的白皮书的一部分。 若要阅读完整的白皮书，请下载 [一流的 Resource Manager 模板注意事项和成熟的做法](http://download.microsoft.com/download/8/E/1/8E1DBEFA-CECE-4DC9-A813-93520A5D7CFE/World%20Class%20ARM%20Templates%20-%20Considerations%20and%20Proven%20Practices.pdf)。\r \r ## <a name=\"provide-standard-configuration-settings\"></a>提供标准配置设置\r 通常会提供已知配置供用户选择，而不是提供一个过于灵活可变的模板。 实际上，用户可以选择标准 T 恤尺寸，例如沙盒、小、中、大。 T 恤尺寸的其他示例包括产品，例如社区版本或企业版本。 在其他情况下，这可能是某种技术的工作负荷特定配置，例如，映射化简或 No SQL。\r \r 如果使用复杂对象，可以创建包含数据集合的变量（有时称为“属性包”），并使用使用数据驱动模板中的资源声明。 这种方法可对于预先为客户配置好的各种大小提供正常且已知的配置。 如果没有已知配置，模板用户就必须自行确定群集大小、整合平台资源约束，以及执行数学运算来识别存储帐户的生成分区和其他资源（因群集大小和资源约束而导致）。 除了为客户提供更好的体验，少量的已知配置可让你更轻松地提供支持，并帮助你提供较高的密度级别。\r \r 以下示例显示了如何定义包含复杂对象（代表数据聚合）的变量。 这些集合定义的值可用于虚拟机大小、网络设置、操作系统设置和可用性设置。\r \r ```json\r \"variables\": {\r   \"tshirtSize\": \"[variables(concat('tshirtSize', parameters('tshirtSize')))]\",\r   \"tshirtSizeSmall\": {\r     \"vmSize\": \"Standard_A1\",\r     \"diskSize\": 1023,\r     \"vmTemplate\": \"[concat(variables('templateBaseUrl'), 'database-2disk-resources.json')]\",\r     \"vmCount\": 2,\r     \"storage\": {\r       \"name\": \"[parameters('storageAccountNamePrefix')]\",\r       \"count\": 1,\r       \"pool\": \"db\",\r       \"map\": [0,0],\r       \"jumpbox\": 0\r     }\r   },\r   \"tshirtSizeMedium\": {\r     \"vmSize\": \"Standard_A3\",\r     \"diskSize\": 1023,\r     \"vmTemplate\": \"[concat(variables('templateBaseUrl'), 'database-8disk-resources.json')]\",\r     \"vmCount\": 2,\r     \"storage\": {\r       \"name\": \"[parameters('storageAccountNamePrefix')]\",\r       \"count\": 2,\r       \"pool\": \"db\",\r       \"map\": [0,1],\r       \"jumpbox\": 0\r     }\r   },\r   \"tshirtSizeLarge\": {\r     \"vmSize\": \"Standard_A4\",\r     \"diskSize\": 1023,\r     \"vmTemplate\": \"[concat(variables('templateBaseUrl'), 'database-16disk-resources.json')]\",\r     \"vmCount\": 3,\r     \"slaveCount\": 2,\r     \"storage\": {\r       \"name\": \"[parameters('storageAccountNamePrefix')]\",\r       \"count\": 2,\r       \"pool\": \"db\",\r       \"map\": [0,1,1],\r       \"jumpbox\": 0\r     }\r   },\r   \"osSettings\": {\r     \"scripts\": [\r       \"[concat(variables('templateBaseUrl'), 'install_postgresql.sh')]\",\r       \"https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/shared_scripts/ubuntu/vm-disk-utils-0.1.sh\"\r     ],\r     \"imageReference\": {\r       \"publisher\": \"Canonical\",\r       \"offer\": \"UbuntuServer\",\r       \"sku\": \"14.04.2-LTS\",\r       \"version\": \"latest\"\r     }\r   },\r   \"networkSettings\": {\r     \"vnetName\": \"[parameters('virtualNetworkName')]\",\r     \"addressPrefix\": \"10.0.0.0/16\",\r     \"subnets\": {\r       \"dmz\": {\r         \"name\": \"dmz\",\r         \"prefix\": \"10.0.0.0/24\",\r         \"vnet\": \"[parameters('virtualNetworkName')]\"\r       },\r       \"data\": {\r         \"name\": \"data\",\r         \"prefix\": \"10.0.1.0/24\",\r         \"vnet\": \"[parameters('virtualNetworkName')]\"\r       }\r     }\r   },\r   \"availabilitySetSettings\": {\r     \"name\": \"pgsqlAvailabilitySet\",\r     \"fdCount\": 3,\r     \"udCount\": 5\r   }\r }\r ```\r \r 请注意，**tshirtSize** 变量连接通过参数（**Small**、**Medium**、**Large**）提供给文本 **tshirtSize** 的 T 恤大小。 可以使用此变量来检索该 T 恤大小关联的复杂对象变量。\r \r 然后，可以在将来引用模板中的这些变量。 能够引用指定变量及其属性可以简化模板语法，从而轻松地理解上下文。 下面的示例定义的资源在部署时可以使用前述对象来设置值。 例如，VM 大小是通过检索 `variables('tshirtSize').vmSize` 的值设置的，而磁盘大小的值是从 `variables('tshirtSize').diskSize` 检索而来。 此外，已链接模板的 URI 是通过 `variables('tshirtSize').vmTemplate`的值来设置的。\r \r ```json\r \"name\": \"master-node\",\r \"type\": \"Microsoft.Resources/deployments\",\r \"apiVersion\": \"2015-01-01\",\r \"dependsOn\": [\r     \"[concat('Microsoft.Resources/deployments/', 'shared')]\"\r ],\r \"properties\": {\r     \"mode\": \"Incremental\",\r     \"templateLink\": {\r       \"uri\": \"[variables('tshirtSize').vmTemplate]\",\r       \"contentVersion\": \"1.0.0.0\"\r     },\r     \"parameters\": {\r       \"adminPassword\": {\r         \"value\": \"[parameters('adminPassword')]\"\r       },\r       \"replicatorPassword\": {\r         \"value\": \"[parameters('replicatorPassword')]\"\r       },\r       \"osSettings\": {\r         \"value\": \"[variables('osSettings')]\"\r       },\r       \"subnet\": {\r         \"value\": \"[variables('networkSettings').subnets.data]\"\r       },\r       \"commonSettings\": {\r         \"value\": {\r           \"region\": \"[parameters('region')]\",\r           \"adminUsername\": \"[parameters('adminUsername')]\",\r           \"namespace\": \"ms\"\r         }\r       },\r       \"storageSettings\": {\r         \"value\":\"[variables('tshirtSize').storage]\"\r       },\r       \"machineSettings\": {\r         \"value\": {\r           \"vmSize\": \"[variables('tshirtSize').vmSize]\",\r           \"diskSize\": \"[variables('tshirtSize').diskSize]\",\r           \"vmCount\": 1,\r           \"availabilitySet\": \"[variables('availabilitySetSettings').name]\"\r         }\r       },\r       \"masterIpAddress\": {\r         \"value\": \"0\"\r       },\r       \"dbType\": {\r         \"value\": \"MASTER\"\r       }\r     }\r   }\r }\r ```\r \r ## <a name=\"pass-state-to-a-template\"></a>将状态传递给模板\r 通过在部署期间直接提供的参数，可以在模板中共享状态。\r \r 下表列出了模板中的常用参数。\r \r | 名称 | 值 | 说明 |\r | --- | --- | --- |\r | location |Azure 区域的约束列表中的字符串 |资源的部署位置。 |\r | storageAccountNamePrefix |String |在其中放置 VM 磁盘的存储帐户的唯一 DNS 名称 |\r | domainName |String |可公开访问的 jumpbox VM 的域名采用的格式：**{域名}.{位置}.cloudapp.chinacloudapi.cn**，例如：**mydomainname.chinanorth.cloudapp.chinacloudapi.cn** |\r | adminUsername |String |VM 的用户名 |\r | adminPassword |String |VM 的密码 |\r | tshirtSize |所提供 T 恤尺寸的约束列表中的字符串 |要预配的指定的缩放单位大小。 例如，“小”、“中”、“大” |\r | virtualNetworkName |String |使用者想要使用的虚拟网络的名称。 |\r | enableJumpbox |约束列表中的字符串 (enabled/disabled) |一个参数，标识是否启用针对环境的 jumpbox。 值：“enabled”、“disabled” |\r \r 上一部分中使用的 **tshirtSize** 参数定义为：\r \r ```json\r \"parameters\": {\r   \"tshirtSize\": {\r     \"type\": \"string\",\r     \"defaultValue\": \"Small\",\r     \"allowedValues\": [\r       \"Small\",\r       \"Medium\",\r       \"Large\"\r     ],\r     \"metadata\": {\r       \"Description\": \"T-shirt size of the MongoDB deployment\"\r     }\r   }\r }\r ```\r \r ## <a name=\"pass-state-to-linked-templates\"></a>将状态传递给链接模板\r 连接到已链接模板时，通常混合使用静态变量和生成的变量。\r \r ### <a name=\"static-variables\"></a>静态变量\r 静态变量通常用于提供基础值，例如 URL，可用于整个模板。\r \r 在以下模板摘录中， `templateBaseUrl` 指定模板在 GitHub 中的根位置。 下一行构建新变量 `sharedTemplateUrl`，该变量将基 URL 的值与共享资源模板的已知名称连接起来。 在该行下面使用了一个复杂的对象变量来存储 T 恤大小，其中的基 URL 连接到已知配置模板位置并存储在 `vmTemplate` 属性中。\r \r 这样做的好处是，如果模板位置发生更改，则只需在一个位置更改静态变量，并将静态变量传递到所有链接模板。\r \r ```json\r \"variables\": {\r   \"templateBaseUrl\": \"https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/postgresql-on-ubuntu/\",\r   \"sharedTemplateUrl\": \"[concat(variables('templateBaseUrl'), 'shared-resources.json')]\",\r   \"tshirtSizeSmall\": {\r     \"vmSize\": \"Standard_A1\",\r     \"diskSize\": 1023,\r     \"vmTemplate\": \"[concat(variables('templateBaseUrl'), 'database-2disk-resources.json')]\",\r     \"vmCount\": 2,\r     \"slaveCount\": 1,\r     \"storage\": {\r       \"name\": \"[parameters('storageAccountNamePrefix')]\",\r       \"count\": 1,\r       \"pool\": \"db\",\r       \"map\": [0,0],\r       \"jumpbox\": 0\r     }\r   }\r }\r ```\r \r ### <a name=\"generated-variables\"></a>生成的变量\r 除了静态变量之外，多个变量是动态生成的。 本部分介绍所生成变量的部分常见类型。\r \r #### <a name=\"tshirtsize\"></a>tshirtSize\r 已熟悉基于上述示例生成的这个变量。\r \r #### <a name=\"networksettings\"></a>networkSettings\r 在容量、功能或端到端范围解决方案模板中，链接的模板通常创建存在于网络上的资源。 一个简单的方法是使用复杂的对象来存储网络设置并将其传递给链接的模板。\r \r 下面是网络设置通信的示例。\r \r ```json\r \"networkSettings\": {\r   \"vnetName\": \"[parameters('virtualNetworkName')]\",\r   \"addressPrefix\": \"10.0.0.0/16\",\r   \"subnets\": {\r     \"dmz\": {\r       \"name\": \"dmz\",\r       \"prefix\": \"10.0.0.0/24\",\r       \"vnet\": \"[parameters('virtualNetworkName')]\"\r     },\r     \"data\": {\r       \"name\": \"data\",\r       \"prefix\": \"10.0.1.0/24\",\r       \"vnet\": \"[parameters('virtualNetworkName')]\"\r     }\r   }\r }\r ```\r \r #### <a name=\"availabilitysettings\"></a>availabilitySettings\r 在链接的模板中创建的资源通常都放在可用性集中。 在下面的示例中，指定了可用性集名称，以及要使用的容错域和更新域计数。\r \r ```json\r \"availabilitySetSettings\": {\r   \"name\": \"pgsqlAvailabilitySet\",\r   \"fdCount\": 3,\r   \"udCount\": 5\r }\r ```\r \r 如果需要多个可用性集（例如，一个用于主节点，另一个用于数据节点），可以使用某个名称作为前缀，并指定多个可用性集，或者遵循此前显示的用于创建变量（针对特定 T 恤大小）的模型。\r \r #### <a name=\"storagesettings\"></a>storageSettings\r 通常会与链接的模板共享存储详细信息。 在以下示例中， *storageSettings* 对象提供了有关存储帐户和容器名称的详细信息。\r \r ```json\r \"storageSettings\": {\r     \"vhdStorageAccountName\": \"[parameters('storageAccountName')]\",\r     \"vhdContainerName\": \"[variables('vmStorageAccountContainerName')]\",\r     \"destinationVhdsContainer\": \"[concat('https://', parameters('storageAccountName'), variables('vmStorageAccountDomain'), '/', variables('vmStorageAccountContainerName'), '/')]\"\r }\r ```\r \r #### <a name=\"ossettings\"></a>osSettings\r 使用链接的模板，可能需要通过不同的已知配置类型将操作系统设置传递给各种节点类型。 使用复杂对象可以轻松地存储和共享操作系统信息，还可以更轻松地支持多个操作系统部署选项。\r \r 下面的示例演示了 *osSettings*的一个对象：\r \r ```json\r \"osSettings\": {\r   \"imageReference\": {\r     \"publisher\": \"Canonical\",\r     \"offer\": \"UbuntuServer\",\r     \"sku\": \"14.04.2-LTS\",\r     \"version\": \"latest\"\r   }\r }\r ```\r \r #### <a name=\"machinesettings\"></a>machineSettings\r 生成的变量 *machineSettings* 是复杂的对象，其中包含各种用于创建 VM 的核心变量。 变量包括管理员用户名和密码、VM 名称前缀，以及操作系统映像引用。\r \r ```json\r \"machineSettings\": {\r     \"adminUsername\": \"[parameters('adminUsername')]\",\r     \"adminPassword\": \"[parameters('adminPassword')]\",\r     \"machineNamePrefix\": \"mongodb-\",\r     \"osImageReference\": {\r         \"publisher\": \"[variables('osFamilySpec').imagePublisher]\",\r         \"offer\": \"[variables('osFamilySpec').imageOffer]\",\r         \"sku\": \"[variables('osFamilySpec').imageSKU]\",\r         \"version\": \"latest\"\r     }\r },\r ```\r \r 请注意，*osImageReference* 会检索主模板中定义的 *osSettings* 变量的值。 这意味着可以轻松更改 VM 的操作系统 — 完全进行更改或基于模板使用者的首选项进行更改。\r \r #### <a name=\"vmscripts\"></a>vmScripts\r *vmScripts* 对象包含可以下载并可在 VM 实例上执行的脚本的详细信息，包括外部和内部引用。 外部引用包含基础结构。\r 内部引用包含已按照的软件和配置。\r \r 使用 *scriptsToDownload* 属性可以列出要下载到 VM 的脚本。 此对象还包含对命令行参数的引用，可以执行不同类型的操作。 这些操作包括为单个节点执行默认安装（在所有节点部署后即可运行的一种安装），以及执行任何其他可能特定于给定模板的脚本。\r \r 此示例来自用于部署 MongoDB（需要仲裁器才能提供高可用性）的模板。 已将 *arbiterNodeInstallCommand* 添加到 *vmScripts* 以安装仲裁器。\r \r 在变量部分，可以找到用于定义特定文本以使用适当值执行脚本的变量。\r \r ```json\r \"vmScripts\": {\r     \"scriptsToDownload\": [\r         \"[concat(variables('scriptUrl'), 'mongodb-', variables('osFamilySpec').osName, '-install.sh')]\",\r         \"[concat(variables('sharedScriptUrl'), 'vm-disk-utils-0.1.sh')]\"\r     ],\r     \"regularNodeInstallCommand\": \"[variables('installCommand')]\",\r     \"lastNodeInstallCommand\": \"[concat(variables('installCommand'), ' -l')]\",\r     \"arbiterNodeInstallCommand\": \"[concat(variables('installCommand'), ' -a')]\"\r },\r ```\r \r ## <a name=\"return-state-from-a-template\"></a>从模板返回状态\r 不仅可以传递数据到模板中，还可以反过来将数据共享给调用的模板。 在已链接模板的 **“输出”** 部分，可以提供允许源模板使用的键/值对。\r \r 以下示例演示如何传递在已链接模板中生成的专用 IP 地址。\r \r ```json\r \"outputs\": {\r     \"masterip\": {\r         \"value\": \"[reference(concat(variables('nicName'),0)).ipConfigurations[0].properties.privateIPAddress]\",\r         \"type\": \"string\"\r      }\r }\r ```\r \r 在主模板中，可通过以下语法来使用该数据：\r \r ```\r \"[reference('master-node').outputs.masterip.value]\"\r ```\r \r 可以在主模板的 outputs 节或 resources 节中使用此表达式。由于该表达式依赖于运行时状态，因此不能在 variables 节中使用。若要从主模板返回此值，请使用：\r \r ```json\r \"outputs\": {\r   \"masterIpAddress\": {\r     \"value\": \"[reference('master-node').outputs.masterip.value]\",\r     \"type\": \"string\"\r   }\r ```\r \r 有关使用链接模板的 outputs 节返回虚拟机数据磁盘的示例，请参阅[为一个虚拟机创建多个数据磁盘](resource-group-create-multiple.md)。\r \r ## <a name=\"define-authentication-settings-for-virtual-machine\"></a>为虚拟机定义身份验证设置\r 可以使用与前面所示相同的配置设置模式来指定虚拟机的身份验证设置。 需创建要在身份验证类型中传递的参数。\r \r ```json\r \"parameters\": {\r   \"authenticationType\": {\r     \"allowedValues\": [\r       \"password\",\r       \"sshPublicKey\"\r     ],\r     \"defaultValue\": \"password\",\r     \"metadata\": {\r       \"description\": \"Authentication type\"\r     },\r     \"type\": \"string\"\r   }\r }\r ```\r \r 需要为不同的身份验证类型添加变量，并使用一个变量根据参数值存储此部署使用的类型。\r \r ```json\r \"variables\": {\r   \"osProfile\": \"[variables(concat('osProfile', parameters('authenticationType')))]\",\r   \"osProfilepassword\": {\r     \"adminPassword\": \"[parameters('adminPassword')]\",\r     \"adminUsername\": \"notused\",\r     \"computerName\": \"[parameters('vmName')]\",\r     \"customData\": \"[base64(variables('customData'))]\"\r   },\r   \"osProfilesshPublicKey\": {\r     \"adminUsername\": \"notused\",\r     \"computerName\": \"[parameters('vmName')]\",\r     \"customData\": \"[base64(variables('customData'))]\",\r     \"linuxConfiguration\": {\r       \"disablePasswordAuthentication\": \"true\",\r       \"ssh\": {\r         \"publicKeys\": [\r           {\r             \"keyData\": \"[parameters('sshPublicKey')]\",\r             \"path\": \"/home/notused/.ssh/authorized_keys\"\r           }\r         ]\r       }\r     }\r   }\r }\r ```\r \r 定义虚拟机时，请将 **osProfile** 设置为所创建的变量。\r \r ```json\r {\r   \"type\": \"Microsoft.Compute/virtualMachines\",\r   ...\r   \"osProfile\": \"[variables('osProfile')]\"\r }\r ```\r \r ## <a name=\"next-steps\"></a>后续步骤\r * 若要了解模板的各节，请参阅[创作 Azure Resource Manager 模板](resource-group-authoring-templates.md)\r * 若要查看模板中可用的函数，请参阅 [Azure Resource Manager 模板函数](resource-group-template-functions.md)\r \r <!--Update_Description: wording update-->"}