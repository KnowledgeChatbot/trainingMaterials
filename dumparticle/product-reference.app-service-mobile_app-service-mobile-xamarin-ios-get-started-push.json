{"Title":"使用 Azure 应用服务向 Xamarin.iOS 应用添加推送通知","Description":"了解如何使用 Azure 应用服务将推送通知发送到 Xamarin iOS 应用","Content":"\r # 向 Xamarin.iOS 应用添加推送通知\r \r [!INCLUDE [app-service-mobile-selector-get-started-push](../../includes/app-service-mobile-selector-get-started-push.md)]\r \r ## 概述\r 本教程介绍如何向 [Xamarin.iOS 快速入门](./app-service-mobile-xamarin-ios-get-started.md)项目添加推送通知，以便每次插入一条记录时，向设备发送一条推送通知。\r \r 如果不使用下载的快速入门服务器项目，则需要推送通知扩展包。有关详细信息，请参阅[使用适用于 Azure 移动应用的 .NET 后端服务器 SDK](./app-service-mobile-dotnet-backend-how-to-use-server-sdk.md)。\r \r ##先决条件\r \r * 完成 [Xamarin.iOS 快速入门](./app-service-mobile-xamarin-ios-get-started.md)教程。\r \r * 物理 iOS 设备。iOS 模拟器不支持推送通知。\r \r ## 在 Apple 的开发人员门户上为推送通知注册应用\r [!INCLUDE [启用 Apple 推送通知](../../includes/enable-apple-push-notifications.md)]\r \r ## 配置移动应用以发送推送通知\r [!INCLUDE [app-service-mobile-apns-configure-push](../../includes/app-service-mobile-apns-configure-push.md)]\r \r ## 更新服务器项目以发送推送通知\r [!INCLUDE [app-service-mobile-update-server-project-for-push-template](../../includes/app-service-mobile-update-server-project-for-push-template.md)]\r \r ##配置 Xamarin.iOS 项目\r \r [!INCLUDE [app-service-mobile-xamarin-ios-configure-project](../../includes/app-service-mobile-xamarin-ios-configure-project.md)]\r \r ## <a name=\"add-push\"></a>向应用程序添加推送通知\r \r 1. 在 **QSTodoService** 中，添加以下属性使 **AppDelegate** 可以获取移动客户端：\r \r     ```\r         public MobileServiceClient GetClient {\r         get\r         {\r             return client;\r         }\r         private set\r         {\r             client = value;\r         }\r     }\r     ```\r \r 1. 在 **AppDelegate.cs** 文件顶部添加以下 `using` 语句。\r \r     ```\r     using Microsoft.WindowsAzure.MobileServices;\r     using Newtonsoft.Json.Linq;\r     ```\r \r 2. 在 **AppDelegate** 中，重写 **FinishedLaunching** 事件：\r \r     ```\r     public override bool FinishedLaunching(UIApplication application, NSDictionary launchOptions)\r     {\r         // registers for push for iOS8\r         var settings = UIUserNotificationSettings.GetSettingsForTypes(\r             UIUserNotificationType.Alert\r             | UIUserNotificationType.Badge\r             | UIUserNotificationType.Sound,\r             new NSSet());\r \r         UIApplication.SharedApplication.RegisterUserNotificationSettings(settings);\r         UIApplication.SharedApplication.RegisterForRemoteNotifications();\r \r         return true;\r     }\r     ```\r \r 3. 在同一文件中，重写 **RegisteredForRemoteNotifications** 事件。在此代码中，将注册一个简单的模板通知，服务器会将此通知发送到所有支持的平台。\r \r     有关使用通知中心的模板的详细信息，请参阅[模板](../notification-hubs/notification-hubs-templates-cross-platform-push-messages.md)。\r \r     ```\r     public override void RegisteredForRemoteNotifications(UIApplication application, NSData deviceToken)\r     {\r         MobileServiceClient client = QSTodoService.DefaultService.GetClient;\r \r         const string templateBodyAPNS = \"{\"aps\":{\"alert\":\"$(messageParam)\"}}\";\r \r         JObject templates = new JObject();\r         templates[\"genericMessage\"] = new JObject\r         {\r             {\"body\", templateBodyAPNS}\r         };\r \r         // Register for push with your mobile app\r         var push = client.GetPush();\r         push.RegisterAsync(deviceToken, templates);\r     }\r     ```\r \r 4. 然后，重写 **DidReceivedRemoteNotification** 事件：\r \r     ```\r     public override void DidReceiveRemoteNotification (UIApplication application, NSDictionary userInfo, Action<UIBackgroundFetchResult> completionHandler)\r     {\r         NSDictionary aps = userInfo.ObjectForKey(new NSString(\"aps\")) as NSDictionary;\r \r         string alert = string.Empty;\r         if (aps.ContainsKey(new NSString(\"alert\")))\r             alert = (aps [new NSString(\"alert\")] as NSString).ToString();\r \r         //show alert\r         if (!string.IsNullOrEmpty(alert))\r         {\r             UIAlertView avAlert = new UIAlertView(\"Notification\", alert, null, \"OK\", null);\r             avAlert.Show();\r         }\r     }\r     ```\r \r 你的应用现已更新，可支持推送通知。\r \r ## <a name=\"test\"></a>在应用程序中测试推送通知\r \r 1. 在支持 iOS 的设备中按“运行”按钮生成项目并启动应用，然后单击“确定”接受推送通知。\r \r     > [!NOTE]\r     > 你必须显式接受来自应用程序的推送通知。此请求只会在首次运行应用程序时出现。\r     >\r     >\r \r 2. 在应用中，键入一项任务，然后单击加号 (**+**) 图标。\r \r 3. 检查是否已收到通知，然后单击“确定”以取消通知。\r \r 4. 重复步骤 2 并立即关闭应用，然后检查是否已显示通知。\r \r 你已成功完成本教程。\r \r <!-- Images. -->\r \r <!-- URLs. -->\r \r <!---HONumber=Mooncake_1219_2016-->"}